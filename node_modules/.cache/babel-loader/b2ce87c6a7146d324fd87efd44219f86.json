{"ast":null,"code":"import { Component } from 'react';\nimport PaymentGenerator from '../Financials/Calculator/PaymentGenerator';\nimport Tick from '../../Assets/tick.mp3';\nimport { Howl, Howler } from 'howler'; // const pGenerator = new PaymentGenerator()\n\nclass TimerLogic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setValue = valFunc => {\n      this.value = valFunc;\n    };\n\n    this.stepValue = v => {\n      // v stands for value\n      if (v > 1) {\n        return 1;\n      } else {\n        return Math.round(v * 5) / 5; // denotes the amount of steps to take. 5 is assigned to 5 steps given a value of 0.2\n      }\n    };\n\n    this.state = {\n      hours: 0,\n      stagedMinutes: 0,\n      value: 0.0\n    };\n    this.sound = new Howl({\n      src: [Tick],\n      volume: 0.4\n    });\n  }\n\n  componentDidMount() {\n    scrollTime = stepVal => {\n      var givenValue = Math.round(stepVal * 100); // console.log(stepVal)\n      // console.log(givenValue)\n\n      var minutes = Math.round(300 * givenValue / 100); //300 is max for 5 hours\n      // console.log(minutes)\n      // get hours\n\n      if (minutes >= 60) {\n        this.hours = Math.floor(minutes / 60);\n      } else {\n        this.hours = 0;\n      } // First Check if you're at a full hour\n\n\n      if (minutes / 60 == this.hours) {\n        this.stagedMinutes = '00';\n      } // Else run algorithm\n      else {\n          this.stagedMinutes = minutes % 60 % 100;\n        }\n\n      PaymentGenerator(this.hours, this.stagedMinutes); // Sound generator\n      // this.sound.play()\n\n      return parseInt(`${this.hours}${this.stagedMinutes}`) // `0${this.hours}h : ${this.stagedMinutes}m`\n      ;\n    };\n  }\n\n} // End of Class\n\n\nexport default TimerLogic;","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Timer/TimerLogic.js"],"names":["Component","PaymentGenerator","Tick","Howl","Howler","TimerLogic","constructor","props","setValue","valFunc","value","stepValue","v","Math","round","state","hours","stagedMinutes","sound","src","volume","componentDidMount","scrollTime","stepVal","givenValue","minutes","floor","parseInt"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,gBAAP,MAA6B,2CAA7B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,QAA3B,C,CAEA;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAatBC,QAbsB,GAaXC,OAAO,IAAG;AACrB,WAAKC,KAAL,GAAaD,OAAb;AACC,KAfqB;;AAAA,SAiBtBE,SAjBsB,GAiBVC,CAAC,IAAG;AAAE;AACd,UAAGA,CAAC,GAAG,CAAP,EAAS;AACL,eAAO,CAAP;AACH,OAFD,MAEK;AACD,eAAOC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,CAAf,IAAoB,CAA3B,CADC,CAC4B;AAChC;AACJ,KAvBqB;;AAEd,SAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CADE;AAETC,MAAAA,aAAa,EAAE,CAFN;AAGTP,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKA,SAAKQ,KAAL,GAAa,IAAIf,IAAJ,CAAS;AAClBgB,MAAAA,GAAG,EAAE,CAACjB,IAAD,CADa;AAElBkB,MAAAA,MAAM,EAAE;AAFU,KAAT,CAAb;AAGH;;AAeLC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,UAAU,GAAGC,OAAO,IAAI;AACpB,UAAIC,UAAU,GAAGX,IAAI,CAACC,KAAL,CAAWS,OAAO,GAAC,GAAnB,CAAjB,CADoB,CAEpB;AACA;;AACA,UAAIE,OAAO,GAAIZ,IAAI,CAACC,KAAL,CAAW,MAAMU,UAAN,GAAmB,GAA9B,CAAf,CAJoB,CAI8B;AAClD;AACA;;AACA,UAAIC,OAAO,IAAI,EAAf,EAAkB;AACd,aAAKT,KAAL,GAAaH,IAAI,CAACa,KAAL,CAAWD,OAAO,GAAG,EAArB,CAAb;AACH,OAFD,MAEK;AACD,aAAKT,KAAL,GAAa,CAAb;AACH,OAXmB,CAYpB;;;AACA,UAAGS,OAAO,GAAG,EAAV,IAAgB,KAAKT,KAAxB,EAA8B;AAC1B,aAAKC,aAAL,GAAqB,IAArB;AACH,OAFD,CAGA;AAHA,WAII;AACH,eAAKA,aAAL,GAAsBQ,OAAO,GAAG,EAAV,GAAe,GAArC;AACA;;AACDxB,MAAAA,gBAAgB,CAAC,KAAKe,KAAN,EAAa,KAAKC,aAAlB,CAAhB,CApBoB,CAqBpB;AACA;;AAEA,aAEIU,QAAQ,CAAE,GAAE,KAAKX,KAAM,GAAE,KAAKC,aAAc,EAApC,CAFZ,CAGI;AAHJ;AAOP,KA/BG;AAgCH;;AA3DkC,C,CAwEjC;;;AAEF,eAAeZ,UAAf","sourcesContent":["import { Component } from 'react'\nimport PaymentGenerator from '../Financials/Calculator/PaymentGenerator'\nimport Tick from '../../Assets/tick.mp3'\nimport {Howl, Howler} from 'howler'\n\n// const pGenerator = new PaymentGenerator()\n\nclass TimerLogic extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            hours: 0,\n            stagedMinutes: 0,\n            value: 0.0\n        }\n        this.sound = new Howl({\n            src: [Tick], \n            volume: 0.4})\n    }\n\n\nsetValue = valFunc =>{\nthis.value = valFunc\n}\n\nstepValue = v =>{ // v stands for value\n    if(v > 1){\n        return 1\n    }else{\n        return Math.round(v * 5) / 5 // denotes the amount of steps to take. 5 is assigned to 5 steps given a value of 0.2\n    }\n}\n\ncomponentDidMount(){ \n    scrollTime = stepVal => {\n        var givenValue = Math.round(stepVal*100)\n        // console.log(stepVal)\n        // console.log(givenValue)\n        var minutes =  Math.round(300 * givenValue / 100) //300 is max for 5 hours\n        // console.log(minutes)\n        // get hours\n        if (minutes >= 60){\n            this.hours = Math.floor(minutes / 60)\n        }else{\n            this.hours = 0\n        }\n        // First Check if you're at a full hour\n        if(minutes / 60 == this.hours){\n            this.stagedMinutes = '00'\n        }\n        // Else run algorithm\n        else{\n         this.stagedMinutes = (minutes % 60 % 100)\n        }\n        PaymentGenerator(this.hours, this.stagedMinutes)\n        // Sound generator\n        // this.sound.play()\n  \n        return(\n\n            parseInt(`${this.hours}${this.stagedMinutes}`)\n            // `0${this.hours}h : ${this.stagedMinutes}m`\n        )\n       \n\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n} // End of Class\n\nexport default TimerLogic"]},"metadata":{},"sourceType":"module"}