{"ast":null,"code":"import React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n/**\n* @author\n* @function PaymentForm\n**/\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = props => {\n  //         // using state to keep track of stripe payment, show errors, and manange user interface\n  // const [success, setSuccess] = useState(false)\n  // const [error, setError] = useState(null)\n  // const [processing, setProcessing] = useState('')\n  // const [disabled, setDisabled] = useState(true)\n  // const [clientSecret, setClientSecrete] = useState('')\n  // const stripe = useStripe()\n  // const element = useElements()\n  // const handleSubmit = async (e) =>{\n  //     e.preventDefault()\n  //     const {error, paymentMethod} = await stripe.createPaymentMethod({\n  //         type: 'card', \n  //         card: element.getElement(CardElement)\n  //     })\n  // if(!error){\n  //     try{\n  //         const {id} = paymentMethod\n  //         const response = await axios.post(\"http://localhost:4000/payment\", {\n  //             amount: 100, \n  //             id\n  //         })\n  //         if(response.data.success){\n  //             console.log(\"SuccessFul Payment\")\n  //             setSuccess(true)\n  //         }\n  //     }catch(error){\n  // console.log('[error'. error)\n  //     }\n  // }\n  // } // end of handle submit\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"working\"\n  }, void 0, false);\n};\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Stripe/PaymentForm.js"],"names":["React","useState","CardElement","useElements","useStripe","axios","PaymentForm","props"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIE,sBACE;AAAA;AAAA,mBADF;AAsBA,CA9DF;;KAAMD,W;AAgEN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport axios from 'axios'\n\n/**\n* @author\n* @function PaymentForm\n**/\n\nconst PaymentForm = (props) => {\n//         // using state to keep track of stripe payment, show errors, and manange user interface\n// const [success, setSuccess] = useState(false)\n// const [error, setError] = useState(null)\n// const [processing, setProcessing] = useState('')\n// const [disabled, setDisabled] = useState(true)\n// const [clientSecret, setClientSecrete] = useState('')\n\n// const stripe = useStripe()\n// const element = useElements()\n\n// const handleSubmit = async (e) =>{\n//     e.preventDefault()\n\n//     const {error, paymentMethod} = await stripe.createPaymentMethod({\n//         type: 'card', \n//         card: element.getElement(CardElement)\n//     })\n\n// if(!error){\n//     try{\n//         const {id} = paymentMethod\n//         const response = await axios.post(\"http://localhost:4000/payment\", {\n//             amount: 100, \n//             id\n//         })\n//         if(response.data.success){\n//             console.log(\"SuccessFul Payment\")\n//             setSuccess(true)\n//         }\n\n//     }catch(error){\n// console.log('[error'. error)\n//     }\n// }\n\n// } // end of handle submit\n\n\n\n  return(\n    <>\n    working\n    {/* {!success ? \n    <form onSubmit={handleSubmit}>\n        <fieldset className='FormGroup'>\n            <div className=\"formRow\">\n                <CardElement />\n            </div>\n        </fieldset>\n        <button>Pay now</button>\n    </form>:\n    <div>\n        <h1> \n            Payment SuccessFul\n        </h1>\n    </div>\n\n} */}\n    </>\n   )\n\n }\n\nexport default PaymentForm;"]},"metadata":{},"sourceType":"module"}