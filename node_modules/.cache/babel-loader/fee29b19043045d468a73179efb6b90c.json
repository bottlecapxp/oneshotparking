{"ast":null,"code":"import _classCallCheck from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from'react';import PaymentGenerator from'../Financials/Calculator/PaymentGenerator';// const pGenerator = new PaymentGenerator()\nvar TimerLogic=/*#__PURE__*/function(_Component){_inherits(TimerLogic,_Component);var _super=_createSuper(TimerLogic);function TimerLogic(props){var _this;_classCallCheck(this,TimerLogic);_this=_super.call(this,props);_this.setValue=function(valFunc){_this.value=valFunc;};_this.stepValue=function(v){// v stands for value\nif(v>1){return 1;}else{return Math.round(v*20)/20;}};_this.scrollTime=function(stepVal){var givenValue=Math.round(stepVal*100);var minutes=Math.round(300*givenValue/100);//300 is max for 5 hours\n// get hours\nif(minutes>60){_this.hours=Math.floor(minutes/60);}else if(minutes/60===1){_this.hours=1;}else{_this.hours=0;}// First Check if you're at a full hour\nif(minutes===60||minutes/60===_this.hours){_this.stagedMinutes='00';}// Else run algorithm\nelse{_this.stagedMinutes=minutes%60%100;}PaymentGenerator(_this.hours,_this.stagedMinutes);return parseInt(\"\".concat(_this.hours).concat(_this.stagedMinutes))// `0${this.hours}h : ${this.stagedMinutes}m`\n;};_this.state={hours:0,stagedMinutes:0,value:0.0};return _this;}return TimerLogic;}(Component);// End of Class\nexport default TimerLogic;","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Timer/TimerLogic.js"],"names":["Component","PaymentGenerator","TimerLogic","props","setValue","valFunc","value","stepValue","v","Math","round","scrollTime","stepVal","givenValue","minutes","hours","floor","stagedMinutes","parseInt","state"],"mappings":"geAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2CAA7B,CAGA;GAEMC,CAAAA,U,wGACF,oBAAYC,KAAZ,CAAkB,4CACd,uBAAMA,KAAN,EADc,MAUtBC,QAVsB,CAUX,SAAAC,OAAO,CAAG,CACrB,MAAKC,KAAL,CAAaD,OAAb,CACC,CAZqB,OActBE,SAdsB,CAcV,SAAAC,CAAC,CAAG,CAAE;AACd,GAAGA,CAAC,CAAG,CAAP,CAAS,CACL,MAAO,EAAP,CACH,CAFD,IAEK,CACD,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,CAAC,CAAG,EAAf,EAAqB,EAA5B,CACH,CACJ,CApBqB,OAuBtBG,UAvBsB,CAuBT,SAAAC,OAAO,CAAI,CAChB,GAAIC,CAAAA,UAAU,CAAGJ,IAAI,CAACC,KAAL,CAAWE,OAAO,CAAC,GAAnB,CAAjB,CACA,GAAIE,CAAAA,OAAO,CAAIL,IAAI,CAACC,KAAL,CAAW,IAAMG,UAAN,CAAmB,GAA9B,CAAf,CAAkD;AAElD;AACA,GAAIC,OAAO,CAAG,EAAd,CAAiB,CACb,MAAKC,KAAL,CAAaN,IAAI,CAACO,KAAL,CAAWF,OAAO,CAAG,EAArB,CAAb,CACH,CAFD,IAEO,IAAGA,OAAO,CAAG,EAAV,GAAiB,CAApB,CAAsB,CACzB,MAAKC,KAAL,CAAa,CAAb,CACH,CAFM,IAEF,CACD,MAAKA,KAAL,CAAa,CAAb,CACH,CACD;AACA,GAAGD,OAAO,GAAK,EAAZ,EAAmBA,OAAO,CAAG,EAAX,GAAmB,MAAKC,KAA7C,CAAmD,CAC/C,MAAKE,aAAL,CAAqB,IAArB,CACH,CACD;AAHA,IAII,CACH,MAAKA,aAAL,CAAsBH,OAAO,CAAG,EAAV,CAAe,GAArC,CACA,CACDb,gBAAgB,CAAC,MAAKc,KAAN,CAAa,MAAKE,aAAlB,CAAhB,CACA,MACIC,CAAAA,QAAQ,WAAI,MAAKH,KAAT,SAAiB,MAAKE,aAAtB,EACR;AAFJ,CAKP,CAjDqB,CAEd,MAAKE,KAAL,CAAa,CACTJ,KAAK,CAAE,CADE,CAETE,aAAa,CAAE,CAFN,CAGTX,KAAK,CAAE,GAHE,CAAb,CAFc,aAOjB,C,oBARoBN,S,EA+DvB;AAEF,cAAeE,CAAAA,UAAf","sourcesContent":["import { Component } from 'react'\nimport PaymentGenerator from '../Financials/Calculator/PaymentGenerator'\n\n\n// const pGenerator = new PaymentGenerator()\n\nclass TimerLogic extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            hours: 0,\n            stagedMinutes: 0,\n            value: 0.0\n        }\n    }\n\n\nsetValue = valFunc =>{\nthis.value = valFunc\n}\n\nstepValue = v =>{ // v stands for value\n    if(v > 1){\n        return 1\n    }else{\n        return Math.round(v * 20) / 20\n    }\n}\n\n\nscrollTime = stepVal => {\n        var givenValue = Math.round(stepVal*100)\n        var minutes =  Math.round(300 * givenValue / 100) //300 is max for 5 hours\n\n        // get hours\n        if (minutes > 60){\n            this.hours = Math.floor(minutes / 60)\n        } else if(minutes / 60 === 1){\n            this.hours = 1\n        }else{\n            this.hours = 0\n        }\n        // First Check if you're at a full hour\n        if(minutes === 60 || (minutes / 60) === this.hours){\n            this.stagedMinutes = '00'\n        }\n        // Else run algorithm\n        else{\n         this.stagedMinutes = (minutes % 60 % 100)\n        }\n        PaymentGenerator(this.hours, this.stagedMinutes)\n        return(\n            parseInt(`${this.hours}${this.stagedMinutes}`)\n            // `0${this.hours}h : ${this.stagedMinutes}m`\n        )\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n} // End of Class\n\nexport default TimerLogic"]},"metadata":{},"sourceType":"module"}