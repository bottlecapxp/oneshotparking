{"ast":null,"code":"import _classCallCheck from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from'react';var MaxSelection=/*#__PURE__*/function(_Component){_inherits(MaxSelection,_Component);var _super=_createSuper(MaxSelection);function MaxSelection(props){var _this;_classCallCheck(this,MaxSelection);_this=_super.call(this,props);_this.set_conditions=function(num){switch(num){case num<18&&num>6?_this.hour:'':var remaining_time=_this.hour;if(_this.hours==_this.hour){_this.max_num=parseFloat(\"0.0\".concat(remaining_time));}else{_this.max_num=0.12;}break;case _this.hour>=18&&_this.hour<24?_this.hour:'':var rem_time=24-_this.hour+6;if(_this.hours==_this.hour){_this.max_num=rem_time>9?_this.max_num=parseFloat(\"0.\".concat(rem_time)):parseFloat(\"0.0\".concat(rem_time));}else{_this.max_num=0.12;}break;case _this.hour<6?_this.hour:'':var rem_hr=_this.hour;_this.max_num=0.12;if(_this.localStorateMax==1){_this.max_num=0.12;}break;}console.log(_this.max_num);return _this.max_num;};_this.date=new Date();_this.getExpTime=localStorage.getItem('expTime')?localStorage.getItem('expTime').split(':'):'';_this.hours=_this.getExpTime[0];_this.hour=_this.date.getHours();_this.minutes=_this.date.getMinutes();_this.localStorateMax=localStorage.getItem('max');_this.max_num=0.00;return _this;}// init_check = () =>{ \n//     if (this.localStorateMax == 0) {\n//         console.log('localStorage = 0')\n//                     switch (this.hour) {\n//                     case(this.hour < 18 && this.hour >6):\n//                         const remaining_time = this.hour\n//                         this.max_num = parseFloat(`0.0${remaining_time}`)\n//                         break;\n//                     case (this.hour >= 18 && this.hour < 24 ?):\n//                         const rem_time = (24 - this.hour) + 6\n//                         this.max_num = (rem_time > 9 ? this.max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n//                         break;\n//                     case(this.hour <6):\n//                         const rem_hr = this.hour\n//                         this.max_num = `0.0${rem_hr}`\n//                         break;\n//                 }\n//                     \n//     }\n// }\n// seconds_calculation = () =>{ \n//     this.hours * 3600\n//     this.mins * 60\n//     return  (this.hours)\n// }\nreturn MaxSelection;}(Component);export default MaxSelection;// if (this.localStorateMax == 0) {\n//     this.init_check()\n//     console.log('sero')\n// }\n// else if(this.localStorateMax == 1){ \n//     this.max_num = '0.12'\n// }\n// get the localstorage exp time and match it with 6\n// if match, we're going to assign the this.max_num variable to 12\n// if it is not 6, then we're going to switch case and return the result to this.max_num\n// \tif (localStorage_ == 1) {\n// \t\tthis.max_num = '0.12'\n// \t\tconsole.log('still shows under condition')\n// \t}\n// \tif (localStorage_ = 0){ \n// \t\tconsole.log('Not equal to 6')\n// \t}\n// }","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/max_selection/MaxSelection.js"],"names":["Component","MaxSelection","props","set_conditions","num","hour","remaining_time","hours","max_num","parseFloat","rem_time","rem_hr","localStorateMax","console","log","date","Date","getExpTime","localStorage","getItem","split","getHours","minutes","getMinutes"],"mappings":"6gBAAA,OAASA,SAAT,KAA0B,OAA1B,C,GAIMC,CAAAA,Y,4GACF,sBAAYC,KAAZ,CAAmB,8CACf,uBAAMA,KAAN,EADe,MAyCnBC,cAzCmB,CAyCF,SAACC,GAAD,CAAS,CACtB,OAAOA,GAAP,EACI,IAAMA,CAAAA,GAAG,CAAG,EAAN,EAAYA,GAAG,CAAG,CAAlB,CAAoB,MAAKC,IAAzB,CAA8B,EAApC,CACI,GAAMC,CAAAA,cAAc,CAAG,MAAKD,IAA5B,CACA,GAAI,MAAKE,KAAL,EAAc,MAAKF,IAAvB,CAA6B,CACzB,MAAKG,OAAL,CAAeC,UAAU,cAAOH,cAAP,EAAzB,CACH,CAFD,IAEK,CACD,MAAKE,OAAL,CAAe,IAAf,CACH,CACL,MACA,IAAK,OAAKH,IAAL,EAAa,EAAb,EAAmB,MAAKA,IAAL,CAAY,EAA/B,CAAkC,MAAKA,IAAvC,CAA4C,EAAjD,CACI,GAAMK,CAAAA,QAAQ,CAAI,GAAK,MAAKL,IAAX,CAAmB,CAApC,CACA,GAAI,MAAKE,KAAL,EAAc,MAAKF,IAAvB,CAA6B,CACzB,MAAKG,OAAL,CAAgBE,QAAQ,CAAG,CAAX,CAAe,MAAKF,OAAL,CAAeC,UAAU,aAAMC,QAAN,EAAxC,CAA4DD,UAAU,cAAOC,QAAP,EAAtF,CACH,CAFD,IAEK,CACD,MAAKF,OAAL,CAAe,IAAf,CACH,CACL,MACA,IAAK,OAAKH,IAAL,CAAY,CAAZ,CAAc,MAAKA,IAAnB,CAAwB,EAA7B,CACI,GAAMM,CAAAA,MAAM,CAAG,MAAKN,IAApB,CACA,MAAKG,OAAL,CAAe,IAAf,CACA,GAAI,MAAKI,eAAL,EAAwB,CAA5B,CAA+B,CAC3B,MAAKJ,OAAL,CAAe,IAAf,CACH,CACL,MAvBJ,CA2BAK,OAAO,CAACC,GAAR,CAAY,MAAKN,OAAjB,EACA,MAAO,OAAKA,OAAZ,CAEH,CAxEkB,CAEf,MAAKO,IAAL,CAAY,GAAIC,CAAAA,IAAJ,EAAZ,CACA,MAAKC,UAAL,CAAmBC,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCD,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,KAAhC,CAAsC,GAAtC,CAAhC,CAA2E,EAA9F,CACA,MAAKb,KAAL,CAAa,MAAKU,UAAL,CAAgB,CAAhB,CAAb,CACA,MAAKZ,IAAL,CAAY,MAAKU,IAAL,CAAUM,QAAV,EAAZ,CACA,MAAKC,OAAL,CAAe,MAAKP,IAAL,CAAUQ,UAAV,EAAf,CACA,MAAKX,eAAL,CAAuBM,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAvB,CACA,MAAKX,OAAL,CAAe,IAAf,CARe,aAUlB,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;sBAxCuBR,S,EA4E3B,cAAeC,CAAAA,YAAf,CAEQ;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEN;AACA;AACA;AACD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { Component } from 'react'\n\n\n\nclass MaxSelection extends Component {\n    constructor(props) {\n        super(props)\n        this.date = new Date()\n        this.getExpTime = (localStorage.getItem('expTime')?localStorage.getItem('expTime').split(':'):'')\n        this.hours = this.getExpTime[0]\n        this.hour = this.date.getHours()\n        this.minutes = this.date.getMinutes()\n        this.localStorateMax = localStorage.getItem('max')\n        this.max_num = 0.00\n\n    }\n\n\n    // init_check = () =>{ \n    //     if (this.localStorateMax == 0) {\n    //         console.log('localStorage = 0')\n    //                     switch (this.hour) {\n    //                     case(this.hour < 18 && this.hour >6):\n    //                         const remaining_time = this.hour\n    //                         this.max_num = parseFloat(`0.0${remaining_time}`)\n    //                         break;\n    //                     case (this.hour >= 18 && this.hour < 24 ?):\n    //                         const rem_time = (24 - this.hour) + 6\n    //                         this.max_num = (rem_time > 9 ? this.max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n    //                         break;\n    //                     case(this.hour <6):\n    //                         const rem_hr = this.hour\n    //                         this.max_num = `0.0${rem_hr}`\n\n    //                         break;\n    //                 }\n    //                     \n    //     }\n    // }\n\n    // seconds_calculation = () =>{ \n    //     this.hours * 3600\n    //     this.mins * 60\n    //     return  (this.hours)\n    // }\n\n    set_conditions = (num) => {\n        switch(num){ \n            case (num < 18 && num > 6?this.hour:''):\n                const remaining_time = this.hour\n                if (this.hours == this.hour) {\n                    this.max_num = parseFloat(`0.0${remaining_time}`)\n                }else{ \n                    this.max_num = 0.12\n                }\n            break;\n            case(this.hour >= 18 && this.hour < 24?this.hour:''):\n                const rem_time = (24 - this.hour) + 6\n                if (this.hours == this.hour) {\n                    this.max_num = (rem_time > 9 ? this.max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`)) \n                }else{ \n                    this.max_num = 0.12\n                }\n            break;\n            case(this.hour < 6?this.hour:''):\n                const rem_hr = this.hour\n                this.max_num = 0.12\n                if (this.localStorateMax == 1) {\n                    this.max_num = 0.12\n                }\n            break;\n            \n        }\n       \n        console.log(this.max_num)\n        return this.max_num\n\n    }\n}\n\nexport default MaxSelection;\n\n        // if (this.localStorateMax == 0) {\n        //     this.init_check()\n        //     console.log('sero')\n        // }\n        // else if(this.localStorateMax == 1){ \n\n        //     this.max_num = '0.12'\n\n        // }\n\n\t\t// get the localstorage exp time and match it with 6\n\t\t// if match, we're going to assign the this.max_num variable to 12\n\t\t// if it is not 6, then we're going to switch case and return the result to this.max_num\n\t// \tif (localStorage_ == 1) {\n\t// \t\tthis.max_num = '0.12'\n\t// \t\tconsole.log('still shows under condition')\n\t// \t}\n\t// \tif (localStorage_ = 0){ \n\n\t// \t\tconsole.log('Not equal to 6')\n\t// \t}\n\t// }\n"]},"metadata":{},"sourceType":"module"}