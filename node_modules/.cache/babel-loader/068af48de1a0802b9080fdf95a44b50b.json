{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { PaymentContext } from '../../../Context/PaymentContext';\n\nconst PaymentGenerator = (hours, minutes) => {\n  _s();\n\n  const {\n    setBilling,\n    setTime\n  } = useContext(PaymentContext); // What is the rate per hour? (R$4)\n\n  const hourly_rate = 4; // what is the rate per 15mins (R$1)\n\n  const minute_rate = 1; // To calculate rate per hour (if hour is > 0 then hour times rate )\n  //  To calculate rate per minute (minute / 15 * rate per minute)\n\n  useEffect(() => {\n    setBilling(hours * hourly_rate + minutes / 15 * minute_rate); // Set Selected time here for tracking and to be pushed to local storage by confirm BTN\n\n    setTime(parseInt(`${hours}${minutes}`));\n  }, [hours, minutes]);\n};\n\n_s(PaymentGenerator, \"AZKVPSSDgKG0RpSLWuG7ebwdWlg=\");\n\n_c = PaymentGenerator;\nexport default PaymentGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentGenerator\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Financials/Calculator/PaymentGenerator.js"],"names":["React","useEffect","useState","useContext","PaymentContext","PaymentGenerator","hours","minutes","setBilling","setTime","hourly_rate","minute_rate","parseInt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,SAASC,cAAT,QAA+B,iCAA/B;;AAOA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAAA;;AACzC,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAAwBN,UAAU,CAACC,cAAD,CAAxC,CADyC,CAIzC;;AACA,QAAMM,WAAW,GAAG,CAApB,CALyC,CAMzC;;AACA,QAAMC,WAAW,GAAG,CAApB,CAPyC,CASzC;AACA;;AACAV,EAAAA,SAAS,CAAC,MAAI;AAEVO,IAAAA,UAAU,CAACF,KAAK,GAAGI,WAAR,GAAuBH,OAAO,GAAG,EAAX,GAAiBI,WAAxC,CAAV,CAFU,CAGV;;AACAF,IAAAA,OAAO,CAACG,QAAQ,CAAE,GAAEN,KAAM,GAAEC,OAAQ,EAApB,CAAT,CAAP;AACH,GALQ,EAKN,CAACD,KAAD,EAAQC,OAAR,CALM,CAAT;AAOH,CAlBD;;GAAMF,gB;;KAAAA,gB;AAsBN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState,useContext } from 'react'\nimport { PaymentContext } from '../../../Context/PaymentContext'\n\n\n\n\n\n\nconst PaymentGenerator = (hours, minutes) => {\n    const {setBilling, setTime} = useContext(PaymentContext)\n \n\n    // What is the rate per hour? (R$4)\n    const hourly_rate = 4\n    // what is the rate per 15mins (R$1)\n    const minute_rate = 1\n\n    // To calculate rate per hour (if hour is > 0 then hour times rate )\n    //  To calculate rate per minute (minute / 15 * rate per minute)\n    useEffect(()=>{\n        \n        setBilling(hours * hourly_rate + (minutes / 15) * minute_rate)\n        // Set Selected time here for tracking and to be pushed to local storage by confirm BTN\n        setTime(parseInt(`${hours}${minutes}`))\n    }, [hours, minutes])\n\n}\n\n\n\nexport default PaymentGenerator;\n \n\n"]},"metadata":{},"sourceType":"module"}