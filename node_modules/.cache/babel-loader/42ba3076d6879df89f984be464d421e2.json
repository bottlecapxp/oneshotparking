{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/LongTimeSelection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext, useEffect, useState } from 'react';\nimport { PaymentContext } from '../Context/PaymentContext';\nimport CircleBtnsImg from '../Components/Buttons/CircleBtn_img/CircleBtnsImg';\nimport ScrollableDatePicker from '../Components/ScrollableDatePicker/ScrollableDatePicker';\nimport Header from '../Components/Header/Header';\n/**\n* @author\n* @function LongTimeSelections\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LongTimeSelections = props => {\n  _s();\n\n  const {\n    totalbilling,\n    setBilling\n  } = useContext(PaymentContext);\n  var mins = [];\n  var hrs = [];\n  var month_days = [];\n  const date = new Date();\n\n  const get_days_of_month = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  }; // const find_todays_remaining_hrs = 24 - date.getHours()\n\n\n  const days_in_current_month = get_days_of_month(date.getMonth(), date.getFullYear());\n  const options = {\n    month: 'long'\n  };\n  const current_month = new Intl.DateTimeFormat('en-US', options).format();\n  const [selectedDate, setSelectedDate] = useState({\n    date: '',\n    hours: 0,\n    minutes: 0\n  });\n\n  const setExpiredTime = (name, val, groups) => {\n    const newGroup = groups;\n    setSelectedDate({ ...selectedDate,\n      [name]: val\n    });\n    newGroup[name] = val;\n    setSelectedDate(newGroup);\n  };\n\n  const generator = () => {\n    var setdays, sethours;\n    const todaysDate = date.getDate();\n    const selected_date_array = selectedDate.date.split(' ');\n    const selected_date = parseInt(selected_date_array[1]); // rules\n\n    sethours = selectedDate.meridian == 'pm' ? selectedDate.hours + 12 : selectedDate.hours;\n\n    if (todaysDate < selected_date) {\n      setdays = selected_date - todaysDate;\n    }\n\n    return {\n      hours: sethours,\n      mins: selectedDate.minutes,\n      days: setdays == undefined ? 0 : setdays\n    };\n  };\n\n  const constructing_billing = () => {\n    var night_hr_rate, night_hr_max, day_hr_rate, day_hr_max, collective_days_rate, full_day_rate, startBilling, endofdayBilling, lastHr, remHr, collective_days;\n    var remNight, remDay, remExtra, last_night, last_day, last_extra, startSum, lastSum;\n    day_hr_rate = .10;\n    var dayLimit = 2;\n    var nightLimit = 3;\n    night_hr_rate = .20;\n    day_hr_max = .20;\n    night_hr_max = .60;\n    full_day_rate = night_hr_max * 2 + day_hr_max;\n    var settime = generator();\n    const startTime = `${date.getHours() > 12 ? date.getHours() - 12 : date.getHours()}:${date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()}${date.getHours() > 12 ? 'pm' : 'am'}`;\n    var fullStartHr;\n    var dullEndHr;\n    collective_days_rate = settime.days >= 2 ? (settime.days - 1) * full_day_rate : 0;\n    collective_days = settime.days >= 2 ? settime.days - 1 : 0; // current day calc\n\n    if (date.getHours() < 6) {\n      remHr = 6 - date.getHours();\n      remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate;\n      remDay = day_hr_max;\n      remExtra = night_hr_max;\n      fullStartHr = remHr + 18;\n      startSum = remNight + remDay + remExtra;\n    }\n\n    if (date.getHours() > 6 && date.getHours() < 18) {\n      remHr = 18 - date.getHours();\n      remDay = remHr >= dayLimit ? day_hr_max : remHr * day_hr_rate;\n      remNight = night_hr_max;\n      remExtra = 0;\n      fullStartHr = remHr + 6;\n      startSum = remNight + remDay + remExtra;\n    }\n\n    if (date.getHours() > 18) {\n      remHr = 24 - date.getHours();\n      remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate;\n      remDay = 0;\n      remExtra = 0;\n      fullStartHr = remHr;\n      startSum = remNight + remDay + remExtra;\n    } // end date calc\n\n\n    if (settime.hours <= 6) {\n      last_night = settime.hours >= nightLimit ? night_hr_max : settime.hours * night_hr_rate;\n      last_day = 0;\n      last_extra = 0;\n      lastSum = last_night + last_day + last_extra;\n    }\n\n    if (settime.hours > 6 && settime.hours <= 18) {\n      last_night = night_hr_max;\n      last_day = settime.hours - 6 >= dayLimit ? day_hr_max : (settime.hours - 6) * day_hr_rate;\n      last_extra = 0;\n      lastSum = last_night + last_day + last_extra;\n    }\n\n    if (settime.hours > 18) {\n      last_night = night_hr_max;\n      last_day = day_hr_max;\n      last_extra = settime.hours - 18 >= nightLimit ? night_hr_max : (settime.hours - 18) * night_hr_rate;\n      lastSum = last_night + last_day + last_extra;\n    } // if(settime.hours == 0 && settime.mins == 0){\n    // }\n\n\n    const sumbilling = parseFloat(collective_days_rate + startSum + lastSum).toFixed(2);\n    const expTime = `${selectedDate.date} - ${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`;\n    const summedTime = fullStartHr + collective_days * 24 + settime.hours + date.getHours();\n    const expTimeInSecs = (summedTime + date.getHours()) * 3600;\n    const setCount = date.getHours() * 3600 + date.getMinutes() * 60; // localStorage.setItem('count', 0)\n\n    localStorage.setItem('expTimeInSecs', expTimeInSecs);\n    setBilling(sumbilling);\n    localStorage.setItem('expTime', expTime);\n    localStorage.setItem('total', totalbilling);\n    localStorage.setItem('startTime', startTime);\n    return totalbilling;\n  };\n\n  constructing_billing();\n  generator();\n  mins.push({\n    value: '00',\n    label: '00'\n  });\n\n  for (var i = 0; i < 13; i++) {\n    hrs.push({\n      value: i,\n      label: i\n    });\n  }\n\n  for (var i = date.getDate() + 1; i < days_in_current_month + 1; i++) {\n    month_days.push({\n      value: `${current_month.substring(0, 3)} ${i}`,\n      label: `${current_month.substring(0, 3)} ${i}`\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      home: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: '12%',\n          color: 'red'\n        },\n        children: \"Set Your Expiration Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ScrollableDatePicker, {\n        expired: setExpiredTime,\n        month: month_days,\n        hours: hrs,\n        minutes: mins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: 'center',\n          color: 'red'\n        },\n        children: \"Expires at:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [selectedDate.date, \" - \", `${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: 'center',\n          color: 'red'\n        },\n        children: \"Total Cost:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [\"$\", totalbilling]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll_confirm_holder\",\n        children: /*#__PURE__*/_jsxDEV(CircleBtnsImg, {\n          title: \"Confirm\",\n          img: \"\",\n          class: \"plateCapture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LongTimeSelections, \"ijqTfItsP8JNMm87eDtjZIUW1H0=\");\n\n_c = LongTimeSelections;\nexport default LongTimeSelections; // for (var i = 0; i < 60; i = i + 30) {\n//     mins.push({ value: i, label: i })\n// }\n// console.log(setCount)\n// console.log(expTimeInSecs)\n// console.log(fullStartHr)\n// console.log(collective_days * 24)\n// console.log(settime.hours)\n// console.log(date.getHours())\n// console.log(summedTime)\n// console.log(startSum)\n// console.log(lastSum)\n\nvar _c;\n\n$RefreshReg$(_c, \"LongTimeSelections\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/LongTimeSelection.js"],"names":["React","useContext","useEffect","useState","PaymentContext","CircleBtnsImg","ScrollableDatePicker","Header","LongTimeSelections","props","totalbilling","setBilling","mins","hrs","month_days","date","Date","get_days_of_month","month","year","getDate","days_in_current_month","getMonth","getFullYear","options","current_month","Intl","DateTimeFormat","format","selectedDate","setSelectedDate","hours","minutes","setExpiredTime","name","val","groups","newGroup","generator","setdays","sethours","todaysDate","selected_date_array","split","selected_date","parseInt","meridian","days","undefined","constructing_billing","night_hr_rate","night_hr_max","day_hr_rate","day_hr_max","collective_days_rate","full_day_rate","startBilling","endofdayBilling","lastHr","remHr","collective_days","remNight","remDay","remExtra","last_night","last_day","last_extra","startSum","lastSum","dayLimit","nightLimit","settime","startTime","getHours","getMinutes","fullStartHr","dullEndHr","sumbilling","parseFloat","toFixed","expTime","summedTime","expTimeInSecs","setCount","localStorage","setItem","push","value","label","i","substring","textAlign","paddingTop","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useContext, useEffect, useState } from 'react'\nimport { PaymentContext } from '../Context/PaymentContext'\nimport CircleBtnsImg from '../Components/Buttons/CircleBtn_img/CircleBtnsImg'\nimport ScrollableDatePicker from '../Components/ScrollableDatePicker/ScrollableDatePicker'\nimport Header from '../Components/Header/Header'\n\n/**\n* @author\n* @function LongTimeSelections\n**/\n\nconst LongTimeSelections = (props) => {\n    const { totalbilling, setBilling } = useContext(PaymentContext)\n    var mins = []\n    var hrs = []\n    var month_days = []\n    const date = new Date()\n    const get_days_of_month = (month, year) => {\n        return new Date(year, month, 0).getDate()\n    }\n    // const find_todays_remaining_hrs = 24 - date.getHours()\n    const days_in_current_month = get_days_of_month(date.getMonth(), date.getFullYear())\n    const options = { month: 'long' }\n    const current_month = new Intl.DateTimeFormat('en-US', options).format()\n\n\n    const [selectedDate, setSelectedDate] = useState({\n        date: '',\n        hours: 0,\n        minutes: 0\n    })\n\n\n    const setExpiredTime = (name, val, groups) => {\n        const newGroup = groups\n        setSelectedDate({\n            ...selectedDate, [name]: val\n        })\n        newGroup[name] = val\n        setSelectedDate(newGroup)\n    }\n\n\n    const generator = () => {\n        var setdays, sethours\n        const todaysDate = date.getDate()\n        const selected_date_array = selectedDate.date.split(' ')\n        const selected_date = parseInt(selected_date_array[1])\n\n        // rules\n        sethours = selectedDate.meridian == 'pm' ? (selectedDate.hours + 12) : selectedDate.hours\n        if (todaysDate < selected_date) {\n            setdays = selected_date - todaysDate\n        }\n\n        return { hours: sethours, mins: selectedDate.minutes, days: setdays == undefined ? 0 : setdays }\n    }\n\n\n    const constructing_billing = () => {\n        var night_hr_rate, night_hr_max, day_hr_rate, day_hr_max, collective_days_rate, full_day_rate, startBilling, endofdayBilling, lastHr, remHr, collective_days\n        var remNight, remDay, remExtra, last_night, last_day, last_extra, startSum, lastSum\n        day_hr_rate = .10\n        var dayLimit = 2\n        var nightLimit = 3\n        night_hr_rate = .20\n        day_hr_max = .20\n        night_hr_max = .60\n        full_day_rate = (night_hr_max * 2) + day_hr_max\n        var settime = generator()\n        const startTime = `${date.getHours()>12?date.getHours()-12:date.getHours()}:${date.getMinutes() < 10?`0${date.getMinutes()}`:date.getMinutes()}${date.getHours() > 12? 'pm': 'am'}`\n        var fullStartHr\n        var dullEndHr\n\n\n        collective_days_rate = settime.days >= 2 ? (settime.days - 1) * full_day_rate : 0\n        collective_days = settime.days >= 2 ? settime.days - 1 : 0\n\n        // current day calc\n        if (date.getHours() < 6) {\n            remHr = 6 - date.getHours()\n            remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate\n            remDay = day_hr_max\n            remExtra = night_hr_max\n            fullStartHr = remHr + 18\n            startSum = remNight + remDay + remExtra\n        }\n        if (date.getHours() > 6 && date.getHours() < 18) {\n            remHr = 18 - date.getHours()\n            remDay = remHr >= dayLimit ? day_hr_max : remHr * day_hr_rate\n            remNight = night_hr_max\n            remExtra = 0\n            fullStartHr = remHr + 6\n            startSum = remNight + remDay + remExtra\n\n        }\n        if (date.getHours() > 18) {\n            remHr = 24 - date.getHours()\n            remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate\n            remDay = 0\n            remExtra = 0\n            fullStartHr = remHr\n            startSum = remNight + remDay + remExtra\n        }\n\n\n\n\n        // end date calc\n        if (settime.hours <= 6) {\n            last_night = settime.hours >= nightLimit ? night_hr_max : settime.hours * night_hr_rate\n            last_day = 0\n            last_extra = 0\n            lastSum = last_night + last_day + last_extra\n        }\n        if (settime.hours > 6 && settime.hours <= 18) {\n            last_night = night_hr_max\n            last_day = (settime.hours - 6) >= dayLimit ? day_hr_max : (settime.hours - 6) * day_hr_rate\n            last_extra = 0\n            lastSum = last_night + last_day + last_extra\n        }\n        if (settime.hours > 18) {\n            last_night = night_hr_max\n            last_day = day_hr_max\n            last_extra = (settime.hours - 18) >= nightLimit ? night_hr_max : (settime.hours - 18) * night_hr_rate\n            lastSum = last_night + last_day + last_extra\n        }\n        // if(settime.hours == 0 && settime.mins == 0){\n\n        // }\n        const sumbilling = parseFloat(collective_days_rate + startSum + lastSum).toFixed(2)\n        const expTime = `${selectedDate.date} - ${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`\n        const summedTime = (fullStartHr + (collective_days * 24) + settime.hours + date.getHours())\n        const expTimeInSecs = (summedTime + date.getHours()) * 3600\n        const setCount = (date.getHours() * 3600) + (date.getMinutes() * 60)\n\n        // localStorage.setItem('count', 0)\n        localStorage.setItem('expTimeInSecs', expTimeInSecs)\n        setBilling(sumbilling)\n        localStorage.setItem('expTime', expTime)\n        localStorage.setItem('total', totalbilling)\n        localStorage.setItem('startTime', startTime)\n\n        return totalbilling\n    }\n    constructing_billing()\n    generator()\n\n\n\n\n\n    mins.push({ value: '00', label: '00' })\n\n    for (var i = 0; i < 13; i++) {\n        hrs.push({ value: i, label: i })\n    }\n    for (var i = date.getDate() + 1; i < (days_in_current_month + 1); i++) {\n        month_days.push({ value: `${current_month.substring(0, 3)} ${i}`, label: `${current_month.substring(0, 3)} ${i}` })\n    }\n\n\n    return (\n        <>\n\t\t<Header home={true}/>\n        <div className='global_container'>\n            <h2 style={{ textAlign: 'center', paddingTop: '12%', color: 'red' }}>Set Your Expiration Time</h2>\n            <ScrollableDatePicker expired={setExpiredTime} month={month_days} hours={hrs} minutes={mins} />\n            <h4 style={{ textAlign: 'center', color: 'red' }}>Expires at:</h4>\n            <p style={{ textAlign: 'center' }}>{selectedDate.date} - {`${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`}</p>\n            <h4 style={{ textAlign: 'center', color: 'red' }}>Total Cost:</h4>\n            <p style={{ textAlign: 'center' }}>${totalbilling}</p>\n            <div className='scroll_confirm_holder'>\n                <CircleBtnsImg title='Confirm' img='' class='plateCapture' />\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default LongTimeSelections;\n\n\n\n\n\n\n\n    // for (var i = 0; i < 60; i = i + 30) {\n    //     mins.push({ value: i, label: i })\n    // }\n            // console.log(setCount)\n        // console.log(expTimeInSecs)\n        // console.log(fullStartHr)\n        // console.log(collective_days * 24)\n        // console.log(settime.hours)\n        // console.log(date.getHours())\n        // console.log(summedTime)\n\n        // console.log(startSum)\n        // console.log(lastSum)\n"]},"metadata":{},"sourceType":"module"}