{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/CountDown.js\",\n    _s = $RefreshSig$();\n\nimport { useStripe } from '@stripe/react-stripe-js';\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { PaymentContext } from '../Context/PaymentContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountDown = () => {\n  _s();\n\n  const {\n    expiredTime\n  } = useContext(PaymentContext);\n  const circle = useRef();\n  const getSetTime = localStorage.getItem('timeStore');\n  const [countDown, setCountDown] = useState({\n    hours: Math.round(getSetTime / 100),\n    mins: getSetTime % 100,\n    secs: 60,\n    ms: 1000\n  }); // Set mutable variables for updates\n\n  var updated_hours = countDown.hours,\n      updated_mins = countDown.mins,\n      updated_secs = countDown.secs,\n      updated_ms = countDown.ms;\n  useEffect(() => {\n    setInterval(() => {\n      setCountDown({\n        hours: updated_hours,\n        mins: updated_mins,\n        secs: updated_secs,\n        ms: updated_ms\n      });\n    }, 1000);\n  }, []);\n\n  const run = () => {\n    updated_secs--;\n\n    if (updated_ms === 0) {\n      updated_secs--;\n      updated_ms = 100;\n    }\n\n    if (updated_secs === 0) {\n      updated_mins--;\n      updated_secs = 60;\n    }\n\n    if (updated_mins === 0) {\n      updated_hours--;\n      updated_mins = 60;\n    }\n\n    if (updated_hours === 0) {\n      updated_hours = '00';\n    } // console.log(updated_secs)\n\n\n    setTimeout(run, 1000);\n  };\n\n  run(); // setInterval(run, 1000)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_container choose_lot\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'c'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circleAnimation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown_digits_holder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown_adjustment\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '0px'\n            },\n            children: \"Active Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown_digits\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: `${countDown.hours}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: `${countDown.mins}m`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: [`${countDown.secs}`, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountDown, \"1MLE3RAfT6w4BwkjAY9Qw/p/5Kc=\");\n\n_c = CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/CountDown.js"],"names":["useStripe","React","useState","useContext","useEffect","useRef","PaymentContext","CountDown","expiredTime","circle","getSetTime","localStorage","getItem","countDown","setCountDown","hours","Math","round","mins","secs","ms","updated_hours","updated_mins","updated_secs","updated_ms","setInterval","run","setTimeout","display","flexDirection","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import { useStripe } from '@stripe/react-stripe-js'\nimport React, { useState, useContext, useEffect, useRef } from 'react'\nimport {PaymentContext} from '../Context/PaymentContext'\n\n\n\nexport const CountDown = () => {\n    const { expiredTime } = useContext(PaymentContext)\n    const circle = useRef()\n\n    const getSetTime = localStorage.getItem('timeStore')\n\n\n    const [countDown, setCountDown] = useState({\n        hours: Math.round(getSetTime / 100),\n        mins: getSetTime % 100,\n        secs: 60,\n        ms: 1000\n    })\n\n\n    // Set mutable variables for updates\n    var updated_hours = countDown.hours, updated_mins = countDown.mins,  updated_secs = countDown.secs, updated_ms = countDown.ms\n\n    useEffect(()=>{\n        setInterval(()=>{\n            setCountDown({\n                hours: updated_hours,\n                mins: updated_mins, \n                secs: updated_secs,\n                ms: updated_ms\n            })      \n        }, 1000)\n\n\n    },[])\n\n\n\n    const run = () => { \n        updated_secs--\n        if(updated_ms === 0){\n            updated_secs--\n            updated_ms = 100\n        }\n        if(updated_secs === 0){\n            updated_mins--\n            updated_secs = 60\n        }\n        if(updated_mins === 0){\n            updated_hours--\n            updated_mins = 60\n        }\n        \n        if(updated_hours === 0){\n            updated_hours = '00'\n        }\n        // console.log(updated_secs)\n        setTimeout(run, 1000)\n    }\nrun()\n    // setInterval(run, 1000)\n\n    \n    return (\n        <div className='global_container choose_lot'>\n<div style={{display:'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'c'}}>\n    \n<div className='circleAnimation'></div>\n            <div className='countdown_digits_holder'>\n                <div className='countdown_adjustment'>\n                    <h3 style={{marginBottom: '0px'}}>Active Session</h3>\n                <div className='countdown_digits'>\n                    <span className='digits'>{`${countDown.hours}h`}</span>\n                    <span className='digits'>{`${countDown.mins}m`}</span>\n                    <span className='digits' >{`${countDown.secs}`}s</span>\n                </div>\n                </div>\n        \n        </div>\n        <div>Button</div>\n</div>\n\n            {/* Count down time */}\n            {/* Buttone to Extend time here */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}