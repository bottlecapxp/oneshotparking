{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/LongTimeSelection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Picker from 'react-scrollable-picker';\nimport { useContext, useEffect, useState } from 'react/cjs/react.development';\nimport { PaymentContext } from '../Context/PaymentContext';\nimport CircleBtnsImg from '../Components/Buttons/CircleBtn_img/CircleBtnsImg';\nimport PaymentGenerator from '../Components/Financials/Calculator/PaymentGenerator';\nimport ScrollableDatePicker from '../Components/ScrollableDatePicker/ScrollableDatePicker';\n/**\n* @author\n* @function LongTimeSelection\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LongTimeSelection = props => {\n  _s();\n\n  const {\n    totalbilling,\n    setBilling\n  } = useContext(PaymentContext);\n  var mins = [];\n  var hrs = [];\n  var month_days = [];\n  const date = new Date();\n\n  const get_days_of_month = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n\n  const find_todays_remaining_hrs = 24 - date.getHours();\n  const days_in_current_month = get_days_of_month(date.getMonth(), date.getFullYear());\n  const options = {\n    month: 'long'\n  };\n  const current_month = new Intl.DateTimeFormat('en-US', options).format();\n  const [selectedDate, setSelectedDate] = useState({\n    date: '',\n    hours: 0,\n    minutes: 0\n  });\n\n  const setExpiredTime = (name, val, groups) => {\n    const newGroup = groups;\n    setSelectedDate({ ...selectedDate,\n      [name]: val\n    });\n    newGroup[name] = val;\n    setSelectedDate(newGroup);\n  };\n\n  const generator = () => {\n    var setdays, sethours;\n    const todaysDate = date.getDate();\n    const selected_date_array = selectedDate.date.split(' ');\n    const selected_date = parseInt(selected_date_array[1]); // rules\n\n    sethours = selectedDate.meridian == 'pm' ? selectedDate.hours + 12 : selectedDate.hours;\n\n    if (todaysDate < selected_date) {\n      setdays = selected_date - todaysDate;\n    }\n\n    return {\n      hours: sethours,\n      mins: selectedDate.minutes,\n      days: setdays == undefined ? 0 : setdays\n    };\n  };\n\n  const constructing_billing = () => {\n    var night_hr_rate, night_hr_max, day_hr_rate, day_hr_max, collective_days_rate, full_day_rate, startBilling, endofdayBilling, lastHr, remHr, collective_days;\n    var remNight, remDay, remExtra, last_night, last_day, last_extra, startSum, lastSum;\n    day_hr_rate = 1.75;\n    var dayLimit = 3;\n    var nightLimit = 4;\n    night_hr_rate = 2;\n    day_hr_max = 5.5;\n    night_hr_max = 8;\n    full_day_rate = night_hr_max * 2 + day_hr_max;\n    var settime = generator();\n    const startTime = `${date.getHours() > 12 ? date.getHours() - 12 : date.getHours()}:${date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()}${date.getHours() > 12 ? 'pm' : 'am'}`;\n    var fullStartHr;\n    var dullEndHr;\n    collective_days_rate = settime.days >= 2 ? (settime.days - 1) * full_day_rate : 0;\n    collective_days = settime.days >= 2 ? settime.days - 1 : 0; // current day calc\n\n    if (date.getHours() < 6) {\n      remHr = 6 - date.getHours();\n      remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate;\n      remDay = day_hr_max;\n      remExtra = night_hr_max;\n      fullStartHr = remHr + 18;\n      startSum = remNight + remDay + remExtra;\n    }\n\n    if (date.getHours() > 6 && date.getHours() < 18) {\n      remHr = 18 - date.getHours();\n      remDay = remHr >= dayLimit ? day_hr_max : remHr * day_hr_rate;\n      remNight = night_hr_max;\n      remExtra = 0;\n      fullStartHr = remHr + 6;\n      startSum = remNight + remDay + remExtra;\n    }\n\n    if (date.getHours() > 18) {\n      remHr = 24 - date.getHours();\n      remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate;\n      remDay = 0;\n      remExtra = 0;\n      fullStartHr = remHr;\n      startSum = remNight + remDay + remExtra;\n    } // end date calc\n\n\n    if (settime.hours <= 6) {\n      last_night = settime.hours >= nightLimit ? night_hr_max : settime.hours * night_hr_rate;\n      last_day = 0;\n      last_extra = 0;\n      lastSum = last_night + last_day + last_extra;\n    }\n\n    if (settime.hours > 6 && settime.hours <= 18) {\n      last_night = night_hr_max;\n      last_day = settime.hours - 6 >= dayLimit ? day_hr_max : (settime.hours - 6) * day_hr_rate;\n      last_extra = 0;\n      lastSum = last_night + last_day + last_extra;\n    }\n\n    if (settime.hours > 18) {\n      last_night = night_hr_max;\n      last_day = day_hr_max;\n      last_extra = settime.hours - 18 >= nightLimit ? night_hr_max : (settime.hours - 18) * night_hr_rate;\n      lastSum = last_night + last_day + last_extra;\n    } // if(settime.hours == 0 && settime.mins == 0){\n    // }\n\n\n    const sumbilling = parseFloat(collective_days_rate + startSum + lastSum).toFixed(2);\n    const expTime = `${selectedDate.date} - ${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`;\n    const summedTime = fullStartHr + collective_days * 24 + settime.hours + date.getHours();\n    const expTimeInSecs = (summedTime + date.getHours()) * 3600;\n    const setCount = date.getHours() * 3600 + date.getMinutes() * 60; // localStorage.setItem('count', 0)\n\n    localStorage.setItem('expTimeInSecs', expTimeInSecs);\n    setBilling(sumbilling);\n    localStorage.setItem('expTime', expTime);\n    localStorage.setItem('total', totalbilling);\n    localStorage.setItem('startTime', startTime);\n    console.log(setCount);\n    console.log(expTimeInSecs);\n    console.log(fullStartHr);\n    console.log(collective_days * 24);\n    console.log(settime.hours);\n    console.log(date.getHours());\n    console.log(summedTime); // console.log(startSum)\n    // console.log(lastSum)\n\n    return totalbilling;\n  };\n\n  constructing_billing();\n  generator();\n  mins.push({\n    value: 0,\n    label: 0\n  });\n\n  for (var i = 0; i < 13; i++) {\n    hrs.push({\n      value: i,\n      label: i\n    });\n  }\n\n  for (var i = date.getDate() + 1; i < days_in_current_month + 1; i++) {\n    month_days.push({\n      value: `${current_month.substring(0, 3)} ${i}`,\n      label: `${current_month.substring(0, 3)} ${i}`\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        paddingTop: '12%',\n        color: 'red'\n      },\n      children: \"Set Your Expiration Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollableDatePicker, {\n      expired: setExpiredTime,\n      month: month_days,\n      hours: hrs,\n      minutes: mins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center',\n        color: 'red'\n      },\n      children: \"Expires at:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [selectedDate.date, \" - \", `${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center',\n        color: 'red'\n      },\n      children: \"Total Cost:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [\"$\", totalbilling]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll_confirm_holder\",\n      children: /*#__PURE__*/_jsxDEV(CircleBtnsImg, {\n        title: \"Confirm\",\n        img: \"\",\n        class: \"plateCapture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LongTimeSelection, \"DwxIvsrAu/UkOlzi/ydUsocvbB0=\");\n\n_c = LongTimeSelection;\nexport default LongTimeSelection; // for (var i = 0; i < 60; i = i + 30) {\n//     mins.push({ value: i, label: i })\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"LongTimeSelection\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/LongTimeSelection.js"],"names":["React","Picker","useContext","useEffect","useState","PaymentContext","CircleBtnsImg","PaymentGenerator","ScrollableDatePicker","LongTimeSelection","props","totalbilling","setBilling","mins","hrs","month_days","date","Date","get_days_of_month","month","year","getDate","find_todays_remaining_hrs","getHours","days_in_current_month","getMonth","getFullYear","options","current_month","Intl","DateTimeFormat","format","selectedDate","setSelectedDate","hours","minutes","setExpiredTime","name","val","groups","newGroup","generator","setdays","sethours","todaysDate","selected_date_array","split","selected_date","parseInt","meridian","days","undefined","constructing_billing","night_hr_rate","night_hr_max","day_hr_rate","day_hr_max","collective_days_rate","full_day_rate","startBilling","endofdayBilling","lastHr","remHr","collective_days","remNight","remDay","remExtra","last_night","last_day","last_extra","startSum","lastSum","dayLimit","nightLimit","settime","startTime","getMinutes","fullStartHr","dullEndHr","sumbilling","parseFloat","toFixed","expTime","summedTime","expTimeInSecs","setCount","localStorage","setItem","console","log","push","value","label","i","substring","textAlign","paddingTop","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Picker from 'react-scrollable-picker'\nimport { useContext, useEffect, useState } from 'react/cjs/react.development'\nimport { PaymentContext } from '../Context/PaymentContext'\nimport CircleBtnsImg from '../Components/Buttons/CircleBtn_img/CircleBtnsImg'\nimport PaymentGenerator from '../Components/Financials/Calculator/PaymentGenerator'\nimport ScrollableDatePicker from '../Components/ScrollableDatePicker/ScrollableDatePicker'\n\n\n/**\n* @author\n* @function LongTimeSelection\n**/\n\nconst LongTimeSelection = (props) => {\n    const { totalbilling, setBilling, } = useContext(PaymentContext)\n    var mins = []\n    var hrs = []\n    var month_days = []\n    const date = new Date()\n    const get_days_of_month = (month, year) => {\n        return new Date(year, month, 0).getDate()\n    }\n    const find_todays_remaining_hrs = 24 - date.getHours()\n    const days_in_current_month = get_days_of_month(date.getMonth(), date.getFullYear())\n    const options = { month: 'long' }\n    const current_month = new Intl.DateTimeFormat('en-US', options).format()\n\n\n    const [selectedDate, setSelectedDate] = useState({\n        date: '',\n        hours: 0,\n        minutes: 0\n    })\n\n\n    const setExpiredTime = (name, val, groups) => {\n        const newGroup = groups\n        setSelectedDate({\n            ...selectedDate, [name]: val\n        })\n        newGroup[name] = val\n        setSelectedDate(newGroup)\n    }\n\n\n    const generator = () => {\n        var setdays, sethours\n        const todaysDate = date.getDate()\n\n        const selected_date_array = selectedDate.date.split(' ')\n        const selected_date = parseInt(selected_date_array[1])\n\n        // rules\n        sethours = selectedDate.meridian == 'pm' ? (selectedDate.hours + 12) : selectedDate.hours\n        if (todaysDate < selected_date) {\n            setdays = selected_date - todaysDate\n        }\n\n        return { hours: sethours, mins: selectedDate.minutes, days: setdays == undefined ? 0 : setdays }\n    }\n\n\n    const constructing_billing = () => {\n        var night_hr_rate, night_hr_max, day_hr_rate, day_hr_max, collective_days_rate, full_day_rate, startBilling, endofdayBilling, lastHr, remHr, collective_days\n        var remNight, remDay, remExtra, last_night, last_day, last_extra, startSum, lastSum\n        day_hr_rate = 1.75\n        var dayLimit = 3\n        var nightLimit = 4\n        night_hr_rate = 2\n        day_hr_max = 5.5\n        night_hr_max = 8\n        full_day_rate = (night_hr_max * 2) + day_hr_max\n        var settime = generator()\n        const startTime = `${date.getHours()>12?date.getHours()-12:date.getHours()}:${date.getMinutes() < 10?`0${date.getMinutes()}`:date.getMinutes()}${date.getHours() > 12? 'pm': 'am'}`\n        var fullStartHr\n        var dullEndHr\n\n\n        collective_days_rate = settime.days >= 2 ? (settime.days - 1) * full_day_rate : 0\n        collective_days = settime.days >= 2 ? settime.days - 1 : 0\n\n        // current day calc\n        if (date.getHours() < 6) {\n            remHr = 6 - date.getHours()\n            remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate\n            remDay = day_hr_max\n            remExtra = night_hr_max\n            fullStartHr = remHr + 18\n            startSum = remNight + remDay + remExtra\n        }\n        if (date.getHours() > 6 && date.getHours() < 18) {\n            remHr = 18 - date.getHours()\n            remDay = remHr >= dayLimit ? day_hr_max : remHr * day_hr_rate\n            remNight = night_hr_max\n            remExtra = 0\n            fullStartHr = remHr + 6\n            startSum = remNight + remDay + remExtra\n\n        }\n        if (date.getHours() > 18) {\n            remHr = 24 - date.getHours()\n            remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate\n            remDay = 0\n            remExtra = 0\n            fullStartHr = remHr\n            startSum = remNight + remDay + remExtra\n        }\n\n\n\n\n        // end date calc\n        if (settime.hours <= 6) {\n            last_night = settime.hours >= nightLimit ? night_hr_max : settime.hours * night_hr_rate\n            last_day = 0\n            last_extra = 0\n            lastSum = last_night + last_day + last_extra\n        }\n        if (settime.hours > 6 && settime.hours <= 18) {\n            last_night = night_hr_max\n            last_day = (settime.hours - 6) >= dayLimit ? day_hr_max : (settime.hours - 6) * day_hr_rate\n            last_extra = 0\n            lastSum = last_night + last_day + last_extra\n        }\n        if (settime.hours > 18) {\n            last_night = night_hr_max\n            last_day = day_hr_max\n            last_extra = (settime.hours - 18) >= nightLimit ? night_hr_max : (settime.hours - 18) * night_hr_rate\n            lastSum = last_night + last_day + last_extra\n        }\n        // if(settime.hours == 0 && settime.mins == 0){\n\n        // }\n        const sumbilling = parseFloat(collective_days_rate + startSum + lastSum).toFixed(2)\n        const expTime = `${selectedDate.date} - ${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`\n        const summedTime = (fullStartHr + (collective_days * 24) + settime.hours + date.getHours())\n        const expTimeInSecs = (summedTime + date.getHours()) * 3600\n        const setCount = (date.getHours() * 3600) + (date.getMinutes() * 60)\n\n        // localStorage.setItem('count', 0)\n        localStorage.setItem('expTimeInSecs', expTimeInSecs)\n        setBilling(sumbilling)\n        localStorage.setItem('expTime', expTime)\n        localStorage.setItem('total', totalbilling)\n        localStorage.setItem('startTime', startTime)\n\n\n\n        console.log(setCount)\n        console.log(expTimeInSecs)\n        console.log(fullStartHr)\n        console.log(collective_days * 24)\n        console.log(settime.hours)\n        console.log(date.getHours())\n        console.log(summedTime)\n\n        // console.log(startSum)\n        // console.log(lastSum)\n\n        return totalbilling\n    }\n    constructing_billing()\n    generator()\n\n\n\n\n\n    mins.push({ value: 0, label: 0 })\n\n    for (var i = 0; i < 13; i++) {\n        hrs.push({ value: i, label: i })\n    }\n    for (var i = date.getDate() + 1; i < (days_in_current_month + 1); i++) {\n        month_days.push({ value: `${current_month.substring(0, 3)} ${i}`, label: `${current_month.substring(0, 3)} ${i}` })\n    }\n\n\n    return (\n        <div className='global_container'>\n            <h2 style={{ textAlign: 'center', paddingTop: '12%', color: 'red' }}>Set Your Expiration Time</h2>\n            <ScrollableDatePicker expired={setExpiredTime} month={month_days} hours={hrs} minutes={mins} />\n            <h4 style={{ textAlign: 'center', color: 'red' }}>Expires at:</h4>\n            <p style={{ textAlign: 'center' }}>{selectedDate.date} - {`${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`}</p>\n            <h4 style={{ textAlign: 'center', color: 'red' }}>Total Cost:</h4>\n            <p style={{ textAlign: 'center' }}>${totalbilling}</p>\n\n            <div className='scroll_confirm_holder'>\n                <CircleBtnsImg title='Confirm' img='' class='plateCapture' />\n            </div>\n        </div>\n    )\n\n}\n\nexport default LongTimeSelection;\n    // for (var i = 0; i < 60; i = i + 30) {\n    //     mins.push({ value: i, label: i })\n    // }"]},"metadata":{},"sourceType":"module"}