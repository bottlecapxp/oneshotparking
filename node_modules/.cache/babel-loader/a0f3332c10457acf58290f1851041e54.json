{"ast":null,"code":"import _slicedToArray from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{PaymentContext}from'../Context/PaymentContext';import\"../Pages/pages.css\";import CircleTxtBtns from\"../Components/Buttons/CircleBtns_txt/CircleTxtBtns\";import CircleBtnsImg from\"../Components/Buttons/CircleBtn_img/CircleBtnsImg\";import Timer from\"../Components/Timer/Timer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SetTime=function SetTime(props){var _useContext=useContext(PaymentContext),darkMode=_useContext.darkMode;var _useState=useState({globalContainer:'global_container'}),_useState2=_slicedToArray(_useState,2),darkModeStyle=_useState2[0],setDarkModeStyle=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),lot=_useState4[0],setLot=_useState4[1];var _useState5=useState(0.0),_useState6=_slicedToArray(_useState5,2),btnClickUpdate=_useState6[0],setBtnClickUpdate=_useState6[1];var _useState7=useState(0.0),_useState8=_slicedToArray(_useState7,2),val=_useState8[0],setVal=_useState8[1];var _useState9=useState('false'),_useState10=_slicedToArray(_useState9,2),check=_useState10[0],setCheck=_useState10[1];// Time update nested func for button onClick()\nvar timeUpdate=function timeUpdate(val,checked){var nValue=parseFloat(val);setVal(nValue);setCheck(checked);// check for match\nif(val==btnClickUpdate){reset();}else setBtnClickUpdate(nValue);};var localStorage_=localStorage.getItem('expTime').split(':');var ls_Int=parseInt(localStorage_[0]);// We're getting the hour of expTime \nvar max_num=0.00;if(ls_Int==6){max_num=12;}var date=new Date();var hour=date.getHours();var max_conditions=function max_conditions(){// get the localstorage exp time and match it with 6\n// if match, we're going to assign the max_num variable to 12\n// if it is not 6, then we're going to switch case and return the result to max_num\nif(ls_Int==6){max_num=0.12;}else if(ls_Int!=6){switch(hour){case hour<18&&hour>6?hour:'':var remaining_time=18-hour;max_num=parseFloat(\"0.0\".concat(remaining_time));// console.log(`rem_hr ${remaining_time}`)\nbreak;case hour>=18&&hour<24?hour:'':var rem_time=24-hour+6;max_num=rem_time>9?max_num=parseFloat(\"0.\".concat(rem_time)):parseFloat(\"0.0\".concat(rem_time));break;case hour<6?hour:'':var rem_hr=6-hour;max_num=\"0.0\".concat(rem_hr);break;}}};max_conditions();console.log(ls_Int);useEffect(function(){if(localStorage.getItem('lot')===null){// localStorage.setItem('lot', 4001)\nlocalStorage.setItem('lot',props.match.params.lot);}else if(localStorage.getItem('lot')!=null){localStorage.removeItem('lot');setTimeout(function(){localStorage.setItem('lot',props.match.params.lot);},10);}setLot(props.match.params.lot);if(darkMode>=1800||darkMode<=600){setDarkModeStyle({globalContainer:'global_container_dark'});}if(btnClickUpdate==0){setBtnClickUpdate(val);}},[btnClickUpdate]);var reset=function reset(){setBtnClickUpdate(0.0);};// console.log(`let's see: ${max_num}`)\n// console.log(btnClickUpdate)\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(darkModeStyle.globalContainer,\" choose_lot\"),children:/*#__PURE__*/_jsxs(\"div\",{id:\"content_holder\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer_holder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lot-info\",children:/*#__PURE__*/_jsxs(\"h5\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"LOT NUMBER:\"}),\" \",lot]})}),/*#__PURE__*/_jsx(Timer,{addTime:btnClickUpdate,checked:check})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"align_timer_btns\",children:[/*#__PURE__*/_jsx(CircleTxtBtns,{addTime:timeUpdate,title:\"-1 Hr\",time:\"-0.01\"}),/*#__PURE__*/_jsx(CircleTxtBtns,{addTime:timeUpdate,title:\"Max\",checked:'true',time:max_num}),/*#__PURE__*/_jsx(CircleTxtBtns,{addTime:timeUpdate,title:\"+1 Hr\",time:\"0.01\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"align_timer_btns btns_img_container\",children:/*#__PURE__*/_jsx(CircleBtnsImg,{title:\"Confirm\",img:\"\",class:\"plateCapture\"})})]})});};export default SetTime;","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/SetTime.js"],"names":["React","useContext","useEffect","useState","PaymentContext","CircleTxtBtns","CircleBtnsImg","Timer","SetTime","props","darkMode","globalContainer","darkModeStyle","setDarkModeStyle","lot","setLot","btnClickUpdate","setBtnClickUpdate","val","setVal","check","setCheck","timeUpdate","checked","nValue","parseFloat","reset","localStorage_","localStorage","getItem","split","ls_Int","parseInt","max_num","date","Date","hour","getHours","max_conditions","remaining_time","rem_time","rem_hr","console","log","setItem","match","params","removeItem","setTimeout"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { PaymentContext } from '../Context/PaymentContext'\nimport \"../Pages/pages.css\";\nimport CircleTxtBtns from \"../Components/Buttons/CircleBtns_txt/CircleTxtBtns\";\nimport CircleBtnsImg from \"../Components/Buttons/CircleBtn_img/CircleBtnsImg\";\nimport Timer from \"../Components/Timer/Timer\";\n\n\nconst SetTime = (props) => {\n\tconst { darkMode } = useContext(PaymentContext)\n\tconst [darkModeStyle, setDarkModeStyle] = useState({ globalContainer: 'global_container' })\n\tconst [lot, setLot] = useState(0)\n\tconst [btnClickUpdate, setBtnClickUpdate] = useState(0.0)\n\tconst [val, setVal] = useState(0.0)\n\tconst [check, setCheck] = useState('false')\n\n\n\t// Time update nested func for button onClick()\n\tconst timeUpdate = (val, checked) => {\n\t\tvar nValue = parseFloat(val)\n\t\tsetVal(nValue)\n\t\tsetCheck(checked)\n\n\t\t// check for match\n\t\tif (val == btnClickUpdate) {\n\t\t\treset()\n\t\t}\n\t\telse (\n\t\t\t\n\t\t\tsetBtnClickUpdate(nValue)\n\t\t)\n\t}\n\tvar localStorage_ = localStorage.getItem('expTime').split(':')\n\tconst ls_Int = parseInt(localStorage_[0]) // We're getting the hour of expTime \n\tvar max_num = 0.00\n\tif (ls_Int == 6) {\n\t\tmax_num = 12\n\t}\n\n\tconst date = new Date()\n\tconst hour = date.getHours()\n\tconst max_conditions = () => {\n\n\t\t// get the localstorage exp time and match it with 6\n\t\t// if match, we're going to assign the max_num variable to 12\n\t\t// if it is not 6, then we're going to switch case and return the result to max_num\n\t\tif (ls_Int == 6) {\n\t\t\tmax_num = 0.12\n\t\t} else if(ls_Int != 6) {\n\t\t\tswitch (hour) {\n\t\t\t\tcase (hour < 18 && hour > 6 ? hour : ''):\n\t\t\t\t\tconst remaining_time = 18 - hour\n\t\t\t\t\tmax_num = parseFloat(`0.0${remaining_time}`)\n\t\t\t\t\t// console.log(`rem_hr ${remaining_time}`)\n\t\t\t\t\tbreak;\n\t\t\t\tcase (hour >= 18 && hour < 24 ? hour : ''):\n\t\t\t\t\tconst rem_time = (24 - hour) + 6\n\t\t\t\t\tmax_num = (rem_time > 9 ? max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n\t\t\t\t\tbreak;\n\t\t\t\tcase (hour < 6 ? hour : ''):\n\t\t\t\t\tconst rem_hr = 6 - hour\n\t\t\t\t\tmax_num = `0.0${rem_hr}`\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\t}\n\tmax_conditions()\n\tconsole.log(ls_Int)\n\tuseEffect(() => {\n\n\t\tif (localStorage.getItem('lot') === null) {\n\t\t\t// localStorage.setItem('lot', 4001)\n\t\t\tlocalStorage.setItem('lot', props.match.params.lot)\n\t\t}\n\t\telse if (localStorage.getItem('lot') != null) {\n\t\t\tlocalStorage.removeItem('lot')\n\t\t\tsetTimeout(() => {\n\t\t\t\tlocalStorage.setItem('lot', props.match.params.lot)\n\t\t\t}, 10)\n\t\t}\n\t\tsetLot(props.match.params.lot)\n\t\tif (darkMode >= 1800 || darkMode <= 600) {\n\t\t\tsetDarkModeStyle({\n\t\t\t\tglobalContainer: 'global_container_dark',\n\t\t\t})\n\t\t}\n\n\t\tif (btnClickUpdate == 0) {\n\t\t\tsetBtnClickUpdate(val)\n\t\t}\n\t}, [btnClickUpdate])\n\n\n\tconst reset = () => {\n\t\tsetBtnClickUpdate(0.0)\n\t}\n\n\n\n\n\t// console.log(`let's see: ${max_num}`)\n\n\t// console.log(btnClickUpdate)\n\treturn (\n\t\t<div className={`${darkModeStyle.globalContainer} choose_lot`}>\n\n\t\t\t<div id='content_holder'>\n\t\t\t\t<div className='timer_holder'>\n\t\t\t\t\t<div className='lot-info'>\n\t\t\t\t\t\t<h5><strong>LOT NUMBER:</strong> {lot}</h5>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Timer addTime={btnClickUpdate} checked={check} />\n\t\t\t\t</div>\n\t\t\t\t<div className='align_timer_btns'>\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='-1 Hr' time='-0.01' />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='Max' checked={'true'} time={max_num} />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='+1 Hr' time='0.01' />\n\t\t\t\t</div>\n\n\t\t\t\t<div className='align_timer_btns btns_img_container'>\n\t\t\t\t\t{/* <CircleBtnsImg title='' img='' /> */}\n\t\t\t\t\t<CircleBtnsImg title='Confirm' img='' class='plateCapture' />\n\t\t\t\t\t{/* <CircleBtnsImg title='' img='' /> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SetTime;\n"]},"metadata":{},"sourceType":"module"}