{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../CircleBtns_txt/CircleBtnstxt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircleTxtBtns = ({\n  title,\n  time,\n  addTime,\n  checked\n}) => {\n  _s();\n\n  // const {darkMode} = useContext(PaymentContext)\n  const darkMode = 1800;\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    buttonStyles: 'global_circle_btns',\n    title: 'title'\n  });\n  const [timer, setTimer] = useState({\n    title: title,\n    setTime: parseFloat(time)\n  });\n\n  const incrementTime = () => {\n    addTime(timer.setTime, checked);\n  };\n\n  const SingleRender = () => {\n    switch (darkMode) {\n      case darkMode >= 1800 || darkMode <= 600 ? darkMode : '':\n        setDarkModeStyle({\n          buttonStyles: 'global_circle_btns_dark',\n          title: 'title_dark'\n        });\n        break;\n\n      case darkMode < 1800 || darkMode > 600 ? darkMode : '':\n        setDarkModeStyle({\n          buttonStyles: 'global_circle_btns',\n          title: 'title'\n        });\n        break;\n    }\n  };\n\n  SingleRender(); // useEffect(() => {\n  // if () {\n  // }\n  // if () {\n  // }\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkModeStyle.buttonStyles} content-align`,\n    onClick: incrementTime,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: darkModeStyle.title,\n      children: timer.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CircleTxtBtns, \"yIwrLxpj8p5c+Qz+ifDwdnIEz80=\");\n\n_c = CircleTxtBtns;\nexport default CircleTxtBtns;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircleTxtBtns\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js"],"names":["React","useEffect","useState","CircleTxtBtns","title","time","addTime","checked","darkMode","darkModeStyle","setDarkModeStyle","buttonStyles","timer","setTimer","setTime","parseFloat","incrementTime","SingleRender"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qCAAP;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAD,KAAsC;AAAA;;AACxD;AACA,QAAMC,QAAQ,GAAG,IAAjB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC;AAACS,IAAAA,YAAY,EAAE,oBAAf;AAAqCP,IAAAA,KAAK,EAAE;AAA5C,GAAD,CAAlD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AAACE,IAAAA,KAAK,EAAEA,KAAR;AAAeU,IAAAA,OAAO,EAAEC,UAAU,CAACV,IAAD;AAAlC,GAAD,CAAlC;;AAEA,QAAMW,aAAa,GAAG,MAAM;AACxBV,IAAAA,OAAO,CAACM,KAAK,CAACE,OAAP,EAAgBP,OAAhB,CAAP;AAEH,GAHD;;AAKA,QAAMU,YAAY,GAAG,MAAK;AACtB,YAAOT,QAAP;AACI,WAAMA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,GAAhC,GAAoCA,QAApC,GAA6C,EAAnD;AACIE,QAAAA,gBAAgB,CAAC;AACbC,UAAAA,YAAY,EAAE,yBADD;AAEbP,UAAAA,KAAK,EAAE;AAFM,SAAD,CAAhB;AAIJ;;AACA,WAAMI,QAAQ,GAAG,IAAX,IAAmBA,QAAQ,GAAG,GAA9B,GAAkCA,QAAlC,GAA2C,EAAjD;AACIE,QAAAA,gBAAgB,CAAC;AACbC,UAAAA,YAAY,EAAE,oBADD;AAEbP,UAAAA,KAAK,EAAE;AAFM,SAAD,CAAhB;AAIA;AAZR;AAcH,GAfD;;AAgBAa,EAAAA,YAAY,GA3B4C,CA6BxD;AACI;AAEA;AACA;AAEA;AACJ;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAER,aAAa,CAACE,YAAa,gBAA9C;AAA+D,IAAA,OAAO,EAAEK,aAAxE;AAAA,2BACI;AAAM,MAAA,SAAS,EAAEP,aAAa,CAACL,KAA/B;AAAA,gBAAuCQ,KAAK,CAACR;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5CD;;GAAMD,a;;KAAAA,a;AA8CN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../CircleBtns_txt/CircleBtnstxt.css'\n\nconst CircleTxtBtns = ({ title, time, addTime, checked}) => {\n    // const {darkMode} = useContext(PaymentContext)\n    const darkMode = 1800\n    const [darkModeStyle, setDarkModeStyle] = useState({buttonStyles: 'global_circle_btns', title: 'title'})\n    const [timer, setTimer] = useState({title: title, setTime: parseFloat(time)})\n\n    const incrementTime = () => {\n        addTime(timer.setTime, checked )\n    \n    }\n\n    const SingleRender = () =>{ \n        switch(darkMode){\n            case (darkMode >= 1800 || darkMode <= 600?darkMode:''):\n                setDarkModeStyle({\n                    buttonStyles: 'global_circle_btns_dark',\n                    title: 'title_dark'\n                })\n            break;\n            case (darkMode < 1800 || darkMode > 600?darkMode:''):\n                setDarkModeStyle({\n                    buttonStyles: 'global_circle_btns',\n                    title: 'title'\n                })\n                break;\n        }\n    }\n    SingleRender()\n\n    // useEffect(() => {\n        // if () {\n\n        // }\n        // if () {\n\n        // }\n    // }, [])\n\n\n    return (\n        <div className={`${darkModeStyle.buttonStyles} content-align`} onClick={incrementTime}>\n            <span className={darkModeStyle.title}>{timer.title}</span>\n        </div>\n    )\n}\n\nexport default CircleTxtBtns;"]},"metadata":{},"sourceType":"module"}