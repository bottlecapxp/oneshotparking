{"ast":null,"code":"import _slicedToArray from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{PaymentContext}from'../Context/PaymentContext';import Receipt from'../Components/Receipt/Receipt';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var CountDown=function CountDown(){var _useContext=useContext(PaymentContext),darkMode=_useContext.darkMode;var getSetTime=localStorage.getItem('timeStore');var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showReceipt=_useState2[0],setShowReceipt=_useState2[1];var expiredTime=localStorage.getItem('expTime');var _useState3=useState({globalContainer:'global_container',color:'#585858',circleAnimation:'circleAnimation',countDownAdj:'countdown_adjustment'}),_useState4=_slicedToArray(_useState3,2),darkModeStyle=_useState4[0],setDarkModeStyle=_useState4[1];var _useState5=useState({divStyle:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},buttonStyle:{marginTop:'30px',border:'1px solid #848484',fontSize:'13px',// border: '1px solid #FF4F4F',\npadding:'10px',borderRadius:'10px',margin:'0px 5px 0px 5px',boxShadow:'10px 10px 30px rgba(174, 174, 192, 0.4), -10px -10px 30px #FFFFFF'},buttonDiv:{width:'100%',display:'flex',justifyContent:'space-around'}}),_useState6=_slicedToArray(_useState5,2),containerStyling=_useState6[0],setContainerStyling=_useState6[1];var _useState7=useState({hours:Math.round(getSetTime/100),mins:getSetTime%100,secs:60,ms:1000}),_useState8=_slicedToArray(_useState7,2),countDown=_useState8[0],setCountDown=_useState8[1];var toggle=function toggle(){setShowReceipt(!showReceipt);};// Set mutable variables for updates\nvar updated_hours=countDown.hours,updated_mins=countDown.mins,updated_secs=countDown.secs,updated_ms=countDown.ms;useEffect(function(){if(darkMode>=1800||darkMode<=600){setDarkModeStyle({globalContainer:'global_container_dark',color:'white',submitBtn:'submitBtn_dark',circleAnimation:'circleAnimation_dark',countDownAdj:'countdown_adjustment_dark'});setContainerStyling({divStyle:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},buttonStyle:{marginTop:'30px',border:'1px solid #EA4335',fontSize:'13px',// border: '1px solid #FF4F4F',\npadding:'10px',borderRadius:'10px',margin:'0px 5px 0px 5px',color:'#EA4335',background:'#1E2834',boxSizing:'border-box',boxShadow:'10px 10px 30px rgba(0, 0, 0, 0.6), -10px -10px 30px rgba(255, 255, 255, 0.12)'},buttonDiv:{width:'100%',display:'flex',justifyContent:'space-around'}});}setInterval(function(){setCountDown({hours:updated_hours,mins:updated_mins,secs:updated_secs,ms:updated_ms});},1000);},[]);var run=function run(){updated_secs--;if(updated_ms===0){updated_secs--;updated_ms=100;}if(updated_secs===0){updated_mins--;updated_secs=60;}if(updated_mins===0){updated_hours--;updated_mins=60;}if(updated_hours===0){updated_hours='00';}// console.log(updated_secs)\nsetTimeout(run,1000);};run();// setInterval(run, 1000)\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(darkModeStyle.globalContainer,\" choose_lot\"),children:/*#__PURE__*/_jsxs(\"div\",{style:containerStyling.divStyle,children:[/*#__PURE__*/_jsx(\"div\",{className:darkModeStyle.circleAnimation}),/*#__PURE__*/_jsx(\"div\",{className:\"countdown_digits_holder\",children:/*#__PURE__*/_jsxs(\"div\",{className:darkModeStyle.countDownAdj,children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'0px'},children:\"Active Session\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"countdown_digits\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"digits\",children:\"\".concat(countDown.hours,\"h\")}),/*#__PURE__*/_jsx(\"span\",{className:\"digits\",children:\"\".concat(countDown.mins,\"m\")}),/*#__PURE__*/_jsxs(\"span\",{className:\"digits\",children:[\"\".concat(countDown.secs),\"s\"]})]})]})}),showReceipt?/*#__PURE__*/_jsx(Receipt,{}):'',/*#__PURE__*/_jsxs(\"h4\",{style:{marginTop:'30%',color:darkModeStyle.color},children:[\"Your Time Expires at: \",expiredTime]}),/*#__PURE__*/_jsxs(\"div\",{style:containerStyling.buttonDiv,children:[/*#__PURE__*/_jsx(\"span\",{style:containerStyling.buttonStyle,children:\"Extend My Time\"}),/*#__PURE__*/_jsx(\"span\",{onClick:toggle,style:containerStyling.buttonStyle,children:\"View My Receipt\"})]})]})});};","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/CountDown.js"],"names":["React","useState","useContext","useEffect","PaymentContext","Receipt","CountDown","darkMode","getSetTime","localStorage","getItem","showReceipt","setShowReceipt","expiredTime","globalContainer","color","circleAnimation","countDownAdj","darkModeStyle","setDarkModeStyle","divStyle","display","flexDirection","alignItems","justifyContent","buttonStyle","marginTop","border","fontSize","padding","borderRadius","margin","boxShadow","buttonDiv","width","containerStyling","setContainerStyling","hours","Math","round","mins","secs","ms","countDown","setCountDown","toggle","updated_hours","updated_mins","updated_secs","updated_ms","submitBtn","background","boxSizing","setInterval","run","setTimeout","marginBottom"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAsD,OAAtD,CACA,OAAQC,cAAR,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,C,wFAIA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,iBACNJ,UAAU,CAACE,cAAD,CADJ,CACnBG,QADmB,aACnBA,QADmB,CAE3B,GAAMC,CAAAA,UAAU,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAnB,CAF2B,cAGWT,QAAQ,CAAC,KAAD,CAHnB,wCAGpBU,WAHoB,eAGPC,cAHO,eAI3B,GAAMC,CAAAA,WAAW,CAAGJ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAApB,CAJ2B,eAKeT,QAAQ,CAAC,CAC/Ca,eAAe,CAAE,kBAD8B,CAE/CC,KAAK,CAAE,SAFwC,CAG/CC,eAAe,CAAE,iBAH8B,CAI/CC,YAAY,CAAE,sBAJiC,CAAD,CALvB,yCAKpBC,aALoB,eAKLC,gBALK,8BAWqBlB,QAAQ,CAAC,CACrDmB,QAAQ,CAAC,CACLC,OAAO,CAAC,MADH,CAELC,aAAa,CAAE,QAFV,CAGLC,UAAU,CAAE,QAHP,CAILC,cAAc,CAAE,QAJX,CAD4C,CAOrDC,WAAW,CAAC,CACRC,SAAS,CAAE,MADH,CAERC,MAAM,CAAE,mBAFA,CAGRC,QAAQ,CAAE,MAHF,CAIR;AACAC,OAAO,CAAE,MALD,CAMRC,YAAY,CAAE,MANN,CAORC,MAAM,CAAE,iBAPA,CAQRC,SAAS,CAAE,mEARH,CAPyC,CAiBrDC,SAAS,CAAE,CACPC,KAAK,CAAE,MADA,CAEPb,OAAO,CAAE,MAFF,CAGPG,cAAc,CAAE,cAHT,CAjB0C,CAAD,CAX7B,yCAWpBW,gBAXoB,eAWFC,mBAXE,8BAkCOnC,QAAQ,CAAC,CACvCoC,KAAK,CAAEC,IAAI,CAACC,KAAL,CAAW/B,UAAU,CAAG,GAAxB,CADgC,CAEvCgC,IAAI,CAAEhC,UAAU,CAAG,GAFoB,CAGvCiC,IAAI,CAAE,EAHiC,CAIvCC,EAAE,CAAE,IAJmC,CAAD,CAlCf,yCAkCpBC,SAlCoB,eAkCTC,YAlCS,eAyC3B,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAK,CAChBjC,cAAc,CAAC,CAACD,WAAF,CAAd,CACH,CAFD,CAGA;AACA,GAAImC,CAAAA,aAAa,CAAGH,SAAS,CAACN,KAA9B,CAAqCU,YAAY,CAAGJ,SAAS,CAACH,IAA9D,CAAqEQ,YAAY,CAAGL,SAAS,CAACF,IAA9F,CAAoGQ,UAAU,CAAGN,SAAS,CAACD,EAA3H,CAEAvC,SAAS,CAAC,UAAI,CACV,GAAGI,QAAQ,EAAI,IAAZ,EAAoBA,QAAQ,EAAI,GAAnC,CAAuC,CACnCY,gBAAgB,CAAC,CACbL,eAAe,CAAE,uBADJ,CAEbC,KAAK,CAAE,OAFM,CAGbmC,SAAS,CAAE,gBAHE,CAIblC,eAAe,CAAE,sBAJJ,CAKbC,YAAY,CAAE,2BALD,CAAD,CAAhB,CAOAmB,mBAAmB,CAAC,CAChBhB,QAAQ,CAAC,CACLC,OAAO,CAAC,MADH,CAELC,aAAa,CAAE,QAFV,CAGLC,UAAU,CAAE,QAHP,CAILC,cAAc,CAAE,QAJX,CADO,CAOhBC,WAAW,CAAC,CACRC,SAAS,CAAE,MADH,CAERC,MAAM,CAAE,mBAFA,CAGRC,QAAQ,CAAE,MAHF,CAIR;AACAC,OAAO,CAAE,MALD,CAMRC,YAAY,CAAE,MANN,CAORC,MAAM,CAAE,iBAPA,CAQRhB,KAAK,CAAE,SARC,CASRoC,UAAU,CAAE,SATJ,CAURC,SAAS,CAAE,YAVH,CAWRpB,SAAS,CAAE,+EAXH,CAPI,CAqBhBC,SAAS,CAAE,CACPC,KAAK,CAAE,MADA,CAEPb,OAAO,CAAE,MAFF,CAGPG,cAAc,CAAE,cAHT,CArBK,CAAD,CAAnB,CA2BH,CAED6B,WAAW,CAAC,UAAI,CACZT,YAAY,CAAC,CACTP,KAAK,CAAES,aADE,CAETN,IAAI,CAAEO,YAFG,CAGTN,IAAI,CAAEO,YAHG,CAITN,EAAE,CAAEO,UAJK,CAAD,CAAZ,CAMH,CAPU,CAOR,IAPQ,CAAX,CAUH,CAhDQ,CAgDP,EAhDO,CAAT,CAoDA,GAAMK,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACdN,YAAY,GACZ,GAAGC,UAAU,GAAK,CAAlB,CAAoB,CAChBD,YAAY,GACZC,UAAU,CAAG,GAAb,CACH,CACD,GAAGD,YAAY,GAAK,CAApB,CAAsB,CAClBD,YAAY,GACZC,YAAY,CAAG,EAAf,CACH,CACD,GAAGD,YAAY,GAAK,CAApB,CAAsB,CAClBD,aAAa,GACbC,YAAY,CAAG,EAAf,CACH,CAED,GAAGD,aAAa,GAAK,CAArB,CAAuB,CACnBA,aAAa,CAAG,IAAhB,CACH,CACD;AACAS,UAAU,CAACD,GAAD,CAAM,IAAN,CAAV,CACH,CApBD,CAqBJA,GAAG,GACC;AAGA,mBACI,YAAK,SAAS,WAAKpC,aAAa,CAACJ,eAAnB,eAAd,uBACR,aAAK,KAAK,CAAEqB,gBAAgB,CAACf,QAA7B,wBACA,YAAK,SAAS,CAAEF,aAAa,CAACF,eAA9B,EADA,cAEY,YAAK,SAAS,CAAC,yBAAf,uBACI,aAAK,SAAS,CAAEE,aAAa,CAACD,YAA9B,wBACI,WAAI,KAAK,CAAE,CAACuC,YAAY,CAAE,KAAf,CAAX,4BADJ,cAEA,aAAK,SAAS,CAAC,kBAAf,wBACI,aAAM,SAAS,CAAC,QAAhB,oBAA6Bb,SAAS,CAACN,KAAvC,OADJ,cAEI,aAAM,SAAS,CAAC,QAAhB,oBAA6BM,SAAS,CAACH,IAAvC,OAFJ,cAGI,cAAM,SAAS,CAAC,QAAhB,qBAA8BG,SAAS,CAACF,IAAxC,QAHJ,GAFA,GADJ,EAFZ,CAaS9B,WAAW,cAAC,KAAC,OAAD,IAAD,CAAa,EAbjC,cAeQ,YAAI,KAAK,CAAE,CAACe,SAAS,CAAE,KAAZ,CAAmBX,KAAK,CAAEG,aAAa,CAACH,KAAxC,CAAX,oCAAkFF,WAAlF,GAfR,cAgBQ,aAAK,KAAK,CAAEsB,gBAAgB,CAACF,SAA7B,wBACA,aAAM,KAAK,CAAEE,gBAAgB,CAACV,WAA9B,4BADA,cAEA,aAAM,OAAO,CAAEoB,MAAf,CAAuB,KAAK,CAAEV,gBAAgB,CAACV,WAA/C,6BAFA,GAhBR,GADQ,EADJ,CA6BH,CAzJM","sourcesContent":["import React, { useState, useContext, useEffect} from 'react'\nimport {PaymentContext} from '../Context/PaymentContext'\nimport Receipt from '../Components/Receipt/Receipt'\n\n\n\nexport const CountDown = () => {\n    const { darkMode } = useContext(PaymentContext)\n    const getSetTime = localStorage.getItem('timeStore')\n    const [showReceipt, setShowReceipt] = useState(false)\n    const expiredTime = localStorage.getItem('expTime')\n    const [darkModeStyle, setDarkModeStyle] = useState({\n        globalContainer: 'global_container', \n        color: '#585858',    \n        circleAnimation: 'circleAnimation', \n        countDownAdj: 'countdown_adjustment'\n    })\n    const [containerStyling, setContainerStyling] = useState({\n        divStyle:{\n            display:'flex', \n            flexDirection: 'column', \n            alignItems: 'center', \n            justifyContent: 'center'\n        },\n        buttonStyle:{\n            marginTop: '30px',\n            border: '1px solid #848484',\n            fontSize: '13px',\n            // border: '1px solid #FF4F4F',\n            padding: '10px',\n            borderRadius: '10px', \n            margin: '0px 5px 0px 5px',\n            boxShadow: '10px 10px 30px rgba(174, 174, 192, 0.4), -10px -10px 30px #FFFFFF'\n        },\n        buttonDiv: {\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-around'\n        }\n    })\n    const [countDown, setCountDown] = useState({\n        hours: Math.round(getSetTime / 100),\n        mins: getSetTime % 100,\n        secs: 60,\n        ms: 1000\n    })\n\n    const toggle = () =>{\n        setShowReceipt(!showReceipt)\n    }\n    // Set mutable variables for updates\n    var updated_hours = countDown.hours, updated_mins = countDown.mins,  updated_secs = countDown.secs, updated_ms = countDown.ms\n\n    useEffect(()=>{\n        if(darkMode >= 1800 || darkMode <= 600){\n            setDarkModeStyle({\n                globalContainer: 'global_container_dark',\n                color: 'white',\n                submitBtn: 'submitBtn_dark',\n                circleAnimation: 'circleAnimation_dark',\n                countDownAdj: 'countdown_adjustment_dark'\n            })\n            setContainerStyling({\n                divStyle:{\n                    display:'flex', \n                    flexDirection: 'column', \n                    alignItems: 'center', \n                    justifyContent: 'center'\n                },\n                buttonStyle:{\n                    marginTop: '30px',\n                    border: '1px solid #EA4335',\n                    fontSize: '13px',\n                    // border: '1px solid #FF4F4F',\n                    padding: '10px',\n                    borderRadius: '10px', \n                    margin: '0px 5px 0px 5px',\n                    color: '#EA4335',\n                    background: '#1E2834',\n                    boxSizing: 'border-box',\n                    boxShadow: '10px 10px 30px rgba(0, 0, 0, 0.6), -10px -10px 30px rgba(255, 255, 255, 0.12)'\n                   \n                },\n                buttonDiv: {\n                    width: '100%',\n                    display: 'flex',\n                    justifyContent: 'space-around'\n                }\n            })\n        }\n\n        setInterval(()=>{\n            setCountDown({\n                hours: updated_hours,\n                mins: updated_mins, \n                secs: updated_secs,\n                ms: updated_ms\n            })      \n        }, 1000)\n\n\n    },[])\n\n\n\n    const run = () => { \n        updated_secs--\n        if(updated_ms === 0){\n            updated_secs--\n            updated_ms = 100\n        }\n        if(updated_secs === 0){\n            updated_mins--\n            updated_secs = 60\n        }\n        if(updated_mins === 0){\n            updated_hours--\n            updated_mins = 60\n        }\n        \n        if(updated_hours === 0){\n            updated_hours = '00'\n        }\n        // console.log(updated_secs)\n        setTimeout(run, 1000)\n    }\nrun()\n    // setInterval(run, 1000)\n\n    \n    return (\n        <div className={`${darkModeStyle.globalContainer} choose_lot`}>\n<div style={containerStyling.divStyle}>\n<div className={darkModeStyle.circleAnimation}></div>\n            <div className='countdown_digits_holder'>\n                <div className={darkModeStyle.countDownAdj}>\n                    <h3 style={{marginBottom: '0px'}}>Active Session</h3>\n                <div className='countdown_digits'>\n                    <span className='digits'>{`${countDown.hours}h`}</span>\n                    <span className='digits'>{`${countDown.mins}m`}</span>\n                    <span className='digits' >{`${countDown.secs}`}s</span>\n                </div>\n                </div>\n        \n        </div>\n        {showReceipt?<Receipt />:'' }\n   \n        <h4 style={{marginTop: '30%', color: darkModeStyle.color}}>Your Time Expires at: {expiredTime}</h4>\n        <div style={containerStyling.buttonDiv}>\n        <span style={containerStyling.buttonStyle}>Extend My Time</span>\n        <span onClick={toggle} style={containerStyling.buttonStyle}>View My Receipt</span>\n        </div>\n\n</div>\n\n            {/* Count down time */}\n            {/* Buttone to Extend time here */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}