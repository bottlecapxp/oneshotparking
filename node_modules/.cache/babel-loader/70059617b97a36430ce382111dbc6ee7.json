{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../CircleBtns_txt/CircleBtnstxt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircleTxtBtns = ({\n  title,\n  time,\n  addTime,\n  checked\n}) => {\n  _s();\n\n  // const {darkMode} = useContext(PaymentContext)\n  const darkMode = 1800; // const [darkModeStyle, setDarkModeStyle] = useState({buttonStyles: , title: 'title'})\n\n  const [timer, setTimer] = useState({\n    title: title,\n    setTime: parseFloat(time)\n  });\n  var buttonStyles = 'global_circle_btns';\n  var title = 'title';\n\n  const incrementTime = () => {\n    addTime(timer.setTime, checked);\n  };\n\n  const SingleRender = () => {\n    switch (darkMode) {\n      case darkMode >= 1800 || darkMode <= 600 ? darkMode : '':\n        buttonStyles = 'global_circle_btns_dark';\n        title = 'title_dark';\n        break;\n\n      case darkMode < 1800 || darkMode > 600 ? darkMode : '':\n        buttonStyles = 'global_circle_btns';\n        title = 'title';\n        break;\n    }\n  };\n\n  SingleRender(); // useEffect(() => {\n  // if () {\n  // }\n  // if () {\n  // }\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${buttonStyles} content-align`,\n    onClick: incrementTime,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: title,\n      children: timer.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CircleTxtBtns, \"RmAIm704eVaPT//MB2hmYeScpkY=\");\n\n_c = CircleTxtBtns;\nexport default CircleTxtBtns;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircleTxtBtns\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js"],"names":["React","useEffect","useState","CircleTxtBtns","title","time","addTime","checked","darkMode","timer","setTimer","setTime","parseFloat","buttonStyles","incrementTime","SingleRender"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,qCAAP;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAD,KAAsC;AAAA;;AACxD;AACA,QAAMC,QAAQ,GAAG,IAAjB,CAFwD,CAGxD;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAACE,IAAAA,KAAK,EAAEA,KAAR;AAAeO,IAAAA,OAAO,EAAEC,UAAU,CAACP,IAAD;AAAlC,GAAD,CAAlC;AACA,MAAIQ,YAAY,GAAG,oBAAnB;AACA,MAAIT,KAAK,GAAG,OAAZ;;AAKA,QAAMU,aAAa,GAAG,MAAM;AACxBR,IAAAA,OAAO,CAACG,KAAK,CAACE,OAAP,EAAgBJ,OAAhB,CAAP;AAEH,GAHD;;AAKA,QAAMQ,YAAY,GAAG,MAAK;AACtB,YAAOP,QAAP;AACI,WAAMA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,GAAhC,GAAoCA,QAApC,GAA6C,EAAnD;AACQK,QAAAA,YAAY,GAAG,yBAAf;AACAT,QAAAA,KAAK,GAAG,YAAR;AAER;;AACA,WAAMI,QAAQ,GAAG,IAAX,IAAmBA,QAAQ,GAAG,GAA9B,GAAkCA,QAAlC,GAA2C,EAAjD;AACIK,QAAAA,YAAY,GAAG,oBAAf;AACAT,QAAAA,KAAK,GAAG,OAAR;AACA;AATR;AAWH,GAZD;;AAaAW,EAAAA,YAAY,GA7B4C,CA+BxD;AACI;AAEA;AACA;AAEA;AACJ;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEF,YAAa,gBAAhC;AAAiD,IAAA,OAAO,EAAEC,aAA1D;AAAA,2BACI;AAAM,MAAA,SAAS,EAAEV,KAAjB;AAAA,gBAAyBK,KAAK,CAACL;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9CD;;GAAMD,a;;KAAAA,a;AAgDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../CircleBtns_txt/CircleBtnstxt.css'\n\nconst CircleTxtBtns = ({ title, time, addTime, checked}) => {\n    // const {darkMode} = useContext(PaymentContext)\n    const darkMode = 1800\n    // const [darkModeStyle, setDarkModeStyle] = useState({buttonStyles: , title: 'title'})\n    const [timer, setTimer] = useState({title: title, setTime: parseFloat(time)})\n    var buttonStyles = 'global_circle_btns'\n    var title = 'title'\n\n\n\n\n    const incrementTime = () => {\n        addTime(timer.setTime, checked )\n    \n    }\n\n    const SingleRender = () =>{ \n        switch(darkMode){\n            case (darkMode >= 1800 || darkMode <= 600?darkMode:''):\n                    buttonStyles = 'global_circle_btns_dark'\n                    title = 'title_dark'\n              \n            break;\n            case (darkMode < 1800 || darkMode > 600?darkMode:''):\n                buttonStyles = 'global_circle_btns'\n                title = 'title'\n                break;\n        }\n    }\n    SingleRender()\n\n    // useEffect(() => {\n        // if () {\n\n        // }\n        // if () {\n\n        // }\n    // }, [])\n\n\n    return (\n        <div className={`${buttonStyles} content-align`} onClick={incrementTime}>\n            <span className={title}>{timer.title}</span>\n        </div>\n    )\n}\n\nexport default CircleTxtBtns;"]},"metadata":{},"sourceType":"module"}