{"ast":null,"code":"import { Component } from 'react';\n\nclass MaxSelection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.set_conditions = () => {\n      if (this.hour == 6) {\n        console.log('localStorage = 0'); // localStorage.setItem('max', 1)\n      }\n\n      if (this.hour != 6) {\n        console.log('localStorage = 1'); // \t\t\tswitch (hour) {\n        // \t\t\tcase (hour < 18 && hour > 6 ? hour : ''):\n        // \t\t\t\tconst remaining_time = 18 - hour\n        // \t\t\t\tmax_num = parseFloat(`0.0${remaining_time}`)\n        // \t\t\t\t// console.log(`rem_hr ${remaining_time}`)\n        // \t\t\t\tbreak;\n        // \t\t\tcase (hour >= 18 && hour < 24 ? hour : ''):\n        // \t\t\t\tconst rem_time = (24 - hour) + 6\n        // \t\t\t\tmax_num = (rem_time > 9 ? max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n        // \t\t\t\tbreak;\n        // \t\t\tcase (hour < 6 ? hour : ''):\n        // \t\t\t\tconst rem_hr = 6 - hour\n        // \t\t\t\tmax_num = `0.0${rem_hr}`\n        // \t\t\t\tbreak;\n        // \t\t}\n      }\n\n      return this.localStorage;\n    };\n\n    this.date = new Date();\n    this.hour = this.date.getHours();\n    this.localStorage = localStorage.getItem('max');\n  }\n\n}\n\nexport default MaxSelection; // get the localstorage exp time and match it with 6\n// if match, we're going to assign the max_num variable to 12\n// if it is not 6, then we're going to switch case and return the result to max_num\n// \tif (localStorage_ == 1) {\n// \t\tmax_num = '0.12'\n// \t\tconsole.log('still shows under condition')\n// \t}\n// \tif (localStorage_ = 0){ \n// \t\tconsole.log('Not equal to 6')\n// \t}\n// }","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/max_selection/MaxSelection.js"],"names":["Component","MaxSelection","constructor","props","set_conditions","hour","console","log","localStorage","date","Date","getHours","getItem"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAIA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,cATmB,GASF,MAAM;AACnB,UAAI,KAAKC,IAAL,IAAa,CAAjB,EAAoB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADgB,CAGhB;AACH;;AACD,UAAI,KAAKF,IAAL,IAAa,CAAjB,EAAoB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADgB,CAEhB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEH;;AAGD,aAAO,KAAKC,YAAZ;AAEH,KAzCkB;;AAEf,SAAKC,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACA,SAAKL,IAAL,GAAY,KAAKI,IAAL,CAAUE,QAAV,EAAZ;AACA,SAAKH,YAAL,GAAoBA,YAAY,CAACI,OAAb,CAAqB,KAArB,CAApB;AACH;;AANgC;;AA6CrC,eAAeX,YAAf,C,CAEE;AACA;AACA;AACD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { Component } from 'react'\n\n\n\nclass MaxSelection extends Component {\n    constructor(props) {\n        super(props)\n        this.date = new Date()\n        this.hour = this.date.getHours()\n        this.localStorage = localStorage.getItem('max')\n    }\n\n\n\n    set_conditions = () => {\n        if (this.hour == 6) {\n            console.log('localStorage = 0')\n\n            // localStorage.setItem('max', 1)\n        }\n        if (this.hour != 6) {\n            console.log('localStorage = 1')\n            // \t\t\tswitch (hour) {\n            // \t\t\tcase (hour < 18 && hour > 6 ? hour : ''):\n            // \t\t\t\tconst remaining_time = 18 - hour\n            // \t\t\t\tmax_num = parseFloat(`0.0${remaining_time}`)\n\n            // \t\t\t\t// console.log(`rem_hr ${remaining_time}`)\n            // \t\t\t\tbreak;\n            // \t\t\tcase (hour >= 18 && hour < 24 ? hour : ''):\n            // \t\t\t\tconst rem_time = (24 - hour) + 6\n            // \t\t\t\tmax_num = (rem_time > 9 ? max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n\n            // \t\t\t\tbreak;\n            // \t\t\tcase (hour < 6 ? hour : ''):\n            // \t\t\t\tconst rem_hr = 6 - hour\n            // \t\t\t\tmax_num = `0.0${rem_hr}`\n\n            // \t\t\t\tbreak;\n            // \t\t}\n\n        }\n\n\n        return this.localStorage\n\n    }\n}\n\nexport default MaxSelection;\n\n\t\t// get the localstorage exp time and match it with 6\n\t\t// if match, we're going to assign the max_num variable to 12\n\t\t// if it is not 6, then we're going to switch case and return the result to max_num\n\t// \tif (localStorage_ == 1) {\n\t// \t\tmax_num = '0.12'\n\t// \t\tconsole.log('still shows under condition')\n\t// \t}\n\t// \tif (localStorage_ = 0){ \n\n\t// \t\tconsole.log('Not equal to 6')\n\t// \t}\n\t// }\n"]},"metadata":{},"sourceType":"module"}