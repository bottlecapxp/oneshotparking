{"ast":null,"code":"import _defineProperty from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useContext,useEffect,useState}from'react/cjs/react.development';import{PaymentContext}from'../Context/PaymentContext';import CircleBtnsImg from'../Components/Buttons/CircleBtn_img/CircleBtnsImg';import ScrollableDatePicker from'../Components/ScrollableDatePicker/ScrollableDatePicker';/**\n* @author\n* @function LongTimeSelections\n**/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LongTimeSelections=function LongTimeSelections(props){var _useContext=useContext(PaymentContext),totalbilling=_useContext.totalbilling,setBilling=_useContext.setBilling;var mins=[];var hrs=[];var month_days=[];var date=new Date();var get_days_of_month=function get_days_of_month(month,year){return new Date(year,month,0).getDate();};// const find_todays_remaining_hrs = 24 - date.getHours()\nvar days_in_current_month=get_days_of_month(date.getMonth(),date.getFullYear());var options={month:'long'};var current_month=new Intl.DateTimeFormat('en-US',options).format();var _useState=useState({date:'',hours:0,minutes:0}),_useState2=_slicedToArray(_useState,2),selectedDate=_useState2[0],setSelectedDate=_useState2[1];var setExpiredTime=function setExpiredTime(name,val,groups){var newGroup=groups;setSelectedDate(_objectSpread(_objectSpread({},selectedDate),{},_defineProperty({},name,val)));newGroup[name]=val;setSelectedDate(newGroup);};var generator=function generator(){var setdays,sethours;var todaysDate=date.getDate();var selected_date_array=selectedDate.date.split(' ');var selected_date=parseInt(selected_date_array[1]);// rules\nsethours=selectedDate.meridian=='pm'?selectedDate.hours+12:selectedDate.hours;if(todaysDate<selected_date){setdays=selected_date-todaysDate;}return{hours:sethours,mins:selectedDate.minutes,days:setdays==undefined?0:setdays};};var constructing_billing=function constructing_billing(){var night_hr_rate,night_hr_max,day_hr_rate,day_hr_max,collective_days_rate,full_day_rate,startBilling,endofdayBilling,lastHr,remHr,collective_days;var remNight,remDay,remExtra,last_night,last_day,last_extra,startSum,lastSum;day_hr_rate=.10;var dayLimit=2;var nightLimit=3;night_hr_rate=.20;day_hr_max=.20;night_hr_max=.60;full_day_rate=night_hr_max*2+day_hr_max;var settime=generator();var startTime=\"\".concat(date.getHours()>12?date.getHours()-12:date.getHours(),\":\").concat(date.getMinutes()<10?\"0\".concat(date.getMinutes()):date.getMinutes()).concat(date.getHours()>12?'pm':'am');var fullStartHr;var dullEndHr;collective_days_rate=settime.days>=2?(settime.days-1)*full_day_rate:0;collective_days=settime.days>=2?settime.days-1:0;// current day calc\nif(date.getHours()<6){remHr=6-date.getHours();remNight=remHr>=nightLimit?night_hr_max:remHr*night_hr_rate;remDay=day_hr_max;remExtra=night_hr_max;fullStartHr=remHr+18;startSum=remNight+remDay+remExtra;}if(date.getHours()>6&&date.getHours()<18){remHr=18-date.getHours();remDay=remHr>=dayLimit?day_hr_max:remHr*day_hr_rate;remNight=night_hr_max;remExtra=0;fullStartHr=remHr+6;startSum=remNight+remDay+remExtra;}if(date.getHours()>18){remHr=24-date.getHours();remNight=remHr>=nightLimit?night_hr_max:remHr*night_hr_rate;remDay=0;remExtra=0;fullStartHr=remHr;startSum=remNight+remDay+remExtra;}// end date calc\nif(settime.hours<=6){last_night=settime.hours>=nightLimit?night_hr_max:settime.hours*night_hr_rate;last_day=0;last_extra=0;lastSum=last_night+last_day+last_extra;}if(settime.hours>6&&settime.hours<=18){last_night=night_hr_max;last_day=settime.hours-6>=dayLimit?day_hr_max:(settime.hours-6)*day_hr_rate;last_extra=0;lastSum=last_night+last_day+last_extra;}if(settime.hours>18){last_night=night_hr_max;last_day=day_hr_max;last_extra=settime.hours-18>=nightLimit?night_hr_max:(settime.hours-18)*night_hr_rate;lastSum=last_night+last_day+last_extra;}// if(settime.hours == 0 && settime.mins == 0){\n// }\nvar sumbilling=parseFloat(collective_days_rate+startSum+lastSum).toFixed(2);var expTime=\"\".concat(selectedDate.date,\" - \").concat(selectedDate.hours,\":\").concat(selectedDate.minutes==0?'00':selectedDate.minutes).concat(selectedDate.meridian);var summedTime=fullStartHr+collective_days*24+settime.hours+date.getHours();var expTimeInSecs=(summedTime+date.getHours())*3600;var setCount=date.getHours()*3600+date.getMinutes()*60;// localStorage.setItem('count', 0)\nlocalStorage.setItem('expTimeInSecs',expTimeInSecs);setBilling(sumbilling);localStorage.setItem('expTime',expTime);localStorage.setItem('total',totalbilling);localStorage.setItem('startTime',startTime);return totalbilling;};constructing_billing();generator();mins.push({value:0,label:0});for(var i=0;i<13;i++){hrs.push({value:i,label:i});}for(var i=date.getDate()+1;i<days_in_current_month+1;i++){month_days.push({value:\"\".concat(current_month.substring(0,3),\" \").concat(i),label:\"\".concat(current_month.substring(0,3),\" \").concat(i)});}return/*#__PURE__*/_jsxs(\"div\",{className:\"global_container\",children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',paddingTop:'12%',color:'red'},children:\"Set Your Expiration Time\"}),/*#__PURE__*/_jsx(ScrollableDatePicker,{expired:setExpiredTime,month:month_days,hours:hrs,minutes:mins}),/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',color:'red'},children:\"Expires at:\"}),/*#__PURE__*/_jsxs(\"p\",{style:{textAlign:'center'},children:[selectedDate.date,\" - \",\"\".concat(selectedDate.hours,\":\").concat(selectedDate.minutes==0?'00':selectedDate.minutes).concat(selectedDate.meridian)]}),/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',color:'red'},children:\"Total Cost:\"}),/*#__PURE__*/_jsxs(\"p\",{style:{textAlign:'center'},children:[\"$\",totalbilling]}),/*#__PURE__*/_jsx(\"div\",{className:\"scroll_confirm_holder\",children:/*#__PURE__*/_jsx(CircleBtnsImg,{title:\"Confirm\",img:\"\",class:\"plateCapture\"})})]});};export default LongTimeSelections;// for (var i = 0; i < 60; i = i + 30) {\n//     mins.push({ value: i, label: i })\n// }\n// console.log(setCount)\n// console.log(expTimeInSecs)\n// console.log(fullStartHr)\n// console.log(collective_days * 24)\n// console.log(settime.hours)\n// console.log(date.getHours())\n// console.log(summedTime)\n// console.log(startSum)\n// console.log(lastSum)","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/LongTimeSelection.js"],"names":["React","useContext","useEffect","useState","PaymentContext","CircleBtnsImg","ScrollableDatePicker","LongTimeSelections","props","totalbilling","setBilling","mins","hrs","month_days","date","Date","get_days_of_month","month","year","getDate","days_in_current_month","getMonth","getFullYear","options","current_month","Intl","DateTimeFormat","format","hours","minutes","selectedDate","setSelectedDate","setExpiredTime","name","val","groups","newGroup","generator","setdays","sethours","todaysDate","selected_date_array","split","selected_date","parseInt","meridian","days","undefined","constructing_billing","night_hr_rate","night_hr_max","day_hr_rate","day_hr_max","collective_days_rate","full_day_rate","startBilling","endofdayBilling","lastHr","remHr","collective_days","remNight","remDay","remExtra","last_night","last_day","last_extra","startSum","lastSum","dayLimit","nightLimit","settime","startTime","getHours","getMinutes","fullStartHr","dullEndHr","sumbilling","parseFloat","toFixed","expTime","summedTime","expTimeInSecs","setCount","localStorage","setItem","push","value","label","i","substring","textAlign","paddingTop","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useContext, useEffect, useState } from 'react/cjs/react.development'\nimport { PaymentContext } from '../Context/PaymentContext'\nimport CircleBtnsImg from '../Components/Buttons/CircleBtn_img/CircleBtnsImg'\nimport ScrollableDatePicker from '../Components/ScrollableDatePicker/ScrollableDatePicker'\n\n\n/**\n* @author\n* @function LongTimeSelections\n**/\n\nconst LongTimeSelections = (props) => {\n    const { totalbilling, setBilling } = useContext(PaymentContext)\n    var mins = []\n    var hrs = []\n    var month_days = []\n    const date = new Date()\n    const get_days_of_month = (month, year) => {\n        return new Date(year, month, 0).getDate()\n    }\n    // const find_todays_remaining_hrs = 24 - date.getHours()\n    const days_in_current_month = get_days_of_month(date.getMonth(), date.getFullYear())\n    const options = { month: 'long' }\n    const current_month = new Intl.DateTimeFormat('en-US', options).format()\n\n\n    const [selectedDate, setSelectedDate] = useState({\n        date: '',\n        hours: 0,\n        minutes: 0\n    })\n\n\n    const setExpiredTime = (name, val, groups) => {\n        const newGroup = groups\n        setSelectedDate({\n            ...selectedDate, [name]: val\n        })\n        newGroup[name] = val\n        setSelectedDate(newGroup)\n    }\n\n\n    const generator = () => {\n        var setdays, sethours\n        const todaysDate = date.getDate()\n        const selected_date_array = selectedDate.date.split(' ')\n        const selected_date = parseInt(selected_date_array[1])\n\n        // rules\n        sethours = selectedDate.meridian == 'pm' ? (selectedDate.hours + 12) : selectedDate.hours\n        if (todaysDate < selected_date) {\n            setdays = selected_date - todaysDate\n        }\n\n        return { hours: sethours, mins: selectedDate.minutes, days: setdays == undefined ? 0 : setdays }\n    }\n\n\n    const constructing_billing = () => {\n        var night_hr_rate, night_hr_max, day_hr_rate, day_hr_max, collective_days_rate, full_day_rate, startBilling, endofdayBilling, lastHr, remHr, collective_days\n        var remNight, remDay, remExtra, last_night, last_day, last_extra, startSum, lastSum\n        day_hr_rate = .10\n        var dayLimit = 2\n        var nightLimit = 3\n        night_hr_rate = .20\n        day_hr_max = .20\n        night_hr_max = .60\n        full_day_rate = (night_hr_max * 2) + day_hr_max\n        var settime = generator()\n        const startTime = `${date.getHours()>12?date.getHours()-12:date.getHours()}:${date.getMinutes() < 10?`0${date.getMinutes()}`:date.getMinutes()}${date.getHours() > 12? 'pm': 'am'}`\n        var fullStartHr\n        var dullEndHr\n\n\n        collective_days_rate = settime.days >= 2 ? (settime.days - 1) * full_day_rate : 0\n        collective_days = settime.days >= 2 ? settime.days - 1 : 0\n\n        // current day calc\n        if (date.getHours() < 6) {\n            remHr = 6 - date.getHours()\n            remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate\n            remDay = day_hr_max\n            remExtra = night_hr_max\n            fullStartHr = remHr + 18\n            startSum = remNight + remDay + remExtra\n        }\n        if (date.getHours() > 6 && date.getHours() < 18) {\n            remHr = 18 - date.getHours()\n            remDay = remHr >= dayLimit ? day_hr_max : remHr * day_hr_rate\n            remNight = night_hr_max\n            remExtra = 0\n            fullStartHr = remHr + 6\n            startSum = remNight + remDay + remExtra\n\n        }\n        if (date.getHours() > 18) {\n            remHr = 24 - date.getHours()\n            remNight = remHr >= nightLimit ? night_hr_max : remHr * night_hr_rate\n            remDay = 0\n            remExtra = 0\n            fullStartHr = remHr\n            startSum = remNight + remDay + remExtra\n        }\n\n\n\n\n        // end date calc\n        if (settime.hours <= 6) {\n            last_night = settime.hours >= nightLimit ? night_hr_max : settime.hours * night_hr_rate\n            last_day = 0\n            last_extra = 0\n            lastSum = last_night + last_day + last_extra\n        }\n        if (settime.hours > 6 && settime.hours <= 18) {\n            last_night = night_hr_max\n            last_day = (settime.hours - 6) >= dayLimit ? day_hr_max : (settime.hours - 6) * day_hr_rate\n            last_extra = 0\n            lastSum = last_night + last_day + last_extra\n        }\n        if (settime.hours > 18) {\n            last_night = night_hr_max\n            last_day = day_hr_max\n            last_extra = (settime.hours - 18) >= nightLimit ? night_hr_max : (settime.hours - 18) * night_hr_rate\n            lastSum = last_night + last_day + last_extra\n        }\n        // if(settime.hours == 0 && settime.mins == 0){\n\n        // }\n        const sumbilling = parseFloat(collective_days_rate + startSum + lastSum).toFixed(2)\n        const expTime = `${selectedDate.date} - ${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`\n        const summedTime = (fullStartHr + (collective_days * 24) + settime.hours + date.getHours())\n        const expTimeInSecs = (summedTime + date.getHours()) * 3600\n        const setCount = (date.getHours() * 3600) + (date.getMinutes() * 60)\n\n        // localStorage.setItem('count', 0)\n        localStorage.setItem('expTimeInSecs', expTimeInSecs)\n        setBilling(sumbilling)\n        localStorage.setItem('expTime', expTime)\n        localStorage.setItem('total', totalbilling)\n        localStorage.setItem('startTime', startTime)\n\n        return totalbilling\n    }\n    constructing_billing()\n    generator()\n\n\n\n\n\n    mins.push({ value: 0, label: 0 })\n\n    for (var i = 0; i < 13; i++) {\n        hrs.push({ value: i, label: i })\n    }\n    for (var i = date.getDate() + 1; i < (days_in_current_month + 1); i++) {\n        month_days.push({ value: `${current_month.substring(0, 3)} ${i}`, label: `${current_month.substring(0, 3)} ${i}` })\n    }\n\n\n    return (\n        <div className='global_container'>\n            <h2 style={{ textAlign: 'center', paddingTop: '12%', color: 'red' }}>Set Your Expiration Time</h2>\n            <ScrollableDatePicker expired={setExpiredTime} month={month_days} hours={hrs} minutes={mins} />\n            <h4 style={{ textAlign: 'center', color: 'red' }}>Expires at:</h4>\n            <p style={{ textAlign: 'center' }}>{selectedDate.date} - {`${selectedDate.hours}:${selectedDate.minutes == 0 ? '00' : selectedDate.minutes}${selectedDate.meridian}`}</p>\n            <h4 style={{ textAlign: 'center', color: 'red' }}>Total Cost:</h4>\n            <p style={{ textAlign: 'center' }}>${totalbilling}</p>\n            <div className='scroll_confirm_holder'>\n                <CircleBtnsImg title='Confirm' img='' class='plateCapture' />\n            </div>\n        </div>\n    )\n\n}\n\nexport default LongTimeSelections;\n\n\n\n\n\n\n\n    // for (var i = 0; i < 60; i = i + 30) {\n    //     mins.push({ value: i, label: i })\n    // }\n            // console.log(setCount)\n        // console.log(expTimeInSecs)\n        // console.log(fullStartHr)\n        // console.log(collective_days * 24)\n        // console.log(settime.hours)\n        // console.log(date.getHours())\n        // console.log(summedTime)\n\n        // console.log(startSum)\n        // console.log(lastSum)\n"]},"metadata":{},"sourceType":"module"}