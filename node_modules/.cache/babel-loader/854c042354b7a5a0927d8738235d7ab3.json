{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Stripe/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n/**\n* @author\n* @function PaymentForm\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = props => {\n  _s();\n\n  // using state to keep track of stripe payment, show errors, and manange user interface\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecrete] = useState('');\n  const stripe = useStripe();\n  const element = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: element.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          amount: 100,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"SuccessFul Payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log('[error'.error);\n      }\n    }\n  }; // end of handle submit\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Payment SuccessFul\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaymentForm, \"gl/ZX95GAsyWi56mWdrpGQY9GLA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Stripe/PaymentForm.js"],"names":["React","useState","CardElement","useElements","useStripe","axios","PaymentForm","props","success","setSuccess","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecrete","stripe","element","handleSubmit","e","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AACvB;AACR,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACe,YAAD,EAAeC,gBAAf,IAAmChB,QAAQ,CAAC,EAAD,CAAjD;AAEA,QAAMiB,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAMe,OAAO,GAAGhB,WAAW,EAA3B;;AAEA,QAAMiB,YAAY,GAAG,MAAOC,CAAP,IAAY;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM;AAACZ,MAAAA,KAAD;AAAQa,MAAAA;AAAR,QAAyB,MAAML,MAAM,CAACM,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAE,MADsD;AAE5DC,MAAAA,IAAI,EAAEP,OAAO,CAACQ,UAAR,CAAmBzB,WAAnB;AAFsD,KAA3B,CAArC;;AAKJ,QAAG,CAACQ,KAAJ,EAAU;AACN,UAAG;AACC,cAAM;AAACkB,UAAAA;AAAD,YAAOL,aAAb;AACA,cAAMM,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAN,CAAW,+BAAX,EAA4C;AAC/DC,UAAAA,MAAM,EAAE,GADuD;AAE/DH,UAAAA;AAF+D,SAA5C,CAAvB;;AAIA,YAAGC,QAAQ,CAACG,IAAT,CAAcxB,OAAjB,EAAyB;AACrByB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAzB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AAEJ,OAXD,CAWC,OAAMC,KAAN,EAAY;AACjBuB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAUxB,KAAtB;AACK;AACJ;AAEA,GAzBD,CAX+B,CAoC7B;;;AAIA,sBACE;AAAA,cACC,CAACF,OAAD,gBACD;AAAM,MAAA,QAAQ,EAAEY,YAAhB;AAAA,8BACI;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBASD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAVA,mBADF;AAqBA,CA7DF;;GAAMd,W;UAQSF,S,EACCD,W;;;KATVG,W;AA+DN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport axios from 'axios'\n\n/**\n* @author\n* @function PaymentForm\n**/\n\nconst PaymentForm = (props) => {\n        // using state to keep track of stripe payment, show errors, and manange user interface\nconst [success, setSuccess] = useState(false)\nconst [error, setError] = useState(null)\nconst [processing, setProcessing] = useState('')\nconst [disabled, setDisabled] = useState(true)\nconst [clientSecret, setClientSecrete] = useState('')\n\nconst stripe = useStripe()\nconst element = useElements()\n\nconst handleSubmit = async (e) =>{\n    e.preventDefault()\n\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n        type: 'card', \n        card: element.getElement(CardElement)\n    })\n\nif(!error){\n    try{\n        const {id} = paymentMethod\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n            amount: 100, \n            id\n        })\n        if(response.data.success){\n            console.log(\"SuccessFul Payment\")\n            setSuccess(true)\n        }\n\n    }catch(error){\nconsole.log('[error'. error)\n    }\n}\n\n} // end of handle submit\n\n\n\n  return(\n    <>\n    {!success ? \n    <form onSubmit={handleSubmit}>\n        <fieldset className='FormGroup'>\n            <div className=\"formRow\">\n                <CardElement />\n            </div>\n        </fieldset>\n        <button>Pay now</button>\n    </form>:\n    <div>\n        <h1> \n            Payment SuccessFul\n        </h1>\n    </div>\n\n}\n    </>\n   )\n\n }\n\nexport default PaymentForm"]},"metadata":{},"sourceType":"module"}