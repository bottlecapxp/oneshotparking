{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Stripe/Stripe-CC-Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { PaymentContext } from '../Context/PaymentContext';\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport Lock from '../Assets/lock.png';\nimport CreditCardIcon from \"../Assets/ccIcon.svg\";\nimport axios from 'axios';\nimport '../Pages/pages.css';\nimport Loading from '../Components/Loading/Loading';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StripePayment = () => {\n  _s();\n\n  // using state to keep track of stripe payment, show errors, and manange user interface\n  const [success, setSuccess] = useState(false);\n  const [status, setStatus] = useState({\n    status: \"Enter your card's information below\"\n  });\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecrete] = useState('');\n  const {\n    userInfo,\n    totalbilling,\n    darkMode\n  } = useContext(PaymentContext);\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    globalContainer: 'global_container',\n    color: '#585858',\n    submitBtn: 'submitBtn',\n    card: 'card_'\n  });\n  const stripe = useStripe();\n  const element = useElements();\n  const history = useHistory();\n  const CARD_ELEMENT_OPTIONS = {\n    style: {\n      base: {\n        color: 'white'\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: element.getElement(CardNumberElement, CardExpiryElement, CardCvcElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          name: userInfo.name,\n          phone: userInfo.phone,\n          license: userInfo.license,\n          amount: totalbilling * 100,\n          id\n        });\n\n        if (response.data.success) {\n          // setTimeOut to Change to next page\n          setTimeout(() => {\n            history.push('/remaining-time/');\n          }, 2000);\n          console.log(\"SuccessFul Payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        // Change the title information\n        setStatus({\n          status: error\n        });\n      }\n    }\n  }; // end of handle submit\n\n\n  useEffect(() => {\n    if (darkMode >= 1800 || darkMode <= 600) {\n      setDarkModeStyle({\n        globalContainer: 'global_container_dark',\n        color: 'white',\n        submitBtn: 'submitBtn_dark',\n        card: 'card_dark'\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkModeStyle.globalContainer} choose_lot`,\n      children: stripe ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"global_content_title slim\",\n          style: {\n            textAlign: 'center',\n            marginTop: '-50%',\n            color: darkModeStyle.color\n          },\n          children: status.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: darkModeStyle.card,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stacked_\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: darkModeStyle.color\n              },\n              id: \"CCnumberLabel\",\n              children: \"Enter Your Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"CCnumber\",\n              children: /*#__PURE__*/_jsxDEV(CardNumberElement, {\n                options: CARD_ELEMENT_OPTIONS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth_holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stacked_\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  color: darkModeStyle.color\n                },\n                children: \"Expiration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"expiration\",\n                children: /*#__PURE__*/_jsxDEV(CardExpiryElement, {\n                  options: CARD_ELEMENT_OPTIONS\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stacked_\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  color: darkModeStyle.color\n                },\n                children: \"CVC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"cvc\",\n                children: /*#__PURE__*/_jsxDEV(CardCvcElement, {\n                  options: CARD_ELEMENT_OPTIONS\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"ccIcon\",\n                src: CreditCardIcon,\n                alt: \"creditCard_logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"securePaymentHolder\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"securePayment_\",\n              children: [\"  \", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"lock\",\n                src: Lock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: darkModeStyle.color\n                },\n                children: \"Secure Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ccCardSubmissionHolder\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              style: success ? {\n                color: 'green',\n                border: '1px solid green !important'\n              } : {\n                color: '#FF5759',\n                border: '1px solid #FF5759 !important'\n              },\n              className: `${darkModeStyle.submitBtn} ccCardSubmission`,\n              type: \"submit\",\n              value: success ? 'Approved!' : 'Pay Now'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(StripePayment, \"7LBSbkLfQcnRtumlOt/Xw7ck+Qg=\", false, function () {\n  return [useStripe, useElements, useHistory];\n});\n\n_c = StripePayment;\nexport default StripePayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripePayment\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Stripe/Stripe-CC-Payment.js"],"names":["React","useState","useContext","useEffect","PaymentContext","CardNumberElement","CardCvcElement","CardExpiryElement","useElements","useStripe","Lock","axios","Loading","withRouter","useHistory","StripePayment","success","setSuccess","status","setStatus","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecrete","userInfo","totalbilling","darkMode","darkModeStyle","setDarkModeStyle","globalContainer","color","submitBtn","card","stripe","element","history","CARD_ELEMENT_OPTIONS","style","base","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","getElement","id","response","post","name","phone","license","amount","data","setTimeout","push","console","log","textAlign","marginTop","CreditCardIcon","border"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport {PaymentContext} from '../Context/PaymentContext'\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport Lock from '../Assets/lock.png'\nimport CreditCardIcon from '../Assets/ccIcon.svg'\nimport axios from 'axios'\nimport '../Pages/pages.css'\nimport Loading from '../Components/Loading/Loading'\nimport { withRouter, useHistory } from 'react-router-dom'\n\n\nconst StripePayment = () => {\n    // using state to keep track of stripe payment, show errors, and manange user interface\n    const [success, setSuccess] = useState(false)\n    const [status, setStatus] = useState({\n        status: \"Enter your card's information below\"\n    })\n    const [processing, setProcessing] = useState('')\n    const [disabled, setDisabled] = useState(true)\n    const [clientSecret, setClientSecrete] = useState('')\n    const {userInfo, totalbilling, darkMode} = useContext(PaymentContext)\n    const [darkModeStyle, setDarkModeStyle] = useState({\n        globalContainer: 'global_container', \n        color: '#585858', \n        submitBtn: 'submitBtn',\n        card: 'card_'   \n    })\n\n\n    const stripe = useStripe()\n    const element = useElements()\n    const history = useHistory()\n\n    const CARD_ELEMENT_OPTIONS = {\n        style: { \n            base: { \n                color: 'white'\n            }\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n    \n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: element.getElement(CardNumberElement, CardExpiryElement, CardCvcElement),\n        })\n\n        if (!error) {\n            try {\n                const { id } = paymentMethod\n                const response = await axios.post(\"http://localhost:4000/payment\", {\n                    name: userInfo.name, \n                    phone: userInfo.phone, \n                    license: userInfo.license,\n                    amount: totalbilling * 100,\n                    id\n                })\n                if (response.data.success) {\n                    // setTimeOut to Change to next page\n                    setTimeout(()=>{\n                        history.push('/remaining-time/')\n                    }, 2000)\n                        console.log(\"SuccessFul Payment\")\n                        setSuccess(true)\n                 \n                  \n                }\n\n            } catch (error) {\n                // Change the title information\n                setStatus({\n                    status: error\n                })\n            }\n        }\n\n    } // end of handle submit\n\n    useEffect(()=>{\n        if(darkMode >= 1800 || darkMode <= 600){\n            setDarkModeStyle({\n                globalContainer: 'global_container_dark',\n                color: 'white',\n                submitBtn: 'submitBtn_dark',\n                card: 'card_dark' \n            })\n        }\n    }, [])\n    return (\n        <>\n            <div className={`${darkModeStyle.globalContainer} choose_lot`}>\n                {stripe? \n\n                <div>\n                    <h1 className='global_content_title slim' style={{ textAlign: 'center', marginTop: '-50%', color: darkModeStyle.color }}>{status.status}</h1>\n                    <form onSubmit={handleSubmit} className={darkModeStyle.card}> {/* this should be a form */}\n                        {/* Enter your card numner */}\n                        <div className='stacked_'>\n                            <label style={{color: darkModeStyle.color}} id='CCnumberLabel'>Enter Your Card Number</label>\n                            <div id='CCnumber'>\n                                <CardNumberElement options={CARD_ELEMENT_OPTIONS}/>\n                            </div>\n                        </div>\n                        {/* Expiration CVC & Icon */}\n                        <div className='auth_holder'>\n                            <div className='stacked_'>\n                                <label style={{color: darkModeStyle.color}}>Expiration</label>\n                                <div id='expiration'>\n                                    <CardExpiryElement options={CARD_ELEMENT_OPTIONS}/>\n                                </div>\n\n                            </div>\n                            <div className='stacked_'>\n                                <label style={{color: darkModeStyle.color}}>CVC</label>\n                                <div id='cvc'>\n                                    <CardCvcElement options={CARD_ELEMENT_OPTIONS} />\n                                </div>\n                            </div>\n                            <div>\n                                <img className='ccIcon' src={CreditCardIcon} alt='creditCard_logo'></img>\n                            </div>\n                        </div>\n                        <div className='securePaymentHolder'>\n                            <div className='securePayment_'>  {/* display flex */}\n                                {/* image */}\n                                <img className='lock' src={Lock}></img>\n                                <p style={{color: darkModeStyle.color}}>Secure Payment</p>\n                                {/* text info */}\n                            </div>\n                        </div>\n\n                        {/* Button here */}\n                        <div className='ccCardSubmissionHolder'>\n                            <input style={success? { color: 'green', border: '1px solid green !important' }:{ color: '#FF5759',  border: '1px solid #FF5759 !important' }} className={`${darkModeStyle.submitBtn} ccCardSubmission`} type='submit' value={success? 'Approved!': 'Pay Now'}></input>\n                        </div>\n\n\n                    </form>\n                </div>\n                :\n                <Loading />\n}\n            </div>\n        </>\n    )\n}\nexport default StripePayment;\n\n"]},"metadata":{},"sourceType":"module"}