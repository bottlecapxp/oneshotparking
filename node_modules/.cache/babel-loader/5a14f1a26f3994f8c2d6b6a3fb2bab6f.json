{"ast":null,"code":"import { Component } from 'react';\nimport PaymentGenerator from '../Financials/Calculator/PaymentGenerator';\nimport Tick from '../../Assets/tick.mp3';\nimport { Howl, Howler } from 'howler'; // const pGenerator = new PaymentGenerator()\n\nclass TimerLogic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setValue = valFunc => {\n      this.value = valFunc;\n    };\n\n    this.stepValue = v => {\n      // v stands for value\n      if (v > 1) {\n        return 1;\n      } else {\n        return Math.round(v * 5) / 5;\n      }\n    };\n\n    this.scrollTime = stepVal => {\n      var givenValue = Math.round(stepVal * 100);\n      console.log(`test: ${givenValue}`);\n      var minutes = 0; //300 is max for 5 hours\n\n      this.hours = givenValue / 100; // console.log(stepVal)\n\n      PaymentGenerator(this.hours, this.stagedMinutes); // Sound generator\n\n      return parseInt(`${this.hours}${minutes}`) // `0${this.hours}h : ${this.stagedMinutes}m`\n      ;\n    };\n\n    this.state = {\n      hours: 0,\n      stagedMinutes: 0,\n      value: 0.0\n    };\n  }\n\n} // End of Class\n\n\nexport default TimerLogic; // minutes =  Math.round(6000 * givenValue / 100)\n// // get hours\n// if (minutes > 60){\n//     this.hours = Math.floor(minutes / 100)\n// } else if(minutes / 60 === 1){\n//     this.hours = 1\n// }else{\n//     this.hours = 0\n// }\n// // First Check if you're at a full hour\n// if(minutes === 60 || (minutes / 60) === this.hours){\n//     this.stagedMinutes = '00'\n// }\n// // Else run algorithm\n// else{\n//  this.stagedMinutes = (minutes % 60 % 100)\n// }\n// var sound = new Howl({\n//     src: [Tick], \n//     volume: 0.7\n// })","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Timer/TimerLogic.js"],"names":["Component","PaymentGenerator","Tick","Howl","Howler","TimerLogic","constructor","props","setValue","valFunc","value","stepValue","v","Math","round","scrollTime","stepVal","givenValue","console","log","minutes","hours","stagedMinutes","parseInt","state"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,gBAAP,MAA6B,2CAA7B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,QAA3B,C,CAEA;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUtBC,QAVsB,GAUXC,OAAO,IAAG;AACrB,WAAKC,KAAL,GAAaD,OAAb;AACC,KAZqB;;AAAA,SActBE,SAdsB,GAcVC,CAAC,IAAG;AAAE;AACd,UAAGA,CAAC,GAAG,CAAP,EAAS;AACL,eAAO,CAAP;AACH,OAFD,MAEK;AAED,eAAOC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,CAAf,IAAoB,CAA3B;AACH;AACJ,KArBqB;;AAAA,SAwBtBG,UAxBsB,GAwBTC,OAAO,IAAI;AAChB,UAAIC,UAAU,GAAGJ,IAAI,CAACC,KAAL,CAAWE,OAAO,GAAC,GAAnB,CAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAQF,UAAW,EAAhC;AACA,UAAKG,OAAO,GAAG,CAAf,CAHgB,CAGA;;AAChB,WAAKC,KAAL,GAAaJ,UAAU,GAAG,GAA1B,CAJgB,CAKhB;;AAIAhB,MAAAA,gBAAgB,CAAC,KAAKoB,KAAN,EAAa,KAAKC,aAAlB,CAAhB,CATgB,CAUhB;;AAIA,aAEIC,QAAQ,CAAE,GAAE,KAAKF,KAAM,GAAED,OAAQ,EAAzB,CAFZ,CAGI;AAHJ;AAMP,KA5CqB;;AAEd,SAAKI,KAAL,GAAa;AACTH,MAAAA,KAAK,EAAE,CADE;AAETC,MAAAA,aAAa,EAAE,CAFN;AAGTZ,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAR8B,C,CAyDjC;;;AAEF,eAAeL,UAAf,C,CAIA;AAEQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGR;AACA;AACA;AACA","sourcesContent":["import { Component } from 'react'\nimport PaymentGenerator from '../Financials/Calculator/PaymentGenerator'\nimport Tick from '../../Assets/tick.mp3'\nimport {Howl, Howler} from 'howler'\n\n// const pGenerator = new PaymentGenerator()\n\nclass TimerLogic extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            hours: 0,\n            stagedMinutes: 0,\n            value: 0.0\n        }\n    }\n\n\nsetValue = valFunc =>{\nthis.value = valFunc\n}\n\nstepValue = v =>{ // v stands for value\n    if(v > 1){\n        return 1\n    }else{\n\n        return Math.round(v * 5) / 5\n    }\n}\n\n\nscrollTime = stepVal => {\n        var givenValue = Math.round(stepVal*100)\n        console.log(`test: ${givenValue}`)\n        var  minutes = 0//300 is max for 5 hours\n        this.hours = givenValue / 100\n        // console.log(stepVal)\n\n\n\n        PaymentGenerator(this.hours, this.stagedMinutes)\n        // Sound generator\n\n        \n          \n        return(\n\n            parseInt(`${this.hours}${minutes}`)\n            // `0${this.hours}h : ${this.stagedMinutes}m`\n        )\n\n}\n\n\n\n\n\n\n\n\n\n\n\n} // End of Class\n\nexport default TimerLogic\n\n\n\n// minutes =  Math.round(6000 * givenValue / 100)\n\n        // // get hours\n        // if (minutes > 60){\n        //     this.hours = Math.floor(minutes / 100)\n        // } else if(minutes / 60 === 1){\n        //     this.hours = 1\n        // }else{\n        //     this.hours = 0\n        // }\n        // // First Check if you're at a full hour\n        // if(minutes === 60 || (minutes / 60) === this.hours){\n        //     this.stagedMinutes = '00'\n        // }\n        // // Else run algorithm\n        // else{\n        //  this.stagedMinutes = (minutes % 60 % 100)\n        // }\n\n\n// var sound = new Howl({\n//     src: [Tick], \n//     volume: 0.7\n// })"]},"metadata":{},"sourceType":"module"}