{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/LongTimeSelection.js\";\nimport React from 'react';\nimport Picker from 'react-scrollable-picker';\nimport { useState } from 'react/cjs/react.development';\nimport ScrollableDatePicker from '../Components/ScrollableDatePicker/ScrollableDatePicker';\n/**\n* @author\n* @function LongTimeSelection\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LongTimeSelection = props => {\n  var mins = [];\n  var hrs = [];\n  var month_days = [];\n  const date = new Date();\n\n  for (var i = 0; i < 60; i++) {\n    mins.push({\n      value: i,\n      label: i\n    });\n  }\n\n  for (var i = 0; i < 12; i++) {\n    hrs.push({\n      value: i,\n      label: i\n    });\n  }\n\n  const get_days_of_month = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n\n  const days_in_current_month = get_days_of_month(date.getMonth(), date.getFullYear());\n  console.log(days_in_current_month);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ScrollableDatePicker, {\n      hours: hrs,\n      minutes: mins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_c = LongTimeSelection;\nexport default LongTimeSelection; //     const [groups, setGrouping] = useState({\n//         valueGroups: {\n//             title: 'Mr.',\n//             firstName: 'Micheal',\n//             secondName: 'Jordan'\n//           }, \n//           optionGroups: {\n//             title: [\n//               { value: 'mr', label: 'Mr.' },\n//               { value: 'ms', label: 'Ms.' },\n//               { value: 'dr', label: 'Dr.' },\n//             ],\n//             firstName: [\n//               { value: 'John', label: 'John' },\n//               { value: 'Micheal', label: 'Micheal' },\n//               { value: 'Elizabeth', label: 'Elizabeth' },\n//             ],\n//             secondName: [\n//               { value: 'Lennon', label: 'Lennon' },\n//               { value: 'Jackson', label: 'Jackson' },\n//               { value: 'Jordan', label: 'Jordan' },\n//               { value: 'Legend', label: 'Legend' },\n//               { value: 'Taylor', label: 'Taylor' }\n//             ],\n//           },\n//     })\n// const handleChange = (name, value) =>{\n//     console.log(groups.valueGroups)\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"LongTimeSelection\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/LongTimeSelection.js"],"names":["React","Picker","useState","ScrollableDatePicker","LongTimeSelection","props","mins","hrs","month_days","date","Date","i","push","value","label","get_days_of_month","month","year","getDate","days_in_current_month","getMonth","getFullYear","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,oBAAP,MAAiC,yDAAjC;AAEA;AACA;AACA;AACA;;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACrC,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBL,IAAAA,IAAI,CAACM,IAAL,CAAU;AAACC,MAAAA,KAAK,EAAEF,CAAR;AAAWG,MAAAA,KAAK,EAAEH;AAAlB,KAAV;AACH;;AACD,OAAI,IAAIA,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBJ,IAAAA,GAAG,CAACK,IAAJ,CAAS;AAACC,MAAAA,KAAK,EAAEF,CAAR;AAAWG,MAAAA,KAAK,EAAEH;AAAlB,KAAT;AACH;;AAED,QAAMI,iBAAiB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC3C,WAAO,IAAIP,IAAJ,CAASO,IAAT,EAAeD,KAAf,EAAsB,CAAtB,EAAyBE,OAAzB,EAAP;AACC,GAFD;;AAGA,QAAMC,qBAAqB,GAAGJ,iBAAiB,CAACN,IAAI,CAACW,QAAL,EAAD,EAAkBX,IAAI,CAACY,WAAL,EAAlB,CAA/C;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,qBAAZ;AAEE,sBACD;AAAA,2BACD,QAAC,oBAAD;AAAsB,MAAA,KAAK,EAAEZ,GAA7B;AAAkC,MAAA,OAAO,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA;AADC,mBADC;AAMA,CA1BF;;KAAMF,iB;AA4BL,eAAeA,iBAAf,C,CAIA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react'\nimport Picker from 'react-scrollable-picker'\nimport { useState } from 'react/cjs/react.development'\nimport ScrollableDatePicker from '../Components/ScrollableDatePicker/ScrollableDatePicker'\n\n/**\n* @author\n* @function LongTimeSelection\n**/\n\nconst LongTimeSelection = (props) => {\nvar mins = []\nvar hrs = []\nvar month_days = []\nconst date = new Date()\n\nfor(var i = 0; i < 60; i++){ \n    mins.push({value: i, label: i})            \n}\nfor(var i = 0; i < 12; i++){ \n    hrs.push({value: i, label: i})            \n}\n\nconst get_days_of_month = (month, year) => { \nreturn new Date(year, month, 0).getDate()\n}\nconst days_in_current_month = get_days_of_month(date.getMonth(), date.getFullYear())\n\nconsole.log(days_in_current_month)\n\n  return(\n <>\n<ScrollableDatePicker hours={hrs} minutes={mins}/>\n </>\n   )\n\n }\n\n export default LongTimeSelection;\n\n\n\n //     const [groups, setGrouping] = useState({\n//         valueGroups: {\n//             title: 'Mr.',\n//             firstName: 'Micheal',\n//             secondName: 'Jordan'\n//           }, \n//           optionGroups: {\n//             title: [\n//               { value: 'mr', label: 'Mr.' },\n//               { value: 'ms', label: 'Ms.' },\n//               { value: 'dr', label: 'Dr.' },\n//             ],\n//             firstName: [\n//               { value: 'John', label: 'John' },\n//               { value: 'Micheal', label: 'Micheal' },\n//               { value: 'Elizabeth', label: 'Elizabeth' },\n//             ],\n//             secondName: [\n//               { value: 'Lennon', label: 'Lennon' },\n//               { value: 'Jackson', label: 'Jackson' },\n//               { value: 'Jordan', label: 'Jordan' },\n//               { value: 'Legend', label: 'Legend' },\n//               { value: 'Taylor', label: 'Taylor' }\n//             ],\n//           },\n//     })\n\n// const handleChange = (name, value) =>{\n//     console.log(groups.valueGroups)\n// }\n"]},"metadata":{},"sourceType":"module"}