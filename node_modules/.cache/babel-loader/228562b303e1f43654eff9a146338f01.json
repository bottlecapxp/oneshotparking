{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Stripe/Stripe-CC-Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { PaymentContext } from '../Context/PaymentContext';\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Lock from '../Assets/lock.png';\nimport CreditCardIcon from \"../Assets/ccIcon.svg\";\nimport '../Pages/pages.css';\nimport Loading from '../Components/Loading/Loading';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport bodyParser from 'body-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StripePayment = () => {\n  _s();\n\n  // using state to keep track of stripe payment, show errors, and manange user interface\n  const stripe = useStripe();\n  const element = useElements();\n  const history = useHistory();\n  const stripePromise = loadStripe(\"pk_live_51J3hpXGLCAc2YCrXa5gDpyCtFwkyHHrKYDMlecmFryikVN0XvTYUYBAeSztGufKD4zw84iuve845H0V4uffBjWuo00UytcQdr7\");\n  const [success, setSuccess] = useState(false);\n  const [status, setStatus] = useState({\n    status: \"Enter your card's information below\"\n  });\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecrete] = useState('');\n  const {\n    userInfo,\n    totalbilling,\n    darkMode\n  } = useContext(PaymentContext);\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    globalContainer: 'global_container',\n    color: '#585858',\n    submitBtn: 'submitBtn',\n    card: 'card_'\n  });\n  const api_data = {\n    'fullname': localStorage.getItem('fullname'),\n    'license_plate': localStorage.getItem('license'),\n    'set_time': localStorage.getItem('startTime'),\n    'exp_time': localStorage.getItem('expTime'),\n    'location_id': localStorage.getItem('lot'),\n    'paid': localStorage.getItem('total')\n  };\n  const CARD_ELEMENT_OPTIONS = {\n    style: {\n      base: {\n        color: 'black'\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: element.getElement(CardNumberElement, CardExpiryElement, CardCvcElement)\n    });\n\n    if (!error) {\n      try {\n        setTimeout(() => {\n          history.push('/remaining-time/');\n        }, 2000);\n        setSuccess(true); // const { id } = paymentMethod\n\n        fetch('https://osparking.pythonanywhere.com/visitor', {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(api_data)\n        }).then(response => response.json()).then(data => {\n          console.log('Success:', data);\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      } catch (error) {\n        // Change the title information\n        setStatus({\n          status: error\n        });\n      }\n    }\n  }; // end of handle submit\n\n\n  const msg_data = {\n    'number': localStorage.getItem('phone')\n  };\n\n  const send_message = () => {\n    if (success) {\n      fetch('https://osparking.pythonanywhere.com/on-payment', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(msg_data)\n      }).then(promise => promise.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n\n  send_message();\n  useEffect(() => {\n    if (darkMode >= 1800 || darkMode <= 600) {\n      setDarkModeStyle({\n        globalContainer: 'global_container_dark',\n        color: 'white',\n        submitBtn: 'submitBtn_dark',\n        card: 'card_dark'\n      });\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkModeStyle.globalContainer} choose_lot`,\n      children: stripe ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"global_content_title slim\",\n          style: {\n            textAlign: 'center',\n            marginTop: '-50%',\n            color: darkModeStyle.color\n          },\n          children: status.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: darkModeStyle.card,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stacked_\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: 'black'\n              },\n              id: \"CCnumberLabel\",\n              children: \"Enter Your Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"CCnumber\",\n              children: /*#__PURE__*/_jsxDEV(CardNumberElement, {\n                options: CARD_ELEMENT_OPTIONS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth_holder\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stacked_\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  color: darkModeStyle.color\n                },\n                children: \"Expiration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"expiration\",\n                children: /*#__PURE__*/_jsxDEV(CardExpiryElement, {\n                  options: CARD_ELEMENT_OPTIONS\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stacked_\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  color: darkModeStyle.color\n                },\n                children: \"CVC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"cvc\",\n                children: /*#__PURE__*/_jsxDEV(CardCvcElement, {\n                  options: CARD_ELEMENT_OPTIONS\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"ccIcon\",\n                src: CreditCardIcon,\n                alt: \"creditCard_logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"securePaymentHolder\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"securePayment_\",\n              children: [\"  \", /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"lock\",\n                src: Lock,\n                alt: \"lock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: darkModeStyle.color\n                },\n                children: \"Secure Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ccCardSubmissionHolder\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              style: success ? {\n                backgroundColor: 'green',\n                color: 'white',\n                fontWeight: 'bold',\n                border: '1px solid green !important'\n              } : {\n                color: '#FF5759',\n                border: '1px solid #FF5759 !important'\n              },\n              className: `${darkModeStyle.submitBtn} ccCardSubmission`,\n              type: \"submit\",\n              value: success ? 'Approved!' : 'Pay Now'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(StripePayment, \"J39iH2x9r4ewHkh51Xwsvr/2+VE=\", false, function () {\n  return [useStripe, useElements, useHistory];\n});\n\n_c = StripePayment;\nexport default StripePayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripePayment\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Stripe/Stripe-CC-Payment.js"],"names":["React","useState","useContext","useEffect","PaymentContext","CardNumberElement","CardCvcElement","CardExpiryElement","useElements","useStripe","loadStripe","Lock","Loading","withRouter","useHistory","bodyParser","StripePayment","stripe","element","history","stripePromise","success","setSuccess","status","setStatus","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecrete","userInfo","totalbilling","darkMode","darkModeStyle","setDarkModeStyle","globalContainer","color","submitBtn","card","api_data","localStorage","getItem","CARD_ELEMENT_OPTIONS","style","base","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","getElement","setTimeout","push","fetch","method","mode","headers","body","JSON","stringify","then","response","json","data","console","log","catch","msg_data","send_message","promise","textAlign","marginTop","CreditCardIcon","backgroundColor","fontWeight","border"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { PaymentContext } from '../Context/PaymentContext'\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport Lock from '../Assets/lock.png'\nimport CreditCardIcon from '../Assets/ccIcon.svg'\nimport '../Pages/pages.css'\nimport Loading from '../Components/Loading/Loading'\nimport { withRouter, useHistory } from 'react-router-dom'\nimport bodyParser from 'body-parser'\n\n\nconst StripePayment = () => {\n    // using state to keep track of stripe payment, show errors, and manange user interface\n    const stripe = useStripe()\n    const element = useElements()\n    const history = useHistory()\n\n    const stripePromise = loadStripe(\"pk_live_51J3hpXGLCAc2YCrXa5gDpyCtFwkyHHrKYDMlecmFryikVN0XvTYUYBAeSztGufKD4zw84iuve845H0V4uffBjWuo00UytcQdr7\")\n\n    const [success, setSuccess] = useState(false)\n    const [status, setStatus] = useState({\n        status: \"Enter your card's information below\"\n    })\n    const [processing, setProcessing] = useState('')\n    const [disabled, setDisabled] = useState(true)\n    const [clientSecret, setClientSecrete] = useState('')\n    const { userInfo, totalbilling, darkMode } = useContext(PaymentContext)\n    const [darkModeStyle, setDarkModeStyle] = useState({\n        globalContainer: 'global_container',\n        color: '#585858',\n        submitBtn: 'submitBtn',\n        card: 'card_'\n    })\n\n    const api_data = {\n        'fullname': localStorage.getItem('fullname'),\n        'license_plate': localStorage.getItem('license'),\n        'set_time': localStorage.getItem('startTime'),\n        'exp_time': localStorage.getItem('expTime'),\n        'location_id': localStorage.getItem('lot'),\n        'paid': localStorage.getItem('total')\n    }\n\n\n\n    const CARD_ELEMENT_OPTIONS = {\n        style: {\n            base: {\n                color: 'black' \n            }\n        }\n    }\n\n\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: element.getElement(CardNumberElement, CardExpiryElement, CardCvcElement),\n        })\n\n        if (!error) {\n            try {\n                setTimeout(() => {\n                    history.push('/remaining-time/')\n                }, 2000)\n                setSuccess(true)\n                // const { id } = paymentMethod\n\n                fetch('https://osparking.pythonanywhere.com/visitor', {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        'Access-Control-Allow-Origin':'*',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(api_data)\n                }).then(response => response.json())\n                    .then(data => {\n                        console.log('Success:', data);\n                    })\n                    .catch((error) => {\n                        console.error('Error:', error);\n                    });\n\n\n            } catch (error) {\n                // Change the title information\n                setStatus({\n                    status: error\n                })\n            }\n        }\n\n    } // end of handle submit\n\n\n    const msg_data = {\n        'number': localStorage.getItem('phone'),\n    }\n    \n    const send_message = () => {\n        if(success){\n            fetch('https://osparking.pythonanywhere.com/on-payment', {\n                method: 'POST', \n                mode: 'cors', \n                headers: {\n                    'Access-Control-Allow-Origin':'*',\n                    'Content-Type': 'application/json'\n                },\n                body:JSON.stringify(msg_data)\n            })\n            .then((promise) => promise.json())\n            .then((data) => {\n                console.log(data)\n            })\n        }\n\n    }\n    send_message()\n\n    useEffect(() => {\n        if (darkMode >= 1800 || darkMode <= 600) {\n            setDarkModeStyle({\n                globalContainer: 'global_container_dark',\n                color: 'white',\n                submitBtn: 'submitBtn_dark',\n                card: 'card_dark'\n            })\n        }\n    }, [darkMode])\n    return (\n        <>\n            <div className={`${darkModeStyle.globalContainer} choose_lot`}>\n                {stripe ?\n\n                    <div>\n                        <h1 className='global_content_title slim' style={{ textAlign: 'center', marginTop: '-50%', color: darkModeStyle.color }}>{status.status}</h1>\n                        <form onSubmit={handleSubmit} className={darkModeStyle.card}> {/* this should be a form */}\n                            {/* Enter your card numner */}\n                            <div className='stacked_'>\n                                {/* darkModeStyle.color */}\n                                <label style={{ color: 'black' }} id='CCnumberLabel'>Enter Your Card Number</label>\n                                <div id='CCnumber'>\n                                    <CardNumberElement options={CARD_ELEMENT_OPTIONS} />\n                                </div>\n                            </div>\n                            {/* Expiration CVC & Icon */}\n                            <div className='auth_holder'>\n                                <div className='stacked_'>\n                                    <label style={{ color: darkModeStyle.color }}>Expiration</label>\n                                    <div id='expiration'>\n                                        <CardExpiryElement options={CARD_ELEMENT_OPTIONS} />\n                                    </div>\n\n                                </div>\n                                <div className='stacked_'>\n                                    <label style={{ color: darkModeStyle.color }}>CVC</label>\n                                    <div id='cvc'>\n                                        <CardCvcElement options={CARD_ELEMENT_OPTIONS} />\n                                    </div>\n                                </div>\n                                <div>\n                                    <img className='ccIcon' src={CreditCardIcon} alt='creditCard_logo'></img>\n                                </div>\n                            </div>\n                            <div className='securePaymentHolder'>\n                                <div className='securePayment_'>  {/* display flex */}\n                                    {/* image */}\n                                    <img className='lock' src={Lock} alt='lock'></img>\n                                    <p style={{ color: darkModeStyle.color }}>Secure Payment</p>\n                                    {/* text info */}\n                                </div>\n                            </div>\n\n                            {/* Button here */}\n                            <div className='ccCardSubmissionHolder'>\n                                <input style={success ? { backgroundColor: 'green', color: 'white', fontWeight:'bold' ,border: '1px solid green !important' } : { color: '#FF5759', border: '1px solid #FF5759 !important' }} className={`${darkModeStyle.submitBtn} ccCardSubmission`} type='submit' value={success ? 'Approved!' : 'Pay Now'}></input>\n                            </div>\n\n\n                        </form>\n                    </div>\n                    :\n                    <Loading />\n                }\n            </div>\n        </>\n    )\n}\nexport default StripePayment;\n\n"]},"metadata":{},"sourceType":"module"}