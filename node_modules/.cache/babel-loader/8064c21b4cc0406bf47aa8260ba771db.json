{"ast":null,"code":"import _objectSpread from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'../CircleBtns_txt/CircleBtnstxt.css';import{jsx as _jsx}from\"react/jsx-runtime\";var CircleTxtBtns=function CircleTxtBtns(_ref){var title=_ref.title,time=_ref.time,addTime=_ref.addTime,commit=_ref.commit;// const {darkMode} = useContext(PaymentContext)\nvar darkMode=1800;var _useState=useState({buttonStyles:'global_circle_btns',title:'title'}),_useState2=_slicedToArray(_useState,2),darkModeStyle=_useState2[0],setDarkModeStyle=_useState2[1];var _useState3=useState({title:title,setTime:parseFloat(time)}),_useState4=_slicedToArray(_useState3,2),timer=_useState4[0],setTimer=_useState4[1];var date=new Date();var hour=date.getHours();var limit=18;var initial_max_value=0;var incrementTime=function incrementTime(){addTime(timer.setTime,commit);};var te=function te(){};useEffect(function(){if(darkMode>=1800||darkMode<=600){setDarkModeStyle({buttonStyles:'global_circle_btns_dark',title:'title_dark'});}if(darkMode<1800||darkMode>600){setDarkModeStyle({buttonStyles:'global_circle_btns',title:'title'});}var lStorage=localStorage.getItem('max');if(time==0){console.log(hour);if(hour<limit&&hour>6){var remaining_time=limit-hour;setTimer(_objectSpread(_objectSpread({},timer),{},{setTime:\"0.0\".concat(remaining_time)}));localStorage.setItem('max',true);}if(hour>=limit&&hour<24){var rem_time=24-hour+6;setTimer(_objectSpread(_objectSpread({},timer),{},{setTime:\"0.\".concat(rem_time)}));// need to set condition for when # reaach above 9      \nlocalStorage.setItem('max',true);}if(hour<6){var rem_hr=6-hour;setTimer(_objectSpread(_objectSpread({},timer),{},{setTime:\"0.0\".concat(rem_hr)}));localStorage.setItem('max',true);}if(lStorage==true){console.log('work3e');}}},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(darkModeStyle.buttonStyles,\" content-align\"),onClick:incrementTime,children:/*#__PURE__*/_jsx(\"span\",{className:darkModeStyle.title,children:timer.title})});};export default CircleTxtBtns;","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js"],"names":["React","useEffect","useState","CircleTxtBtns","title","time","addTime","commit","darkMode","buttonStyles","darkModeStyle","setDarkModeStyle","setTime","parseFloat","timer","setTimer","date","Date","hour","getHours","limit","initial_max_value","incrementTime","te","lStorage","localStorage","getItem","console","log","remaining_time","setItem","rem_time","rem_hr"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../CircleBtns_txt/CircleBtnstxt.css'\n\nconst CircleTxtBtns = ({ title, time, addTime, commit }) => {\n    // const {darkMode} = useContext(PaymentContext)\n    const darkMode = 1800\n    const [darkModeStyle, setDarkModeStyle] = useState({buttonStyles: 'global_circle_btns', title: 'title'})\n    const [timer, setTimer] = useState({title: title, setTime: parseFloat(time)})\n    const date = new Date()\n    const hour = date.getHours()\n    const limit = 18\n    var initial_max_value = 0\n\n    const incrementTime = () => {\n        addTime(timer.setTime, commit)\n    }\n\n    const te = () =>{\n\n    }\n\n\n    useEffect(() => {\n        if (darkMode >= 1800 || darkMode <= 600) {\n            setDarkModeStyle({\n                buttonStyles: 'global_circle_btns_dark',\n                title: 'title_dark'\n            })\n        }\n        if (darkMode < 1800 || darkMode > 600) {\n            setDarkModeStyle({\n                buttonStyles: 'global_circle_btns',\n                title: 'title'\n            })\n        }\n\n        const lStorage = localStorage.getItem('max')\n        if (time == 0) {\n            console.log(hour)\n                if(hour < limit && hour > 6){\n                    const remaining_time = limit - hour\n                    setTimer({...timer, setTime: `0.0${remaining_time}`})\n                    localStorage.setItem('max', true)\n                }\n                if(hour >= limit && hour < 24){\n                    const rem_time =(24 - hour) + 6\n                    setTimer({...timer, setTime: `0.${rem_time}`}) // need to set condition for when # reaach above 9      \n                    localStorage.setItem('max', true)   \n                }\n                if(hour < 6){\n                    const rem_hr = 6 - hour\n                    setTimer({...timer, setTime: `0.0${rem_hr}`})                \n                    localStorage.setItem('max', true)\n                }\n                if(lStorage == true){ \n                    console.log('work3e')\n                }\n            \n            }\n        \n   \n        \n\n\n\n\n\n\n    }, [])\n\n\n    return (\n        <div className={`${darkModeStyle.buttonStyles} content-align`} onClick={incrementTime}>\n            <span className={darkModeStyle.title}>{timer.title}</span>\n        </div>\n    )\n}\n\nexport default CircleTxtBtns;"]},"metadata":{},"sourceType":"module"}