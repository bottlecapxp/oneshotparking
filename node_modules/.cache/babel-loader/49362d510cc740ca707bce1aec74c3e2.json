{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Timer/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { PaymentContext } from '../../Context/PaymentContext';\nimport \"../Timer/Timer.css\";\nimport Moon from '../../Assets/moon.png';\nimport Day from \"../../Assets/sun.svg\";\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from \"react-circular-input\";\nimport TimerLogic from \"./TimerLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  // const today = new Date();\n  const timerLogic = new TimerLogic();\n  const {\n    totalbilling,\n    dayTime,\n    dayTimeBilling,\n    nightTime,\n    nightTimeBilling,\n    setExpiredTime,\n    setStartTime,\n    darkMode\n  } = useContext(PaymentContext); // const pGenerator = new PaymentGenerator();\n\n  const [value, setValue] = useState(null);\n  const [validateDayTime, setDayTimeValidation] = useState();\n  const [validateNightTime, setNightTimeValidation] = useState();\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    circleContainer: 'timeInfo',\n    costAmount: 'cost_amount',\n    circularTrack: '#eee'\n  });\n  var hours = Math.floor(timerLogic.scrollTime(timerLogic.stepValue(value)) / 100);\n  var minutes = timerLogic.scrollTime(timerLogic.stepValue(value)) % 100;\n  var timeUnit = 'am';\n  var cTimeUnit = 'am';\n\n  if (minutes === 0) {\n    minutes = parseInt(`${'00'}`);\n  }\n\n  const currentTime = new Date();\n  var expiredMinutes = parseInt(currentTime.getMinutes() + minutes);\n  var expiredHours = currentTime.getHours() + hours;\n\n  if (expiredMinutes > 60) {\n    expiredMinutes = expiredMinutes - 60;\n    expiredHours = expiredHours + 1;\n  }\n\n  if (expiredMinutes < 10) {\n    expiredMinutes = parseInt(`${0}${expiredMinutes}`);\n  }\n\n  if (expiredHours === 24) {\n    hours = 12;\n    timeUnit = 'am';\n  }\n\n  if (expiredHours > 24) {\n    hours = hours - 24;\n    timeUnit = 'am';\n  }\n\n  if (expiredHours >= 12) {\n    timeUnit = 'pm';\n  }\n\n  if (currentTime.getHours() >= 12) {\n    cTimeUnit = 'pm';\n  } else {\n    cTimeUnit = 'am';\n  }\n\n  var expTime = `${expiredHours}:${expiredMinutes}${timeUnit}`;\n  var startTime = `${currentTime.getHours()}:${currentTime.getMinutes()}${cTimeUnit}`;\n  setExpiredTime(expTime);\n  localStorage.setItem('expTime', expTime);\n  localStorage.setItem('total', totalbilling); // Keeps track of time changes\n\n  useEffect(() => {\n    if (darkMode >= 1800 || darkMode <= 600) {\n      setDarkModeStyle({\n        circleContainer: 'timeInfo_dark',\n        costAmount: 'cost_amount_dark',\n        circularTrack: '#1B242F'\n      });\n    }\n\n    setValue(value + props.addTime);\n\n    if (dayTime === 0) {\n      setDayTimeValidation(true);\n    } else {\n      setDayTimeValidation(false);\n    }\n\n    if (nightTime === 0) {\n      setNightTimeValidation(true);\n    }\n\n    localStorage.setItem('startTime', startTime);\n    setStartTime(startTime);\n  }, [props.addTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: darkModeStyle.circleContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"time_holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"set_time\",\n            style: {\n              marginTop: '10px'\n            },\n            children: \"Set Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"time\",\n            children: `${hours}h:${minutes}m`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"set_time\",\n            style: {\n              marginTop: '10px'\n            },\n            children: \"Expires at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rate_\",\n            style: {\n              textAlign: 'center'\n            },\n            children: expTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CircularInput, {\n        value: timerLogic.stepValue(value),\n        onChange: v => setValue(timerLogic.stepValue(v)),\n        children: [/*#__PURE__*/_jsxDEV(CircularTrack, {\n          strokeWidth: 3,\n          stroke: darkModeStyle.circularTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          className: \"bar\",\n          stroke: \"#ff4f4f\",\n          strokeWidth: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircularThumb, {\n          r: 15,\n          fill: \"#F0F0F3\",\n          stroke: \"#ff4f4f\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cost_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: darkModeStyle.costAmount,\n        children: \"Total Cost: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price\",\n        children: [\"$\", `${totalbilling}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Timer, \"ba6eJ2YpGhgMMX4800cRt29OnYs=\");\n\n_c = Timer;\nexport default Timer; // <div className='overlap_Cost'>\n// {/* Day rate */}\n// <div className='day_rate'>\n// \t<div className='info_holder dayRate_icon'>\n// \t<img id='sun' src={Day} alt='sun'></img>\n// \t</div>\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(dayTime/100)}hrs : {Math.floor(dayTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${dayTimeBilling}</div>\n// </div>\n// {/* Night Rate */}\n// <div className='night_rate'>\n// \t<div className='info_holder nightRate_icon'>\n// \t<img id='moon' src={Moon} alt='moon'></img>\n// \t</div>\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(nightTime/100)}hrs : {Math.floor(nightTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${nightTimeBilling}</div>\n// </div>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Timer/Timer.js"],"names":["React","useContext","useState","useEffect","PaymentContext","Moon","CircularInput","CircularTrack","CircularProgress","CircularThumb","TimerLogic","Timer","props","timerLogic","totalbilling","dayTime","dayTimeBilling","nightTime","nightTimeBilling","setExpiredTime","setStartTime","darkMode","value","setValue","validateDayTime","setDayTimeValidation","validateNightTime","setNightTimeValidation","darkModeStyle","setDarkModeStyle","circleContainer","costAmount","circularTrack","hours","Math","floor","scrollTime","stepValue","minutes","timeUnit","cTimeUnit","parseInt","currentTime","Date","expiredMinutes","getMinutes","expiredHours","getHours","expTime","startTime","localStorage","setItem","addTime","marginTop","textAlign","v"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { PaymentContext } from '../../Context/PaymentContext'\nimport \"../Timer/Timer.css\";\nimport Moon from '../../Assets/moon.png'\nimport Day from '../../Assets/sun.svg'\n\nimport {\n\tCircularInput,\n\tCircularTrack,\n\tCircularProgress,\n\tCircularThumb,\n} from \"react-circular-input\";\nimport TimerLogic from \"./TimerLogic\";\n\n\n\nconst Timer = (props) => {\n\t// const today = new Date();\n\tconst timerLogic = new TimerLogic();\n\tconst { totalbilling, dayTime, dayTimeBilling, nightTime, nightTimeBilling, setExpiredTime, setStartTime, darkMode } = useContext(PaymentContext)\n\t// const pGenerator = new PaymentGenerator();\n\tconst [value, setValue] = useState(null);\n\tconst [validateDayTime, setDayTimeValidation] = useState()\n\tconst [validateNightTime, setNightTimeValidation] = useState()\n\tconst [darkModeStyle, setDarkModeStyle] = useState({\n\t\tcircleContainer: 'timeInfo', \n\t\tcostAmount: 'cost_amount',\n\t\tcircularTrack: '#eee'\n\t\t \n\t })\n\n\tvar hours = Math.floor(timerLogic.scrollTime(timerLogic.stepValue(value))/100)\n\tvar minutes = timerLogic.scrollTime(timerLogic.stepValue(value))%100\n\tvar timeUnit = 'am'\n\tvar cTimeUnit = 'am'\n\tif(minutes === 0){\n\t\tminutes = parseInt(`${'00'}`)\n\t}\n\n\tconst currentTime = new Date();\n\n\tvar expiredMinutes = parseInt(currentTime.getMinutes() + minutes)\n\tvar expiredHours = currentTime.getHours() + hours\n\tif(expiredMinutes > 60){\n\t\texpiredMinutes = expiredMinutes - 60\n\t\texpiredHours = expiredHours + 1\n\t}\n\tif(expiredMinutes < 10){\n\t\texpiredMinutes = parseInt(`${0}${expiredMinutes}`)\n\t}\n\tif(expiredHours === 24){\n\t\thours = 12\n\t\ttimeUnit = 'am'\n\t}\n\tif(expiredHours > 24){\n\t\thours = hours - 24\n\t\ttimeUnit = 'am'\n\t}\n\tif(expiredHours >= 12){\n\t\ttimeUnit = 'pm'\n\t}\n\n\tif(currentTime.getHours() >= 12){\n\t\tcTimeUnit = 'pm'\n\t}else{\n\t\tcTimeUnit = 'am'\n\t}\n\tvar expTime = `${expiredHours}:${expiredMinutes}${timeUnit}`\n\tvar startTime = `${currentTime.getHours()}:${currentTime.getMinutes()}${cTimeUnit}`\n\tsetExpiredTime(expTime)\n\tlocalStorage.setItem('expTime', expTime)\n\tlocalStorage.setItem('total', totalbilling)\n\t// Keeps track of time changes\n\tuseEffect(() => {\n\n\t\t\tif(darkMode >= 1800 || darkMode <= 600){\n\t\t\t\tsetDarkModeStyle({\n\t\t\t\t\tcircleContainer: 'timeInfo_dark', \n\t\t\t\t\tcostAmount: 'cost_amount_dark', \n\t\t\t\t\tcircularTrack: '#1B242F'\n\t\t\t\t})\n\t\t\t}\n\n\n\n\t\tsetValue(value + props.addTime);\n\t\tif (dayTime === 0) {\n\t\t\tsetDayTimeValidation(true)\n\t\t} else { setDayTimeValidation(false) }\n\t\tif (nightTime === 0) {\n\t\t\tsetNightTimeValidation(true)\n\t\t}\n\t\tlocalStorage.setItem('startTime', startTime)\n\t\t\n\t\t\n\t\tsetStartTime(startTime)\n\n\t}, [props.addTime]);\n\n\treturn (\n\t\t<div className='timer_container'>\n\t\t\t<div className='timer_holder'>\n\t\t\t\t<div id={darkModeStyle.circleContainer}>\n\t\t\t\t\t<div id='time_holder'>\n\t\t\t\t\t<p className='set_time' style={{marginTop: '10px'}}>Set Duration</p>\n\t\t\t\t\t\t<p id='time'>{`${hours}h:${minutes}m`}</p>\n\n\t\t\t\t\t<p className='set_time' style={{marginTop: '10px'}}>Expires at</p>\n\t\t\t\t\t<p className='rate_' style={{textAlign: 'center'}}>{expTime}</p>\n\t\n\t\t\t\t\t\t{/* <p className='set_time'>Daily Rates</p> */}\n\t\t\t\t\t\t{/* Rates Settings */}\n\t\t\t\t\t\t{/* <div className='rate_container'>\n\t\t\t\t\t\t\t<div className='daily_container day'>\n\t\t\t\t\t\t\t\t<img id='sun' src={Day} alt='sun'></img>\n\t\t\t\t\t\t\t\t<p className='rate_'>$4hr</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='daily_container night'>\n\t\t\t\t\t\t\t\t<img id='moon' src={Moon} alt='moon'></img>\n\t\t\t\t\t\t\t\t<p className='rate_'>$6hr</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<CircularInput\n\t\t\t\t\tvalue={timerLogic.stepValue(value)}\n\t\t\t\t\tonChange={(v) => setValue(timerLogic.stepValue(v))}>\n\t\t\t\t\t<CircularTrack strokeWidth={3} stroke={darkModeStyle.circularTrack} />\n\t\t\t\t\t<CircularProgress className='bar' stroke='#ff4f4f' strokeWidth={12} />\n\t\t\t\t\t<CircularThumb r={15} fill='#F0F0F3' stroke='#ff4f4f' />\n\t\t\t\t</CircularInput>\n\t\t\t</div>\n\n\n\t\t\t<div className='cost_holder'><div id={darkModeStyle.costAmount}>Total Cost: </div><div className='price'>${`${totalbilling}`}</div></div>\n\n\t\t</div>\n\t);\n};\nexport default Timer;\n\n// <div className='overlap_Cost'>\n// {/* Day rate */}\n// <div className='day_rate'>\n// \t<div className='info_holder dayRate_icon'>\n// \t<img id='sun' src={Day} alt='sun'></img>\n// \t</div>\n\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(dayTime/100)}hrs : {Math.floor(dayTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${dayTimeBilling}</div>\n\n// </div>\n// {/* Night Rate */}\n// <div className='night_rate'>\n// \t<div className='info_holder nightRate_icon'>\n// \t<img id='moon' src={Moon} alt='moon'></img>\n// \t</div>\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(nightTime/100)}hrs : {Math.floor(nightTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${nightTimeBilling}</div>\n\n// </div>\n\n// </div>"]},"metadata":{},"sourceType":"module"}