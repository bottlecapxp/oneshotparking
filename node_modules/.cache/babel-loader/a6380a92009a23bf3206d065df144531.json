{"ast":null,"code":"import _classCallCheck from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';var TimerLogic=/*#__PURE__*/function(_Component){_inherits(TimerLogic,_Component);var _super=_createSuper(TimerLogic);function TimerLogic(props){var _this;_classCallCheck(this,TimerLogic);_this=_super.call(this,props);_this.setValue=function(valFunc){_this.value=valFunc;};_this.stepValue=function(v){if(v>1){return 1;}else{return Math.round(v*20)/20;}};_this.scrollTime=function(stepVal){var givenValue=Math.round(stepVal*100);var minutes=Math.round(300*givenValue/100);//300 is max for 5 hours\n// get hours\nif(minutes>60){_this.hours=Math.floor(minutes/60);}else{_this.hours=0;}// First Check if you're at a full hour\nif(minutes===60||minutes/60===_this.hours){_this.stagedMinutes='00';if(_this.hours===0&&_this.stagedMinutes==='00'){_this.hours=1;}}// Else run algorithm\nelse{_this.stagedMinutes=minutes%60%100;}return\"0\".concat(_this.hours,\" : \").concat(_this.stagedMinutes);};_this.state={hours:0,stagedMinutes:0,value:0.0};return _this;}// btnClick_AddTime = (timeIncrement) =>{\n// switch (timeIncrement) {\n//     case timeIncrement === 30:\n//         this.stagedMinutes = this.stagedMinutes + timeIncrement\n//         this.value = 0.06\n//         break;\n//     case timeIncrement === 1:\n//         this.hours = this.hours + timeIncrement\n//         this.value = 0.13\n//         break;\n//     default:\n//         break;\n// }\n// }\nreturn TimerLogic;}(Component);export default TimerLogic;","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Timer/TimerLogic.js"],"names":["React","Component","TimerLogic","props","setValue","valFunc","value","stepValue","v","Math","round","scrollTime","stepVal","givenValue","minutes","hours","floor","stagedMinutes","state"],"mappings":"geAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAEMC,CAAAA,U,wGACF,oBAAYC,KAAZ,CAAkB,4CACd,uBAAMA,KAAN,EADc,MAStBC,QATsB,CASX,SAAAC,OAAO,CAAG,CACrB,MAAKC,KAAL,CAAaD,OAAb,CACC,CAXqB,OAatBE,SAbsB,CAaV,SAAAC,CAAC,CAAG,CACZ,GAAGA,CAAC,CAAG,CAAP,CAAS,CACL,MAAO,EAAP,CACH,CAFD,IAEK,CACD,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,CAAC,CAAG,EAAf,EAAqB,EAA5B,CACH,CACJ,CAnBqB,OAsBtBG,UAtBsB,CAsBT,SAAAC,OAAO,CAAI,CAChB,GAAIC,CAAAA,UAAU,CAAGJ,IAAI,CAACC,KAAL,CAAWE,OAAO,CAAC,GAAnB,CAAjB,CACA,GAAIE,CAAAA,OAAO,CAAIL,IAAI,CAACC,KAAL,CAAW,IAAMG,UAAN,CAAmB,GAA9B,CAAf,CAAkD;AAGlD;AACA,GAAIC,OAAO,CAAG,EAAd,CAAiB,CACb,MAAKC,KAAL,CAAaN,IAAI,CAACO,KAAL,CAAWF,OAAO,CAAG,EAArB,CAAb,CACH,CAFD,IAEK,CACD,MAAKC,KAAL,CAAa,CAAb,CACH,CACD;AACA,GAAGD,OAAO,GAAK,EAAZ,EAAmBA,OAAO,CAAG,EAAX,GAAmB,MAAKC,KAA7C,CAAmD,CAC/C,MAAKE,aAAL,CAAqB,IAArB,CACA,GAAG,MAAKF,KAAL,GAAe,CAAf,EAAoB,MAAKE,aAAL,GAAuB,IAA9C,CAAmD,CAC/C,MAAKF,KAAL,CAAa,CAAb,CACH,CACJ,CAED;AAPA,IAQI,CACH,MAAKE,aAAL,CAAsBH,OAAO,CAAG,EAAV,CAAe,GAArC,CACA,CAED,iBACQ,MAAKC,KADb,eACwB,MAAKE,aAD7B,EAIP,CAlDqB,CAEd,MAAKC,KAAL,CAAa,CACTH,KAAK,CAAE,CADE,CAETE,aAAa,CAAE,CAFN,CAGTX,KAAK,CAAE,GAHE,CAAb,CAFc,aAOjB,CA8CL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;oBAnEyBL,S,EAwEzB,cAAeC,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass TimerLogic extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            hours: 0,\n            stagedMinutes: 0,\n            value: 0.0\n        }\n    }\n\nsetValue = valFunc =>{\nthis.value = valFunc\n}\n\nstepValue = v =>{\n    if(v > 1){\n        return 1\n    }else{\n        return Math.round(v * 20) / 20\n    }\n}\n\n\nscrollTime = stepVal => {\n        var givenValue = Math.round(stepVal*100)\n        var minutes =  Math.round(300 * givenValue / 100) //300 is max for 5 hours\n\n\n        // get hours\n        if (minutes > 60){\n            this.hours = Math.floor(minutes / 60)\n        }else{\n            this.hours = 0\n        }\n        // First Check if you're at a full hour\n        if(minutes === 60 || (minutes / 60) === this.hours){\n            this.stagedMinutes = '00'\n            if(this.hours === 0 && this.stagedMinutes === '00'){\n                this.hours = 1\n            }\n        }\n\n        // Else run algorithm\n        else{\n         this.stagedMinutes = (minutes % 60 % 100)\n        }\n\n        return(\n            `0${this.hours} : ${this.stagedMinutes}`\n        )\n\n}\n\n\n// btnClick_AddTime = (timeIncrement) =>{\n// switch (timeIncrement) {\n//     case timeIncrement === 30:\n//         this.stagedMinutes = this.stagedMinutes + timeIncrement\n//         this.value = 0.06\n//         break;\n//     case timeIncrement === 1:\n//         this.hours = this.hours + timeIncrement\n//         this.value = 0.13\n//         break;\n//     default:\n//         break;\n// }\n// }\n\n\n}\n\nexport default TimerLogic"]},"metadata":{},"sourceType":"module"}