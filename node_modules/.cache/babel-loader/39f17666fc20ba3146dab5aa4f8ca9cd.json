{"ast":null,"code":"import _slicedToArray from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import MaxConditon from'../../../Components/max_selection/MaxSelection';import PaymentGenerator from'../../Financials/Calculator/PaymentGenerator';import Time from'../../Timer/Time';import'../CircleBtns_txt/CircleBtnstxt.css';import{jsx as _jsx}from\"react/jsx-runtime\";var CircleTxtBtns=function CircleTxtBtns(_ref){var title=_ref.title,time=_ref.time,addTime=_ref.addTime,link=_ref.link;// const {darkMode} = useContext(PaymentContext)\nvar darkMode=1800;var _useState=useState({buttonStyles:'global_circle_btns',title:'title'}),_useState2=_slicedToArray(_useState,2),darkModeStyle=_useState2[0],setDarkModeStyle=_useState2[1];var _useState3=useState({title:title,setTime:parseFloat(time)}),_useState4=_slicedToArray(_useState3,2),timer=_useState4[0],setTimer=_useState4[1];var currentTime=new Date();var remMins=60-currentTime.getMinutes();var hour_,hour_calc,min_calc,sum;var setTime_=function setTime_(hour){hour_calc=(currentTime.getMinutes()>0?hour-1:hour_)*0.041666666666666664;min_calc=remMins*0.000695;sum=hour_calc+min_calc;addTime(sum);};var incrementTime=function incrementTime(){var time_wheel_hr=parseInt(localStorage.getItem('_time_btn_hr'));switch(title){case title=='Max'&&time_wheel_hr<6?title:'':hour_=6-time_wheel_hr;setTime_(hour_);break;case title=='Max'&&time_wheel_hr>6&&time_wheel_hr<12?title:'':hour_=12-time_wheel_hr+6;setTime_(hour_);break;case title=='Max'&&localStorage.getItem('_time_btn_hr')=='6'?title:'':hour_=12;addTime(hour_*0.041666666666666664);break;default:addTime(timer.setTime);break;}};useEffect(function(){if(darkMode>=1800||darkMode<=600){setDarkModeStyle({buttonStyles:'global_circle_btns_dark',title:'title_dark'});}if(darkMode<1800||darkMode>600){setDarkModeStyle({buttonStyles:'global_circle_btns',title:'title'});}},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(darkModeStyle.buttonStyles,\" content-align\"),onClick:incrementTime,children:/*#__PURE__*/_jsx(\"span\",{className:darkModeStyle.title,children:timer.title})});};export default CircleTxtBtns;","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js"],"names":["React","useEffect","useState","MaxConditon","PaymentGenerator","Time","CircleTxtBtns","title","time","addTime","link","darkMode","buttonStyles","darkModeStyle","setDarkModeStyle","setTime","parseFloat","timer","setTimer","currentTime","Date","remMins","getMinutes","hour_","hour_calc","min_calc","sum","setTime_","hour","incrementTime","time_wheel_hr","parseInt","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport MaxConditon from '../../../Components/max_selection/MaxSelection'\nimport PaymentGenerator from '../../Financials/Calculator/PaymentGenerator'\nimport Time from '../../Timer/Time'\nimport '../CircleBtns_txt/CircleBtnstxt.css'\n\nconst CircleTxtBtns = ({ title, time, addTime, link}) => {\n    // const {darkMode} = useContext(PaymentContext)\n    const darkMode = 1800\n    const [darkModeStyle, setDarkModeStyle] = useState({buttonStyles: 'global_circle_btns', title: 'title'})\n    const [timer, setTimer] = useState({title: title, setTime: parseFloat(time)})\n    const currentTime = new Date()\n    const remMins = (60 - currentTime.getMinutes()) \n    var hour_, hour_calc,min_calc, sum\n\n\n    const setTime_ = (hour) =>{ \n        hour_calc = (currentTime.getMinutes() > 0?hour - 1: hour_) * 0.041666666666666664\n        min_calc = remMins * 0.000695\n        sum = hour_calc + min_calc\n        addTime(sum)\n    }\n\n    const incrementTime = () => {\n        const time_wheel_hr = parseInt(localStorage.getItem('_time_btn_hr'))\n        switch(title){\n            case (title =='Max' && time_wheel_hr < 6?title:''):\n                hour_ = (6 - time_wheel_hr) \n                setTime_(hour_)\n                break;\n            case (title =='Max' && (time_wheel_hr > 6 && time_wheel_hr < 12)?title:''):\n                hour_ = ((12 - time_wheel_hr) + 6)\n                setTime_(hour_)\n                break;\n            case (title == 'Max' && localStorage.getItem('_time_btn_hr') == '6'?title:''):\n                hour_ = 12\n                addTime( hour_ * 0.041666666666666664)\n                break;\n            default: \n            addTime(timer.setTime)\n            break;\n        }\n    }\n    \n    useEffect(() => {\n        if (darkMode >= 1800 || darkMode <= 600) {\n            setDarkModeStyle({\n                buttonStyles: 'global_circle_btns_dark',\n                title: 'title_dark'\n            })\n        }\n        if (darkMode < 1800 || darkMode > 600) {\n            setDarkModeStyle({\n                buttonStyles: 'global_circle_btns',\n                title: 'title'\n            })\n        }\n    }, [])\n\n\n    return (\n        <div className={`${darkModeStyle.buttonStyles} content-align`} onClick={incrementTime}>\n            <span className={darkModeStyle.title}>{timer.title}</span>\n        </div>\n    )\n}\n\nexport default CircleTxtBtns;"]},"metadata":{},"sourceType":"module"}