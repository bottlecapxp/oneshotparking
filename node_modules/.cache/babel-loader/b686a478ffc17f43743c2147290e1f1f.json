{"ast":null,"code":"import _slicedToArray from\"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{PaymentContext}from'../Context/PaymentContext';import\"../Pages/pages.css\";import CircleTxtBtns from\"../Components/Buttons/CircleBtns_txt/CircleTxtBtns\";import CircleBtnsImg from\"../Components/Buttons/CircleBtn_img/CircleBtnsImg\";import Timer from\"../Components/Timer/Timer\";import MaxCondition from'../Components/max_selection/MaxSelection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SetTime=function SetTime(props){var _useContext=useContext(PaymentContext),darkMode=_useContext.darkMode;var _useState=useState({globalContainer:'global_container'}),_useState2=_slicedToArray(_useState,2),darkModeStyle=_useState2[0],setDarkModeStyle=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),lot=_useState4[0],setLot=_useState4[1];var _useState5=useState(0.0),_useState6=_slicedToArray(_useState5,2),btnClickUpdate=_useState6[0],setBtnClickUpdate=_useState6[1];var _useState7=useState(0.0),_useState8=_slicedToArray(_useState7,2),val=_useState8[0],setVal=_useState8[1];var mxCond=new MaxCondition();var date=new Date();var max_num=date.getHours();// Time update nested func for button onClick()\nvar timeUpdate=function timeUpdate(val){var nValue=parseFloat(val);setVal(nValue);// check for match\nif(val==btnClickUpdate){reset();}else setBtnClickUpdate(nValue);};useEffect(function(){localStorage.setItem('max',0);if(localStorage.getItem('lot')===null){// localStorage.setItem('lot', 4001)\nlocalStorage.setItem('lot',props.match.params.lot);}else if(localStorage.getItem('lot')!=null){localStorage.removeItem('lot');setTimeout(function(){localStorage.setItem('lot',props.match.params.lot);},10);}setLot(props.match.params.lot);if(darkMode>=1800||darkMode<=600){setDarkModeStyle({globalContainer:'global_container_dark'});}if(btnClickUpdate==0){setBtnClickUpdate(val);}},[btnClickUpdate]);var reset=function reset(){setBtnClickUpdate(0.0);};return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(darkModeStyle.globalContainer,\" choose_lot\"),children:/*#__PURE__*/_jsxs(\"div\",{id:\"content_holder\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer_holder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lot-info\",children:/*#__PURE__*/_jsxs(\"h5\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"LOT NUMBER:\"}),\" \",lot]})}),/*#__PURE__*/_jsx(Timer,{addTime:btnClickUpdate})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"align_timer_btns\",children:[/*#__PURE__*/_jsx(CircleTxtBtns,{addTime:timeUpdate,title:\"-1 Hr\",time:\"-0.20\"}),/*#__PURE__*/_jsx(CircleTxtBtns,{addTime:timeUpdate,title:\"Max\",time:\"1\"}),/*#__PURE__*/_jsx(CircleTxtBtns,{addTime:timeUpdate,title:\"+1 Hr\",time:\"0.20\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"align_timer_btns btns_img_container\",children:/*#__PURE__*/_jsx(CircleBtnsImg,{title:\"Confirm\",img:\"\",class:\"plateCapture\"})})]})});};export default SetTime;//  else if(newCheck == false) {\n// \t\t\tswitch (hour) {\n// \t\t\t\tcase (hour < 18 && hour > 6 ? hour : ''):\n// \t\t\t\t\tconst remaining_time = 18 - hour\n// \t\t\t\t\tmax_num = parseFloat(`0.0${remaining_time}`)\n// \t\t\t\t\tlocalStorage.setItem('max', 1)\n// \t\t\t\t\t// console.log(`rem_hr ${remaining_time}`)\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase (hour >= 18 && hour < 24 ? hour : ''):\n// \t\t\t\t\tconst rem_time = (24 - hour) + 6\n// \t\t\t\t\tmax_num = (rem_time > 9 ? max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n// \t\t\t\t\tlocalStorage.setItem('max', 1)\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase (hour < 6 ? hour : ''):\n// \t\t\t\t\tconst rem_hr = 6 - hour\n// \t\t\t\t\tmax_num = `0.0${rem_hr}`\n// \t\t\t\t\tlocalStorage.setItem('max', 1)\n// \t\t\t\t\tbreak;\n// \t\t\t\tdefault: \n// \t\t\t\t\tmax_num = '0.12'\n// \t\t\t\t\tbreak;\n// \t\t\t}\n// \t\t}","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Pages/SetTime.js"],"names":["React","useContext","useEffect","useState","PaymentContext","CircleTxtBtns","CircleBtnsImg","Timer","MaxCondition","SetTime","props","darkMode","globalContainer","darkModeStyle","setDarkModeStyle","lot","setLot","btnClickUpdate","setBtnClickUpdate","val","setVal","mxCond","date","Date","max_num","getHours","timeUpdate","nValue","parseFloat","reset","localStorage","setItem","getItem","match","params","removeItem","setTimeout"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { PaymentContext } from '../Context/PaymentContext'\nimport \"../Pages/pages.css\";\nimport CircleTxtBtns from \"../Components/Buttons/CircleBtns_txt/CircleTxtBtns\";\nimport CircleBtnsImg from \"../Components/Buttons/CircleBtn_img/CircleBtnsImg\";\nimport Timer from \"../Components/Timer/Timer\";\nimport MaxCondition from '../Components/max_selection/MaxSelection'\n\n\nconst SetTime = (props) => {\n\tconst { darkMode } = useContext(PaymentContext)\n\tconst [darkModeStyle, setDarkModeStyle] = useState({ globalContainer: 'global_container' })\n\tconst [lot, setLot] = useState(0)\n\tconst [btnClickUpdate, setBtnClickUpdate] = useState(0.0)\n\tconst [val, setVal] = useState(0.0)\n\tconst mxCond = new MaxCondition()\n\tconst date = new Date()\n\tvar max_num = date.getHours()\n\n\t// Time update nested func for button onClick()\n\tconst timeUpdate = (val) => {\n\t\tvar nValue = parseFloat(val)\n\t\tsetVal(nValue)\n\n\n\t\t// check for match\n\t\tif (val == btnClickUpdate) {\n\t\t\treset()\n\t\t}\n\t\telse (\n\t\t\t\n\t\t\tsetBtnClickUpdate(nValue)\n\t\t)\n\t}\n\n\tuseEffect(() => {\n\t\n\t\tlocalStorage.setItem('max', 0)\n\t\tif (localStorage.getItem('lot') === null) {\n\t\t\t// localStorage.setItem('lot', 4001)\n\t\t\tlocalStorage.setItem('lot', props.match.params.lot)\n\t\t}\n\t\telse if (localStorage.getItem('lot') != null) {\n\t\t\tlocalStorage.removeItem('lot')\n\t\t\tsetTimeout(() => {\n\t\t\t\tlocalStorage.setItem('lot', props.match.params.lot)\n\t\t\t}, 10)\n\t\t}\n\t\tsetLot(props.match.params.lot)\n\t\tif (darkMode >= 1800 || darkMode <= 600) {\n\t\t\tsetDarkModeStyle({\n\t\t\t\tglobalContainer: 'global_container_dark',\n\t\t\t})\n\t\t}\n\n\t\tif (btnClickUpdate == 0) {\n\t\t\tsetBtnClickUpdate(val)\n\t\t}\n\t}, [btnClickUpdate])\n\n\n\tconst reset = () => {\n\t\tsetBtnClickUpdate(0.0)\n\t}\n\n\n\treturn (\n\t\t<div className={`${darkModeStyle.globalContainer} choose_lot`}>\n\n\t\t\t<div id='content_holder'>\n\t\t\t\t<div className='timer_holder'>\n\t\t\t\t\t<div className='lot-info'>\n\t\t\t\t\t\t<h5><strong>LOT NUMBER:</strong> {lot}</h5>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Timer addTime={btnClickUpdate} />\n\t\t\t\t</div>\n\t\t\t\t<div className='align_timer_btns'>\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='-1 Hr' time='-0.20' />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='Max' time='1' />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='+1 Hr' time='0.20' />\n\t\t\t\t</div>\n\n\t\t\t\t<div className='align_timer_btns btns_img_container'>\n\t\t\t\t\t{/* <CircleBtnsImg title='' img='' /> */}\n\t\t\t\t\t<CircleBtnsImg title='Confirm' img='' class='plateCapture' />\n\t\t\t\t\t{/* <CircleBtnsImg title='' img='' /> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SetTime;\n//  else if(newCheck == false) {\n// \t\t\tswitch (hour) {\n// \t\t\t\tcase (hour < 18 && hour > 6 ? hour : ''):\n// \t\t\t\t\tconst remaining_time = 18 - hour\n// \t\t\t\t\tmax_num = parseFloat(`0.0${remaining_time}`)\n// \t\t\t\t\tlocalStorage.setItem('max', 1)\n// \t\t\t\t\t// console.log(`rem_hr ${remaining_time}`)\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase (hour >= 18 && hour < 24 ? hour : ''):\n// \t\t\t\t\tconst rem_time = (24 - hour) + 6\n// \t\t\t\t\tmax_num = (rem_time > 9 ? max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n// \t\t\t\t\tlocalStorage.setItem('max', 1)\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase (hour < 6 ? hour : ''):\n// \t\t\t\t\tconst rem_hr = 6 - hour\n// \t\t\t\t\tmax_num = `0.0${rem_hr}`\n// \t\t\t\t\tlocalStorage.setItem('max', 1)\n// \t\t\t\t\tbreak;\n// \t\t\t\tdefault: \n// \t\t\t\t\tmax_num = '0.12'\n// \t\t\t\t\tbreak;\n// \t\t\t}\n// \t\t}"]},"metadata":{},"sourceType":"module"}