{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../CircleBtns_txt/CircleBtnstxt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircleTxtBtns = ({\n  title,\n  time,\n  addTime\n}) => {\n  _s();\n\n  // const {darkMode} = useContext(PaymentContext)\n  const darkMode = 1800;\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    buttonStyles: 'global_circle_btns',\n    title: 'title'\n  });\n  useEffect(() => {\n    if (darkMode >= 1800 || darkMode <= 600) {\n      setDarkModeStyle({\n        buttonStyles: 'global_circle_btns_dark',\n        title: 'title_dark'\n      });\n    }\n\n    if (darkMode < 1800 || darkMode > 600) {\n      setDarkModeStyle({\n        buttonStyles: 'global_circle_btns',\n        title: 'title'\n      });\n    }\n  }, []);\n  const [timer, setTimer] = useState({\n    title: title,\n    setTime: parseFloat(time)\n  });\n  const date = new Date();\n  const hour = date.getHours();\n  const limit = 18;\n\n  if (time == 0) {\n    switch (hour) {\n      case hour < limit && hour > 6 ? hour : '':\n        const remaining_time = limit - hour;\n        setTimer(`0.0${remaining_time}`);\n        break;\n    }\n\n    console.log('working on this');\n  }\n\n  const incrementTime = () => {\n    addTime(timer.setTime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkModeStyle.buttonStyles} content-align`,\n    onClick: incrementTime,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: darkModeStyle.title,\n      children: timer.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CircleTxtBtns, \"pVAD3ZtklRR/KAuJwZHmR5G2CII=\");\n\n_c = CircleTxtBtns;\nexport default CircleTxtBtns;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircleTxtBtns\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Buttons/CircleBtns_txt/CircleTxtBtns.js"],"names":["React","useEffect","useState","CircleTxtBtns","title","time","addTime","darkMode","darkModeStyle","setDarkModeStyle","buttonStyles","timer","setTimer","setTime","parseFloat","date","Date","hour","getHours","limit","remaining_time","console","log","incrementTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,qCAAP;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA4B;AAAA;;AAC1C;AACA,QAAMC,QAAQ,GAAG,IAAjB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC;AAC/CQ,IAAAA,YAAY,EAAE,oBADiC;AAE/CN,IAAAA,KAAK,EAAE;AAFwC,GAAD,CAAlD;AAMJH,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGM,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,GAAnC,EAAuC;AACnCE,MAAAA,gBAAgB,CAAC;AACbC,QAAAA,YAAY,EAAE,yBADD;AAEbN,QAAAA,KAAK,EAAE;AAFM,OAAD,CAAhB;AAIH;;AACD,QAAGG,QAAQ,GAAG,IAAX,IAAmBA,QAAQ,GAAG,GAAjC,EAAqC;AACjCE,MAAAA,gBAAgB,CAAC;AACbC,QAAAA,YAAY,EAAE,oBADD;AAEbN,QAAAA,KAAK,EAAE;AAFM,OAAD,CAAhB;AAIH;AACJ,GAbQ,EAaN,EAbM,CAAT;AAcA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAC/BE,IAAAA,KAAK,EAAEA,KADwB;AAE/BS,IAAAA,OAAO,EAAEC,UAAU,CAACT,IAAD;AAFY,GAAD,CAAlC;AAMA,QAAMU,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,IAAI,GAAGF,IAAI,CAACG,QAAL,EAAb;AACA,QAAMC,KAAK,GAAG,EAAd;;AACA,MAAGd,IAAI,IAAI,CAAX,EAAa;AACT,YAAOY,IAAP;AACI,WAAKA,IAAI,GAAGE,KAAP,IAAgBF,IAAI,GAAG,CAAvB,GAAyBA,IAAzB,GAA8B,EAAnC;AACA,cAAMG,cAAc,GAAGD,KAAK,GAAGF,IAA/B;AACAL,QAAAA,QAAQ,CAAE,MAAKQ,cAAe,EAAtB,CAAR;AACA;AAJJ;;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;;AAKD,QAAMC,aAAa,GAAG,MAAK;AAC1BjB,IAAAA,OAAO,CAACK,KAAK,CAACE,OAAP,CAAP;AACA,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEL,aAAa,CAACE,YAAa,gBAA9C;AAA+D,IAAA,OAAO,EAAEa,aAAxE;AAAA,2BACI;AAAM,MAAA,SAAS,EAAEf,aAAa,CAACJ,KAA/B;AAAA,gBAAuCO,KAAK,CAACP;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArDD;;GAAMD,a;;KAAAA,a;AAuDN,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport '../CircleBtns_txt/CircleBtnstxt.css'\n\nconst CircleTxtBtns = ({title, time, addTime}) => {\n        // const {darkMode} = useContext(PaymentContext)\n        const darkMode = 1800\n        const [darkModeStyle, setDarkModeStyle] = useState({\n            buttonStyles: 'global_circle_btns',\n            title: 'title'\n        })\n    \n    \n    useEffect(()=>{\n        if(darkMode >= 1800 || darkMode <= 600){\n            setDarkModeStyle({\n                buttonStyles: 'global_circle_btns_dark', \n                title: 'title_dark'\n            })\n        }\n        if(darkMode < 1800 || darkMode > 600){\n            setDarkModeStyle({\n                buttonStyles: 'global_circle_btns', \n                title: 'title'\n            })\n        }\n    }, [])\n    const [timer, setTimer] = useState({\n        title: title,\n        setTime: parseFloat(time)\n    })\n\n\n    const date = new Date()\n    const hour = date.getHours()\n    const limit = 18\n    if(time == 0){ \n        switch(hour){ \n            case(hour < limit && hour > 6?hour:''):\n            const remaining_time = limit - hour\n            setTimer(`0.0${remaining_time}`)\n            break;\n        }\n        console.log('working on this')\n    }\n\n\n\n\n    const incrementTime = () =>{\n     addTime(timer.setTime)\n    }\n    return (\n        <div className={`${darkModeStyle.buttonStyles} content-align`} onClick={incrementTime}>\n            <span className={darkModeStyle.title}>{timer.title}</span>\n        </div>\n    )\n}\n\nexport default CircleTxtBtns;"]},"metadata":{},"sourceType":"module"}