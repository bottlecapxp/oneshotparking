{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/SetTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { PaymentContext } from '../Context/PaymentContext';\nimport \"../Pages/pages.css\";\nimport CircleTxtBtns from \"../Components/Buttons/CircleBtns_txt/CircleTxtBtns\";\nimport CircleBtnsImg from \"../Components/Buttons/CircleBtn_img/CircleBtnsImg\";\nimport Timer from \"../Components/Timer/Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetTime = () => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(PaymentContext);\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    globalContainer: 'global_container'\n  });\n  const [btnClickUpdate, setBtnClickUpdate] = useState(0.0);\n  const [val, setVal] = useState(0.0);\n\n  const timeUpdate = val => {\n    var nValue = parseFloat(val);\n    setVal(nValue); // check for match\n\n    if (val === btnClickUpdate) {\n      reset();\n    } else setBtnClickUpdate(nValue);\n  };\n\n  useEffect(() => {\n    if (darkMode >= 1800 || darkMode <= 600) {\n      setDarkModeStyle({\n        globalContainer: 'global_container_dark'\n      });\n    }\n\n    if (btnClickUpdate === 0) {\n      setBtnClickUpdate(val);\n    }\n  }, [btnClickUpdate]);\n\n  const reset = () => {\n    setBtnClickUpdate(0.0);\n  }; // console.log(btnClickUpdate)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkModeStyle.globalContainer} choose_lot`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer_holder\",\n        children: /*#__PURE__*/_jsxDEV(Timer, {\n          addTime: btnClickUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align_timer_btns\",\n        children: [/*#__PURE__*/_jsxDEV(CircleTxtBtns, {\n          addTime: timeUpdate,\n          title: \"+30 Min\",\n          time: \"0.10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircleTxtBtns, {\n          addTime: timeUpdate,\n          title: \"+1 Hr\",\n          time: \"0.20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircleTxtBtns, {\n          addTime: timeUpdate,\n          title: \"All Day\",\n          time: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align_timer_btns btns_img_container\",\n        children: /*#__PURE__*/_jsxDEV(CircleBtnsImg, {\n          title: \"Confirm\",\n          img: \"\",\n          class: \"plateCapture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SetTime, \"mB7ZL19i9RZyO/4xtp/WKVhIcw8=\");\n\n_c = SetTime;\nexport default SetTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetTime\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/SetTime.js"],"names":["React","useContext","useEffect","useState","PaymentContext","CircleTxtBtns","CircleBtnsImg","Timer","SetTime","darkMode","darkModeStyle","setDarkModeStyle","globalContainer","btnClickUpdate","setBtnClickUpdate","val","setVal","timeUpdate","nValue","parseFloat","reset"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport {PaymentContext} from '../Context/PaymentContext'\nimport \"../Pages/pages.css\";\nimport CircleTxtBtns from \"../Components/Buttons/CircleBtns_txt/CircleTxtBtns\";\nimport CircleBtnsImg from \"../Components/Buttons/CircleBtn_img/CircleBtnsImg\";\nimport Timer from \"../Components/Timer/Timer\";\n\n\nconst SetTime = () => {\n\n\t\nconst {darkMode} = useContext(PaymentContext)\nconst [darkModeStyle, setDarkModeStyle] = useState({\n\t\tglobalContainer: 'global_container', \n\t\t\n})\n\t\n\n\n\tconst [btnClickUpdate, setBtnClickUpdate] = useState(0.0)\n\tconst [val, setVal] = useState(0.0)\n\n\n\tconst timeUpdate = (val) => {\n\t\tvar nValue = parseFloat(val)\n\t\tsetVal(nValue)\n\t\t// check for match\n\t\tif (val === btnClickUpdate) {\n\t\t\treset()\n\t\t}\n\t\telse (\n\t\t\tsetBtnClickUpdate(nValue)\n\t\t)\n\t}\n\n\tuseEffect(() => {\n\t\tif(darkMode >= 1800 || darkMode <= 600){\n\t\t\tsetDarkModeStyle({\n\t\t\t\tglobalContainer: 'global_container_dark',\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t\n\t\tif (btnClickUpdate === 0) {\n\t\t\tsetBtnClickUpdate(val)\n\t\t}\n\t}, [btnClickUpdate])\n\n\n\tconst reset = () => {\n\t\tsetBtnClickUpdate(0.0)\n\t}\n\n\n\n\t// console.log(btnClickUpdate)\n\treturn (\n\t\t<div className={`${darkModeStyle.globalContainer} choose_lot`}>\n\t\t\t<div id='content_holder'>\n\n\t\t\t\t<div className='timer_holder'>\n\t\t\t\t\t<Timer addTime={btnClickUpdate} />\n\t\t\t\t</div>\n\t\t\t\t<div className='align_timer_btns'>\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='+30 Min' time='0.10' />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='+1 Hr' time='0.20' />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='All Day' time='1' />\n\t\t\t\t</div>\n\n\t\t\t\t<div className='align_timer_btns btns_img_container'>\n\t\t\t\t\t{/* <CircleBtnsImg title='' img='' /> */}\n\t\t\t\t\t<CircleBtnsImg title='Confirm' img='' class='plateCapture' />\n\t\t\t\t\t{/* <CircleBtnsImg title='' img='' /> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SetTime;\n"]},"metadata":{},"sourceType":"module"}