{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/CardPayment.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CreditCardIcon from \"../Assets/ccIcon.svg\";\nimport Lock from '../Assets/lock.png';\nimport { useHistory } from 'react-router-dom';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardPayment = () => {\n  _s();\n\n  const history = useHistory();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const pay_now = () => {\n    history.push('/remaining-time/');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if stripe and elements not loaded return null\n\n    if (!stripe || !elements) {\n      return;\n    } // const billingDetails = {\n    //     name: e.target.name.value, \n    //     email: e.target.email.value, \n    //     address: {\n    //         city: e.target.city.value, \n    //     }\n    // }   \n    //CREATE PAYMENT INTENT ON THE SERVER\n\n\n    const {\n      error: backendError,\n      clientSecret\n    } = await fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: .10,\n        currency: 'CAD'\n      })\n    }).then(r => r.json());\n\n    if (backendError) {\n      console.log(backendError.message);\n      return;\n    } // CONFIRMTHE PAYMENT ON THE CLIENT\n\n\n    const {\n      error: stripeError,\n      paymentIntent\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (stripeError) {\n      console.log(stripeError.message);\n      return;\n    } else {\n      console.log('[PaymentMethod]', clientSecret);\n    }\n\n    console.log(`PaymentIntent ${paymentIntent.id}: ${paymentIntent.status}`);\n  };\n\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '16px'\n      },\n      invalid: {},\n      complete: {}\n    }\n  };\n  {\n    /* <form onSubmit={handleSubmit}>\n       <input type='text' name='name' placeholder='Jane Doe' required></input>\n       <input type='email' name='email' placeholder='JaneDoe@example.com' required></input>\n       <input type='address' name='address' placeholder='1 place rd' required></input>\n       <input type='text' name='city' placeholder='Toronto' required></input>\n       \n        <CardElement options={cardElementOptions}/>\n       <button type='submit' disabled={!stripe}>\n           Pay Now\n       </button>\n    </form> */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_container choose_lot\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Jane Doe\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"JaneDoe@example.com\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"address\",\n        name: \"address\",\n        placeholder: \"1 place rd\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        placeholder: \"Toronto\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-element\",\n        children: \"Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        options: cardElementOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe,\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardPayment, \"99jALou7W0qReY00KbE6QsRiWaA=\", false, function () {\n  return [useHistory, useStripe, useElements];\n});\n\n_c = CardPayment;\nexport default CardPayment; // <div>\n// <h1 className='global_content_title slim' style={{textAlign: 'center',marginTop: '-50%'}}>Enter your card's information below</h1>\n// <div className='card_'>\n//     {/* Enter your card numner */}\n//     <div className='stacked_'>\n//     <label id='CCnumberLabel'>Enter Your Card Number</label>\n//     <input id='CCnumber'></input>\n//     </div>\n//     {/* Expiration CVC & Icon */}\n//     <div className='auth_holder'>\n//         <div className='stacked_'>\n//         <label>Expiration</label>\n//         <input id='expiration'></input>\n//         </div>\n//         <div className='stacked_'>\n//         <label>CVC</label>\n//         <input id='cvc'></input>\n//         </div>\n//         <div>\n//             <img className='ccIcon' src={CreditCardIcon} alt='creditCard_logo'></img>\n//         </div>\n//     </div>\n//     <div className='securePaymentHolder'>\n//         <div className='securePayment_'>  {/* display flex */}\n//             {/* image */}\n//             <img className='lock' src={Lock}></img>\n//             <p>Secure Payment</p>\n//             {/* text info */}\n//         </div>\n//     </div>\n//     {/* Button here */}\n//     <div className='ccCardSubmissionHolder'>\n//     <input style={{color: '#FF5759'}} className='submitBtn box-shadow ccCardSubmission' onClick={pay_now} type='submit' value='Pay Now'></input>\n//     </div>\n// </div>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPayment\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/CardPayment.js"],"names":["React","Lock","useHistory","CardElement","useStripe","useElements","CardPayment","history","stripe","elements","pay_now","push","handleSubmit","e","preventDefault","error","backendError","clientSecret","fetch","method","headers","body","JSON","stringify","amount","currency","then","r","json","console","log","message","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","id","status","cardElementOptions","style","base","fontSize","invalid","complete"],"mappings":"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","sourcesContent":["import React from 'react'\nimport CreditCardIcon from '../Assets/ccIcon.svg'\nimport Lock from '../Assets/lock.png'\nimport {useHistory} from 'react-router-dom'\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js'; \n\n\nconst CardPayment = () => {\nconst history = useHistory()\nconst stripe = useStripe()\nconst elements = useElements()\nconst pay_now = () =>{\n    history.push('/remaining-time/')\n}\n\n\nconst handleSubmit = async (e) =>{\n    e.preventDefault();\n\n    // if stripe and elements not loaded return null\n    if(!stripe || !elements){\n        return;\n    }\n    // const billingDetails = {\n    //     name: e.target.name.value, \n    //     email: e.target.email.value, \n    //     address: {\n    //         city: e.target.city.value, \n    //     }\n    // }   \n\n    //CREATE PAYMENT INTENT ON THE SERVER\n    const {error: backendError, clientSecret} = await fetch('/create-payment-intent', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            amount: .10,\n            currency: 'CAD'\n        }),\n    }).then(r => r.json())\n\n    if(backendError){\n        console.log(backendError.message)\n        return;\n    }\n\n    // CONFIRMTHE PAYMENT ON THE CLIENT\n    const {error: stripeError, paymentIntent} = await stripe.confirmCardPayment(\n        clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement),\n            }\n        }\n    )\n\n    if(stripeError){\n        console.log(stripeError.message)\n        return;\n    }else{\n        console.log('[PaymentMethod]', clientSecret);\n    }\n\n    console.log(`PaymentIntent ${paymentIntent.id}: ${paymentIntent.status}`)\n\n   \n}\n\nconst cardElementOptions = {\n    style: {\n        base:{\n            fontSize: '16px',\n\n        },\n        invalid:{\n            \n        },\n        complete: {\n\n        }\n    }\n}\n\n{/* <form onSubmit={handleSubmit}>\n    <input type='text' name='name' placeholder='Jane Doe' required></input>\n    <input type='email' name='email' placeholder='JaneDoe@example.com' required></input>\n    <input type='address' name='address' placeholder='1 place rd' required></input>\n    <input type='text' name='city' placeholder='Toronto' required></input>\n    \n\n    <CardElement options={cardElementOptions}/>\n    <button type='submit' disabled={!stripe}>\n        Pay Now\n    </button>\n</form> */}\n\nreturn(\n    <div className='global_container choose_lot'>\n    <form onSubmit={handleSubmit}>\n    <input type='text' name='name' placeholder='Jane Doe' required></input>\n    <input type='email' name='email' placeholder='JaneDoe@example.com' required></input>\n    <input type='address' name='address' placeholder='1 place rd' required></input>\n    <input type='text' name='city' placeholder='Toronto' required></input>\n    <label htmlFor='card-element'>Card</label>\n\n    <CardElement id='card-element' options={cardElementOptions}/>\n    <button type='submit' disabled={!stripe}>\n        Pay Now\n    </button>\n</form>\n    </div>\n)\n}\nexport default CardPayment;\n\n// <div>\n// <h1 className='global_content_title slim' style={{textAlign: 'center',marginTop: '-50%'}}>Enter your card's information below</h1>\n// <div className='card_'>\n//     {/* Enter your card numner */}\n//     <div className='stacked_'>\n//     <label id='CCnumberLabel'>Enter Your Card Number</label>\n//     <input id='CCnumber'></input>\n//     </div>\n//     {/* Expiration CVC & Icon */}\n//     <div className='auth_holder'>\n//         <div className='stacked_'>\n//         <label>Expiration</label>\n//         <input id='expiration'></input>\n//         </div>\n//         <div className='stacked_'>\n//         <label>CVC</label>\n//         <input id='cvc'></input>\n//         </div>\n//         <div>\n//             <img className='ccIcon' src={CreditCardIcon} alt='creditCard_logo'></img>\n//         </div>\n//     </div>\n//     <div className='securePaymentHolder'>\n//         <div className='securePayment_'>  {/* display flex */}\n//             {/* image */}\n//             <img className='lock' src={Lock}></img>\n//             <p>Secure Payment</p>\n//             {/* text info */}\n//         </div>\n//     </div>\n\n//     {/* Button here */}\n//     <div className='ccCardSubmissionHolder'>\n//     <input style={{color: '#FF5759'}} className='submitBtn box-shadow ccCardSubmission' onClick={pay_now} type='submit' value='Pay Now'></input>\n//     </div>\n    \n    \n// </div>\n// </div>"]},"metadata":{},"sourceType":"module"}