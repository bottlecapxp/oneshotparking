{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/Applications/OneShot Parking/src/Pages/CountDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { PaymentContext } from '../Context/PaymentContext';\nimport Receipt from '../Components/Receipt/Receipt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountDown = () => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(PaymentContext);\n  const getSetTime = localStorage.getItem('timeStore');\n  const [showReceipt, setShowReceipt] = useState(false);\n  const expiredTime = localStorage.getItem('expTime');\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    globalContainer: 'global_container',\n    color: '#585858',\n    circleAnimation: 'circleAnimation',\n    countDownAdj: 'countdown_adjustment'\n  });\n  const [containerStyling, setContainerStyling] = useState({\n    divStyle: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    buttonStyle: {\n      marginTop: '30px',\n      border: '1px solid #848484',\n      fontSize: '13px',\n      // border: '1px solid #FF4F4F',\n      padding: '10px',\n      borderRadius: '10px',\n      margin: '0px 5px 0px 5px',\n      boxShadow: '10px 10px 30px rgba(174, 174, 192, 0.4), -10px -10px 30px #FFFFFF'\n    },\n    buttonDiv: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'space-around'\n    }\n  });\n\n  const toggle = () => {\n    setShowReceipt(!showReceipt);\n  };\n\n  var getExpTimeInSecs = localStorage.getItem('expTimeInSecs');\n  var date = new Date();\n  var m = date.getMinutes() * 60;\n  var h = date.getHours() * 3600;\n  var s = date.getSeconds();\n  var sum = 0;\n  var hour_ = Math.floor(getSetTime / 100) * 3600;\n  var minutes_ = Math.round(getSetTime % 100) * 60;\n  var count = expiredTime - sum; // Add this to local storage as the initial time\n\n  const [countDown, setCountDown] = useState({\n    hours: Math.floor(getSetTime / 100),\n    mins: Math.round(getSetTime % 100),\n    secs: 60\n  });\n  var counter = null;\n\n  const initCounter = () => {\n    if (localStorage.getItem('count') == null || localStorage.getItem('count') == 0) {\n      localStorage.setItem('count', count);\n    }\n\n    count = getLocalStorage('count');\n    counter = setInterval(timer, 1000);\n  };\n\n  const setLocalStorage = (key, value) => {\n    if (localStorage) {\n      localStorage.setItem(key, value);\n    }\n\n    return value;\n  };\n\n  const getLocalStorage = key => {\n    return localStorage ? localStorage.getItem(key) : '';\n  };\n\n  const timer = () => {\n    var date_y = new Date();\n\n    if (date_y.getMinutes() > m || date_y.getHours() > h || date_y.getSeconds() > s) {\n      m = date_y.getMinutes();\n      h = date_y.getHours();\n      s = date_y.getSeconds();\n      sum = h * 3600 + m * 60;\n      console.log(`sum: ${sum} - ${h}:${m}:${s}`);\n    }\n\n    count = setLocalStorage('count', getExpTimeInSecs - sum);\n\n    if (count <= 0) {\n      clearInterval(counter);\n      return;\n    }\n\n    var seconds = count % 60;\n    var minutes = Math.floor(count / 60);\n    var hours = Math.floor(minutes / 60);\n    minutes %= 60;\n    hours %= 60;\n    setCountDown({\n      hours: hours,\n      mins: minutes,\n      secs: 60 - s\n    });\n    ;\n  }; // Set mutable variables for updates\n  // These are the times updated times     \n\n\n  useEffect(() => {\n    if (darkMode >= 1800 || darkMode <= 600) {\n      setDarkModeStyle({\n        globalContainer: 'global_container_dark',\n        color: 'white',\n        submitBtn: 'submitBtn_dark',\n        circleAnimation: 'circleAnimation_dark',\n        countDownAdj: 'countdown_adjustment_dark'\n      });\n      setContainerStyling({\n        divStyle: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        buttonStyle: {\n          marginTop: '30px',\n          border: '1px solid #EA4335',\n          fontSize: '13px',\n          // border: '1px solid #FF4F4F',\n          padding: '10px',\n          borderRadius: '10px',\n          margin: '0px 5px 0px 5px',\n          color: '#EA4335',\n          background: '#1E2834',\n          boxSizing: 'border-box',\n          boxShadow: '10px 10px 30px rgba(0, 0, 0, 0.6), -10px -10px 30px rgba(255, 255, 255, 0.12)'\n        },\n        buttonDiv: {\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'space-around'\n        }\n      });\n    }\n\n    initCounter();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkModeStyle.globalContainer} choose_lot`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyling.divStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: darkModeStyle.circleAnimation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown_digits_holder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: darkModeStyle.countDownAdj,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '0px'\n            },\n            children: \"Active Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown_digits\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: `${countDown.hours}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: `${countDown.mins}m`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"digits\",\n              children: [countDown.secs == 60 ? '00' : `${countDown.secs}`, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), showReceipt ? /*#__PURE__*/_jsxDEV(Receipt, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 32\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: '30%',\n          color: darkModeStyle.color\n        },\n        children: [\"Your Time Expires at: \", expiredTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyling.buttonDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: containerStyling.buttonStyle,\n          children: \"Extend My Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggle,\n          style: containerStyling.buttonStyle,\n          children: \"View My Receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}; // console.log(time.getSeconds())\n// localStorage.setItem('secs', updated_secs--)\n// if(updated_secs <= 0 ){\n//     localStorage.setItem('secs', 60)\n//  clearInterval(run)\n//         // localStorage.setItem('mins', updated_mins)\n//         // localStorage.setItem('secs', 60)\n//     }\n// if(updated_mins == 0){\n//     updated_hours--\n//     localStorage.setItem('hours', updated_hours)\n//     localStorage.setItem('mins', 60)\n//     // updated_mins = 60\n// }\n// if(updated_hours == 0){\n//     localStorage.setItem('hours', '00')\n//     // updated_hours = '00'\n// }\n\n_s(CountDown, \"Dk/fFkbCJrct2oz7PSOLrqueIm8=\");\n\n_c = CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/Applications/OneShot Parking/src/Pages/CountDown.js"],"names":["React","useState","useContext","useEffect","PaymentContext","Receipt","CountDown","darkMode","getSetTime","localStorage","getItem","showReceipt","setShowReceipt","expiredTime","darkModeStyle","setDarkModeStyle","globalContainer","color","circleAnimation","countDownAdj","containerStyling","setContainerStyling","divStyle","display","flexDirection","alignItems","justifyContent","buttonStyle","marginTop","border","fontSize","padding","borderRadius","margin","boxShadow","buttonDiv","width","toggle","getExpTimeInSecs","date","Date","m","getMinutes","h","getHours","s","getSeconds","sum","hour_","Math","floor","minutes_","round","count","countDown","setCountDown","hours","mins","secs","counter","initCounter","setItem","getLocalStorage","setInterval","timer","setLocalStorage","key","value","date_y","console","log","clearInterval","seconds","minutes","submitBtn","background","boxSizing","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { PaymentContext } from '../Context/PaymentContext'\nimport Receipt from '../Components/Receipt/Receipt'\n\n\n\nexport const CountDown = () => {\n    const { darkMode } = useContext(PaymentContext)\n    const getSetTime = localStorage.getItem('timeStore')\n    const [showReceipt, setShowReceipt] = useState(false)\n    const expiredTime = localStorage.getItem('expTime')\n    const [darkModeStyle, setDarkModeStyle] = useState({\n        globalContainer: 'global_container',\n        color: '#585858',\n        circleAnimation: 'circleAnimation',\n        countDownAdj: 'countdown_adjustment'\n    })\n\n    const [containerStyling, setContainerStyling] = useState({\n        divStyle: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n        buttonStyle: {\n            marginTop: '30px',\n            border: '1px solid #848484',\n            fontSize: '13px',\n            // border: '1px solid #FF4F4F',\n            padding: '10px',\n            borderRadius: '10px',\n            margin: '0px 5px 0px 5px',\n            boxShadow: '10px 10px 30px rgba(174, 174, 192, 0.4), -10px -10px 30px #FFFFFF'\n        },\n        buttonDiv: {\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-around'\n        }\n    })\n    const toggle = () => {\n        setShowReceipt(!showReceipt)\n    }\n\n    var getExpTimeInSecs = localStorage.getItem('expTimeInSecs')\n    var date = new Date()\n    var m = date.getMinutes() * 60\n    var h = date.getHours() * 3600\n    var s = date.getSeconds()\n    var sum = 0\n    \n\n    var hour_ = Math.floor(getSetTime / 100) * 3600\n    var minutes_ = Math.round(getSetTime % 100) * 60\n    var count = expiredTime - sum\n\n\n    // Add this to local storage as the initial time\n    const [countDown, setCountDown] = useState({\n        hours: Math.floor(getSetTime / 100),\n        mins: Math.round(getSetTime % 100),\n        secs: 60\n    })\n\n\n\n\n    var counter = null;\n\n\n\n    const initCounter = () => {\n        if (localStorage.getItem('count') == null || localStorage.getItem('count') == 0) {\n            localStorage.setItem('count', count);\n        }\n\n        count = getLocalStorage('count');\n\n        counter = setInterval(timer, 1000);\n    }\n\n    const setLocalStorage = (key, value) => {\n        if (localStorage) {\n            localStorage.setItem(key, value);\n        }\n        return value;\n    }\n\n    const getLocalStorage = (key) => {\n        return localStorage ? localStorage.getItem(key) : '';\n    }\n\n\n\n    const timer = () => {\n        var date_y = new Date()\n        if(date_y.getMinutes() > m || date_y.getHours() > h || date_y.getSeconds() > s){\n            m = date_y.getMinutes()\n            h = date_y.getHours()\n            s = date_y.getSeconds()\n            sum = (h * 3600) + (m * 60)\n            console.log(`sum: ${sum} - ${h}:${m}:${s}`)\n        }\n      \n     \n        count = setLocalStorage('count', getExpTimeInSecs - sum);\n        if (count <= 0) {\n            clearInterval(counter);\n            return;\n        }\n        var seconds = count % 60\n        var minutes = Math.floor(count / 60)\n        var hours = Math.floor(minutes / 60)\n        minutes %= 60;\n        hours %= 60;\n\n        setCountDown({\n            hours: hours,\n            mins: minutes,\n            secs: 60 - s\n        })\n        ;\n        ;\n\n    }\n\n\n\n\n\n\n\n\n\n\n    // Set mutable variables for updates\n    // These are the times updated times     \n\n\n    useEffect(() => {\n        if (darkMode >= 1800 || darkMode <= 600) {\n            setDarkModeStyle({\n                globalContainer: 'global_container_dark',\n                color: 'white',\n                submitBtn: 'submitBtn_dark',\n                circleAnimation: 'circleAnimation_dark',\n                countDownAdj: 'countdown_adjustment_dark'\n            })\n            setContainerStyling({\n                divStyle: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                },\n                buttonStyle: {\n                    marginTop: '30px',\n                    border: '1px solid #EA4335',\n                    fontSize: '13px',\n                    // border: '1px solid #FF4F4F',\n                    padding: '10px',\n                    borderRadius: '10px',\n                    margin: '0px 5px 0px 5px',\n                    color: '#EA4335',\n                    background: '#1E2834',\n                    boxSizing: 'border-box',\n                    boxShadow: '10px 10px 30px rgba(0, 0, 0, 0.6), -10px -10px 30px rgba(255, 255, 255, 0.12)'\n\n                },\n                buttonDiv: {\n                    width: '100%',\n                    display: 'flex',\n                    justifyContent: 'space-around'\n                }\n            })\n        }\n\n\n\n        initCounter()\n    }, [])\n\n    return (\n        <div className={`${darkModeStyle.globalContainer} choose_lot`}>\n            <div style={containerStyling.divStyle}>\n                <div className={darkModeStyle.circleAnimation}></div>\n                <div className='countdown_digits_holder'>\n                    <div className={darkModeStyle.countDownAdj}>\n                        <h3 style={{ marginBottom: '0px' }}>Active Session</h3>\n                        <div className='countdown_digits'>\n                            <span className='digits'>{`${countDown.hours}h`}</span>\n                            <span className='digits'>{`${countDown.mins}m`}</span>\n                            <span className='digits' >{countDown.secs == 60?'00':`${countDown.secs}`}s</span>\n                        </div>\n                    </div>\n\n                </div>\n                {showReceipt ? <Receipt /> : ''}\n\n                <h4 style={{ marginTop: '30%', color: darkModeStyle.color }}>Your Time Expires at: {expiredTime}</h4>\n                <div style={containerStyling.buttonDiv}>\n                    <span style={containerStyling.buttonStyle}>Extend My Time</span>\n                    <span onClick={toggle} style={containerStyling.buttonStyle}>View My Receipt</span>\n                </div>\n\n            </div>\n\n            {/* Count down time */}\n            {/* Buttone to Extend time here */}\n        </div>\n    )\n}\n\n\n\n\n// console.log(time.getSeconds())\n// localStorage.setItem('secs', updated_secs--)\n\n// if(updated_secs <= 0 ){\n//     localStorage.setItem('secs', 60)\n\n//  clearInterval(run)\n//         // localStorage.setItem('mins', updated_mins)\n//         // localStorage.setItem('secs', 60)\n//     }\n// if(updated_mins == 0){\n//     updated_hours--\n//     localStorage.setItem('hours', updated_hours)\n//     localStorage.setItem('mins', 60)\n//     // updated_mins = 60\n// }\n// if(updated_hours == 0){\n//     localStorage.setItem('hours', '00')\n//     // updated_hours = '00'\n// }"]},"metadata":{},"sourceType":"module"}