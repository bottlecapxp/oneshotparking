{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Stripe/StripePayment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport Lock from '../Assets/lock.png';\nimport CreditCardIcon from \"../Assets/ccIcon.svg\";\nimport Loading from '../Assets/loading.gif';\nimport axios from 'axios';\nimport '../Pages/pages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StripePayment = () => {\n  _s();\n\n  // using state to keep track of stripe payment, show errors, and manange user interface\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecrete] = useState('');\n  const stripe = useStripe();\n  const element = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: element.getElement(CardNumberElement, CardExpiryElement, CardCvcElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          name: 'Bottle Cap',\n          phone: '6470000000',\n          licensePlate: 'CLYKF',\n          amount: 250,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"SuccessFul Payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log('[error'.error);\n      }\n    }\n  }; // end of handle submit\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global_container choose_lot\",\n      children: stripe ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Loading,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this) // <div>\n      //     <h1 className='global_content_title slim' style={{ textAlign: 'center', marginTop: '-50%' }}>Enter your card's information below</h1>\n      //     <form onSubmit={handleSubmit} className='card_'> {/* this should be a form */}\n      //         {/* Enter your card numner */}\n      //         <div className='stacked_'>\n      //             <label id='CCnumberLabel'>Enter Your Card Number</label>\n      //             <div id='CCnumber'>\n      //                 <CardNumberElement />\n      //             </div>\n      //         </div>\n      //         {/* Expiration CVC & Icon */}\n      //         <div className='auth_holder'>\n      //             <div className='stacked_'>\n      //                 <label>Expiration</label>\n      //                 <div id='expiration'>\n      //                     <CardExpiryElement />\n      //                 </div>\n      //             </div>\n      //             <div className='stacked_'>\n      //                 <label>CVC</label>\n      //                 <div id='cvc'>\n      //                     <CardCvcElement />\n      //                 </div>\n      //             </div>\n      //             <div>\n      //                 <img className='ccIcon' src={CreditCardIcon} alt='creditCard_logo'></img>\n      //             </div>\n      //         </div>\n      //         <div className='securePaymentHolder'>\n      //             <div className='securePayment_'>  {/* display flex */}\n      //                 {/* image */}\n      //                 <img className='lock' src={Lock}></img>\n      //                 <p>Secure Payment</p>\n      //                 {/* text info */}\n      //             </div>\n      //         </div>\n      //         {/* Button here */}\n      //         <div className='ccCardSubmissionHolder'>\n      //             <input style={{ color: '#FF5759' }} className='submitBtn box-shadow ccCardSubmission' type='submit' value='Pay Now'></input>\n      //         </div>\n      //     </form>\n      // </div>\n      : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(StripePayment, \"gl/ZX95GAsyWi56mWdrpGQY9GLA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = StripePayment;\nexport default StripePayment; // {!success ? \n//     <form onSubmit={handleSubmit}>\n//         <fieldset className='FormGroup'>\n//             <div className=\"formRow\">\n//                 <CardElement />\n//             </div>\n//         </fieldset>\n//         <button type='submit'>Pay now</button>\n//     </form>:\n//     <div>\n//         <h1> \n//             Payment SuccessFul\n//         </h1>\n//     </div>\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"StripePayment\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Stripe/StripePayment.js"],"names":["React","useState","CardNumberElement","CardCvcElement","CardExpiryElement","useElements","useStripe","Lock","Loading","axios","StripePayment","success","setSuccess","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecrete","stripe","element","handleSubmit","e","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","name","phone","licensePlate","amount","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,EAA4CC,iBAA5C,EAA+DC,WAA/D,EAA4EC,SAA5E,QAA6F,yBAA7F;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACkB,YAAD,EAAeC,gBAAf,IAAmCnB,QAAQ,CAAC,EAAD,CAAjD;AAGA,QAAMoB,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,OAAO,GAAGjB,WAAW,EAA3B;;AAEA,QAAMkB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM;AAAEZ,MAAAA,KAAF;AAASa,MAAAA;AAAT,QAA2B,MAAML,MAAM,CAACM,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEP,OAAO,CAACQ,UAAR,CAAmB5B,iBAAnB,EAAsCE,iBAAtC,EAAyDD,cAAzD;AAFwD,KAA3B,CAAvC;;AAKA,QAAI,CAACU,KAAL,EAAY;AACR,UAAI;AACA,cAAM;AAAEkB,UAAAA;AAAF,YAASL,aAAf;AACA,cAAMM,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,+BAAX,EAA4C;AAC/DC,UAAAA,IAAI,EAAE,YADyD;AAE/DC,UAAAA,KAAK,EAAE,YAFwD;AAG/DC,UAAAA,YAAY,EAAE,OAHiD;AAI/DC,UAAAA,MAAM,EAAE,GAJuD;AAK/DN,UAAAA;AAL+D,SAA5C,CAAvB;;AAOA,YAAIC,QAAQ,CAACM,IAAT,CAAc3B,OAAlB,EAA2B;AACvB4B,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA5B,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AAEJ,OAdD,CAcE,OAAOC,KAAP,EAAc;AACZ0B,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAS3B,KAArB;AACH;AACJ;AAEJ,GA5BD,CAZwB,CAwCtB;;;AACF,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,gBACKQ,MAAM,gBACP;AAAK,QAAA,GAAG,EAAEb,OAAV;AAAmB,QAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADO,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AAGA;AACA;AApDO,QAsDP;AAvDJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA8DH,CAvGD;;GAAME,a;UASaJ,S,EACCD,W;;;KAVdK,a;AAwGN,eAAeA,aAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from 'react'\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport Lock from '../Assets/lock.png'\nimport CreditCardIcon from '../Assets/ccIcon.svg'\nimport Loading from '../Assets/loading.gif'\nimport axios from 'axios'\nimport '../Pages/pages.css'\n\n\nconst StripePayment = () => {\n    // using state to keep track of stripe payment, show errors, and manange user interface\n    const [success, setSuccess] = useState(false)\n    const [error, setError] = useState(null)\n    const [processing, setProcessing] = useState('')\n    const [disabled, setDisabled] = useState(true)\n    const [clientSecret, setClientSecrete] = useState('')\n\n\n    const stripe = useStripe()\n    const element = useElements()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: element.getElement(CardNumberElement, CardExpiryElement, CardCvcElement),\n        })\n\n        if (!error) {\n            try {\n                const { id } = paymentMethod\n                const response = await axios.post(\"http://localhost:4000/payment\", {\n                    name: 'Bottle Cap',\n                    phone: '6470000000',\n                    licensePlate: 'CLYKF',\n                    amount: 250,\n                    id\n                })\n                if (response.data.success) {\n                    console.log(\"SuccessFul Payment\")\n                    setSuccess(true)\n                }\n\n            } catch (error) {\n                console.log('[error'.error)\n            }\n        }\n\n    } // end of handle submit\n    return (\n        <>\n            <div className='global_container choose_lot'>\n                {stripe? \n                <img src={Loading} alt=\"loading\"></img>\n               \n                // <div>\n                //     <h1 className='global_content_title slim' style={{ textAlign: 'center', marginTop: '-50%' }}>Enter your card's information below</h1>\n                //     <form onSubmit={handleSubmit} className='card_'> {/* this should be a form */}\n                //         {/* Enter your card numner */}\n                //         <div className='stacked_'>\n                //             <label id='CCnumberLabel'>Enter Your Card Number</label>\n                //             <div id='CCnumber'>\n                //                 <CardNumberElement />\n                //             </div>\n                //         </div>\n                //         {/* Expiration CVC & Icon */}\n                //         <div className='auth_holder'>\n                //             <div className='stacked_'>\n                //                 <label>Expiration</label>\n                //                 <div id='expiration'>\n                //                     <CardExpiryElement />\n                //                 </div>\n\n                //             </div>\n                //             <div className='stacked_'>\n                //                 <label>CVC</label>\n                //                 <div id='cvc'>\n                //                     <CardCvcElement />\n                //                 </div>\n                //             </div>\n                //             <div>\n                //                 <img className='ccIcon' src={CreditCardIcon} alt='creditCard_logo'></img>\n                //             </div>\n                //         </div>\n                //         <div className='securePaymentHolder'>\n                //             <div className='securePayment_'>  {/* display flex */}\n                //                 {/* image */}\n                //                 <img className='lock' src={Lock}></img>\n                //                 <p>Secure Payment</p>\n                //                 {/* text info */}\n                //             </div>\n                //         </div>\n\n                //         {/* Button here */}\n                //         <div className='ccCardSubmissionHolder'>\n\n                //             <input style={{ color: '#FF5759' }} className='submitBtn box-shadow ccCardSubmission' type='submit' value='Pay Now'></input>\n\n\n\n                //         </div>\n\n\n                //     </form>\n                // </div>\n                :\n                ''\n}\n            </div>\n        </>\n    )\n}\nexport default StripePayment;\n\n\n\n// {!success ? \n//     <form onSubmit={handleSubmit}>\n//         <fieldset className='FormGroup'>\n//             <div className=\"formRow\">\n//                 <CardElement />\n//             </div>\n//         </fieldset>\n//         <button type='submit'>Pay now</button>\n//     </form>:\n//     <div>\n//         <h1> \n//             Payment SuccessFul\n//         </h1>\n//     </div>\n\n// }"]},"metadata":{},"sourceType":"module"}