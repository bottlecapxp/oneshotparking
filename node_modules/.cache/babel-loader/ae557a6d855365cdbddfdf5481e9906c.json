{"ast":null,"code":"import _slicedToArray from\"/Users/bottlecapmedia/Desktop/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{useHistory}from'react-router-dom';import'../CircleBtn_img/CircleBtnimg.css';import{PaymentContext}from'../../../Context/PaymentContext';import{TimeContext}from'../../../Context/TimeContext';import{jsx as _jsx}from\"react/jsx-runtime\";var CircleBtnsImg=function CircleBtnsImg(props){var history=useHistory();var _useState=useState({title:props.title,img:props.img,extra:props.class}),_useState2=_slicedToArray(_useState,2),timer=_useState2[0],setTimer=_useState2[1];var _useContext=useContext(PaymentContext),time=_useContext.time;// const {time} = useContext(TimeContext)\nvar payment_action=function payment_action(){// Check local storage to see if it's Empty or Null\nif(localStorage.getItem('timeStore')===null){// if true then store given time to localstorage\nlocalStorage.setItem('timeStore',\"\".concat(time));history.push('/select-paymen/');}// We're checking to see if time exist if it does then capture and instatiate time as new time then perform task to that time to then push back to localstorage as new time post\nelse if(localStorage.getItem('timeStore')!=null){localStorage.removeItem('timeStore');updatingTime(time);history.push('/select-payment/');}};var updatingTime=function updatingTime(time){localStorage.setItem('timeStore',time);};return/*#__PURE__*/_jsx(\"span\",{onClick:payment_action,id:\"link\",className:\"btn-confirm box-shadow content-align \".concat(timer.extra),children:/*#__PURE__*/_jsx(\"span\",{className:\"confirm_title\",children:timer.title})});};export default CircleBtnsImg;","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Buttons/CircleBtn_img/CircleBtnsImg.js"],"names":["React","useState","useContext","useHistory","PaymentContext","TimeContext","CircleBtnsImg","props","history","title","img","extra","class","timer","setTimer","time","payment_action","localStorage","getItem","setItem","push","removeItem","updatingTime"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,MAAO,mCAAP,CACA,OAAQC,cAAR,KAA6B,iCAA7B,CACA,OAAQC,WAAR,KAA0B,8BAA1B,C,2CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CAD6B,cAEHF,QAAQ,CAAC,CAC/BQ,KAAK,CAAEF,KAAK,CAACE,KADkB,CAE/BC,GAAG,CAAEH,KAAK,CAACG,GAFoB,CAG/BC,KAAK,CAAEJ,KAAK,CAACK,KAHkB,CAAD,CAFL,wCAEtBC,KAFsB,eAEfC,QAFe,+BAOdZ,UAAU,CAACE,cAAD,CAPI,CAOtBW,IAPsB,aAOtBA,IAPsB,CAQ7B;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB;AACJ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAsC,IAAzC,CAA8C,CAC1C;AACAD,YAAY,CAACE,OAAb,CAAqB,WAArB,WAAqCJ,IAArC,GACAP,OAAO,CAACY,IAAR,CAAa,iBAAb,EACH,CACD;AALA,IAMK,IAAGH,YAAY,CAACC,OAAb,CAAqB,WAArB,GAAqC,IAAxC,CAA6C,CAC9CD,YAAY,CAACI,UAAb,CAAwB,WAAxB,EACAC,YAAY,CAACP,IAAD,CAAZ,CACAP,OAAO,CAACY,IAAR,CAAa,kBAAb,EAEH,CAEA,CAfD,CAiBA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,IAAD,CAAU,CACvBE,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAkCJ,IAAlC,EACP,CAFD,CAIA,mBACI,aAAM,OAAO,CAAEC,cAAf,CAA+B,EAAE,CAAC,MAAlC,CAAyC,SAAS,gDAA0CH,KAAK,CAACF,KAAhD,CAAlD,uBACI,aAAM,SAAS,CAAC,eAAhB,UAAiCE,KAAK,CAACJ,KAAvC,EADJ,EADJ,CAKH,CApCD,CAqCA,cAAeH,CAAAA,aAAf","sourcesContent":["import React, { useState, useContext } from \"react\"\nimport {useHistory} from 'react-router-dom'\nimport '../CircleBtn_img/CircleBtnimg.css'\nimport {PaymentContext} from '../../../Context/PaymentContext'\nimport {TimeContext} from '../../../Context/TimeContext'\n\n\nconst CircleBtnsImg = (props) => {\n    const history = useHistory()\n    const [timer, setTimer] = useState({\n        title: props.title,\n        img: props.img,\n        extra: props.class\n    })\n    const {time} = useContext(PaymentContext)\n    // const {time} = useContext(TimeContext)\n\n    const payment_action = () => {\n        // Check local storage to see if it's Empty or Null\n    if(localStorage.getItem('timeStore') === null){\n        // if true then store given time to localstorage\n        localStorage.setItem('timeStore', `${time}`)\n        history.push('/select-paymen/')\n    }\n    // We're checking to see if time exist if it does then capture and instatiate time as new time then perform task to that time to then push back to localstorage as new time post\n    else if(localStorage.getItem('timeStore') != null){\n        localStorage.removeItem('timeStore')\n        updatingTime(time)\n        history.push('/select-payment/')\n       \n    }\n\n    }\n\n    const updatingTime = (time) => {\n            localStorage.setItem('timeStore', time)     \n    }\n\n    return (\n        <span onClick={payment_action} id='link' className={`btn-confirm box-shadow content-align ${timer.extra}`}>\n            <span className='confirm_title'>{timer.title}</span>\n        </span>\n    )\n}\nexport default CircleBtnsImg;"]},"metadata":{},"sourceType":"module"}