{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nconst [billing, setBilling] = useState({\n  hour: 0,\n  mins: 0\n});\n\nconst PaymentGenerator = (hours, minutes) => {\n  _s();\n\n  // What is the rate per hour? (R$4)\n  const hourly_rate = 4; // what is the rate per 15mins (R$1)\n\n  const minute_rate = 1; // To calculate rate per hour (if hour is > 0 then hour times rate )\n  //  To calculate rate per minute (minute / 15 * rate per minute)\n\n  useEffect(() => {\n    setBilling({\n      hour: hours * hourly_rate,\n      mins: minutes / 15 * minute_rate\n    });\n  }, []);\n};\n\n_s(PaymentGenerator, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PaymentGenerator;\nexport default PaymentGenerator; // return_cost = () => {\n//     return(\n//         `${this.state.hour}`\n//     )\n//  }\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentGenerator\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Financials/Calculator/PaymentGenerator.js"],"names":["React","Component","useEffect","useState","billing","setBilling","hour","mins","PaymentGenerator","hours","minutes","hourly_rate","minute_rate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC;AACnCG,EAAAA,IAAI,EAAE,CAD6B;AAEnCC,EAAAA,IAAI,EAAE;AAF6B,CAAD,CAAtC;;AAKA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAAA;;AACzC;AACA,QAAMC,WAAW,GAAG,CAApB,CAFyC,CAGzC;;AACA,QAAMC,WAAW,GAAG,CAApB,CAJyC,CAMzC;AACA;;AACAV,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,UAAU,CAAC;AACPC,MAAAA,IAAI,EAAEG,KAAK,GAAGE,WADP;AAEPJ,MAAAA,IAAI,EAAGG,OAAO,GAAG,EAAX,GAAiBE;AAFhB,KAAD,CAAV;AAIH,GALQ,EAKN,EALM,CAAT;AASH,CAjBD;;GAAMJ,gB;;KAAAA,gB;AAmBN,eAAeA,gBAAf,C,CAGA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\n\nconst [billing, setBilling] = useState({\n    hour: 0,\n    mins: 0\n})\n\nconst PaymentGenerator = (hours, minutes) => {\n    // What is the rate per hour? (R$4)\n    const hourly_rate = 4\n    // what is the rate per 15mins (R$1)\n    const minute_rate = 1\n\n    // To calculate rate per hour (if hour is > 0 then hour times rate )\n    //  To calculate rate per minute (minute / 15 * rate per minute)\n    useEffect(()=>{\n        setBilling({\n            hour: hours * hourly_rate,\n            mins: (minutes / 15) * minute_rate\n        })\n    }, [])\n\n\n\n}\n\nexport default PaymentGenerator;\n\n\n// return_cost = () => {\n//     return(\n//         `${this.state.hour}`\n//     )\n//  }"]},"metadata":{},"sourceType":"module"}