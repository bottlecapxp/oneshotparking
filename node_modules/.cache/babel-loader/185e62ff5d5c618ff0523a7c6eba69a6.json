{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/Selectmethod.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'; // import PaymentButtons from '../Components/Buttons/PayOptions/PaymentButtons'\n// import Google from '../Assets/Google.svg'\n// import CreditCardIcon from '../Assets/ccIcon.svg'\n// import Apple from '../Assets/Apple.png'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Selectmethod = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if stripe and elements not loaded return null\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n\n    const cardElementOptions = {\n      style: {\n        base: {},\n        invalid: {},\n        complete: {}\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_container choose_lot\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stacked_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"global_content_title slim\",\n        children: \"Choose a payment method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stacked\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              options: cardElementOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !stripe,\n              children: \"Pay Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Selectmethod, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Selectmethod;\nexport default Selectmethod;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selectmethod\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/Selectmethod.js"],"names":["React","CardElement","useStripe","useElements","Selectmethod","stripe","elements","handleSubmit","e","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","cardElementOptions","style","base","invalid","complete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD,C,CACA;AACA;AACA;AACA;;;;AAIA,MAAOC,YAAY,GAAG,MAAK;AAAA;;AAC3B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGH,WAAW,EAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAOC,CAAP,IAAY;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CAG7B;;AACA,QAAG,CAACJ,MAAD,IAAW,CAACC,QAAf,EAAwB;AACpB;AACH;;AACE,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBV,WAApB,CAApB;AAEA,UAAM;AAACW,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAE,MADsD;AAE5DC,MAAAA,IAAI,EAAEN;AAFsD,KAA3B,CAArC;;AAIA,QAAGE,KAAH,EAAS;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,KAAtB;AACH,KAFD,MAEK;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACH;;AAGR,UAAMM,kBAAkB,GAAE;AACtBC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAC,EADF;AAIHC,QAAAA,OAAO,EAAC,EAJL;AAOHC,QAAAA,QAAQ,EAAE;AAPP;AADe,KAA1B;AAaC,GAjCD;;AA4CA,sBACA;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACA;AAAM,YAAA,QAAQ,EAAEhB,YAAhB;AAAA,oCACI,QAAC,WAAD;AAAa,cAAA,OAAO,EAAEY;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,QAAQ,EAAE,CAACd,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AAyBC,CAzED;;GAAOD,Y;UACQF,S,EACEC,W;;;KAFVC,Y;AA2EP,eAAgBA,YAAhB","sourcesContent":["import React from 'react'\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js'; \n// import PaymentButtons from '../Components/Buttons/PayOptions/PaymentButtons'\n// import Google from '../Assets/Google.svg'\n// import CreditCardIcon from '../Assets/ccIcon.svg'\n// import Apple from '../Assets/Apple.png'\n\n\n\nconst  Selectmethod = () =>{\nconst stripe = useStripe()\nconst elements = useElements()\n\nconst handleSubmit = async (e) =>{\n    e.preventDefault();\n\n    // if stripe and elements not loaded return null\n    if(!stripe || !elements){\n        return;\n    }\n       const cardElement = elements.getElement(CardElement)\n       \n       const {error, paymentMethod} = await stripe.createPaymentMethod({\n           type: 'card',\n           card: cardElement\n       })\n       if(error){\n           console.log('[error', error);\n       }else{\n           console.log('[PaymentMethod]', paymentMethod);\n       }\n\n\nconst cardElementOptions ={\n    style: {\n        base:{\n\n        },\n        invalid:{\n\n        },\n        complete: {\n            \n        }\n    }\n}\n}\n\n\n\n\n\n\n\n\n\n\nreturn(\n<div className='global_container choose_lot'>\n<div className='stacked_container'>\n<h1 className='global_content_title slim'>Choose a payment method</h1>\n\n<div className='position-center'>\n<div className='stacked'>\n<form onSubmit={handleSubmit}>\n    <CardElement options={cardElementOptions}/>\n    <button type='submit' disabled={!stripe}>\n        Pay Now\n    </button>\n</form>\n{/* <PaymentButtons title='Google' image={Google}/>\n<PaymentButtons title='Apple' image={Apple}/>\n<PaymentButtons title='Pay by Card' image={CreditCardIcon}/> */}\n\n</div>\n</div>\n\n</div>\n\n</div>\n)\n\n}\n\nexport default  Selectmethod; "]},"metadata":{},"sourceType":"module"}