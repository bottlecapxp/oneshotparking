{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// import CreditCardIcon from '../Assets/ccIcon.svg'\n// import Lock from '../Assets/lock.png'\n// import {useHistory} from 'react-router-dom'\n// import {CardElement, useStripe, useElements} from '@stripe/react-stripe-js'; \n// // const axios = require('axios').default;\n// const CardPayment = () => {\n// // extract stripe and element \n// const stripe = useStripe()\n// const elements = useElements()\n// useEffect(()=>{\n//     window.fetch('/create-payment-intent', {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json', \n//             'Accept': 'application/json'\n//         },\n//         body: JSON.stringify({items: [{parking_id: 'xl-lot23w'}]})\n//     }).then(res => {\n//         return res.json();\n//     }).then(data => {\n//         setClientSecrete(data.clientSecret)\n//     })\n// }, [])\n// const handleChange = async (event) =>{\n//     event.preventDefault()\n//     //Listen for changes in the CardElement\n//     // and display any errors as the customer types their card details\n//     setDisabled(event.empty);\n//     setError(event.error ? event.error.message : '')\n// }\n// const handleSubmimt = async (ev) => {\n//     ev.preventDefault()\n//     setProcessing(true)\n//     if(!stripe || !elements){\n//         return;\n//     } \n//     const payload = await stripe.confirmCardPayment(clientSecret, {\n//         payment_method: { \n//             card: elements.getElement(CardElement)\n//         }\n//     })\n// }\n// const cardElementOptions = {\n//     style: {\n//         base:{\n//             fontSize: '16px',\n//         },\n//         invalid:{\n//         },\n//         complete: {\n//         }\n//     }\n// }\n// return(\n//     <div className=''>\n//     <form>\n//     <CardElement id='card-element' options={cardElementOptions}/>\n//     <button type='submit' disabled={!stripe}>\n//         Pay Now\n//     </button>\n//     <div className='card-error' role='alert'> \n//     {error}\n//     </div>\n// </form>\n//     </div>\n// )\n// }\n// export default CardPayment;","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/CardPayment.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import CreditCardIcon from '../Assets/ccIcon.svg'\n// import Lock from '../Assets/lock.png'\n// import {useHistory} from 'react-router-dom'\n// import {CardElement, useStripe, useElements} from '@stripe/react-stripe-js'; \n\n\n// // const axios = require('axios').default;\n// const CardPayment = () => {\n\n\n\n\n\n// // extract stripe and element \n// const stripe = useStripe()\n// const elements = useElements()\n    \n// useEffect(()=>{\n//     window.fetch('/create-payment-intent', {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json', \n//             'Accept': 'application/json'\n//         },\n//         body: JSON.stringify({items: [{parking_id: 'xl-lot23w'}]})\n//     }).then(res => {\n//         return res.json();\n//     }).then(data => {\n//         setClientSecrete(data.clientSecret)\n\n//     })\n// }, [])\n\n// const handleChange = async (event) =>{\n//     event.preventDefault()\n\n//     //Listen for changes in the CardElement\n//     // and display any errors as the customer types their card details\n//     setDisabled(event.empty);\n//     setError(event.error ? event.error.message : '')\n\n// }\n\n// const handleSubmimt = async (ev) => {\n//     ev.preventDefault()\n//     setProcessing(true)\n\n//     if(!stripe || !elements){\n//         return;\n//     } \n     \n//     const payload = await stripe.confirmCardPayment(clientSecret, {\n//         payment_method: { \n//             card: elements.getElement(CardElement)\n//         }\n//     })\n\n\n\n// }\n\n\n// const cardElementOptions = {\n//     style: {\n//         base:{\n//             fontSize: '16px',\n\n//         },\n//         invalid:{\n            \n//         },\n//         complete: {\n\n//         }\n//     }\n// }\n\n\n\n// return(\n//     <div className=''>\n//     <form>\n//     <CardElement id='card-element' options={cardElementOptions}/>\n//     <button type='submit' disabled={!stripe}>\n//         Pay Now\n//     </button>\n//     <div className='card-error' role='alert'> \n//     {error}\n//     </div>\n// </form>\n//     </div>\n// )\n// }\n// export default CardPayment;\n\n\n"]},"metadata":{},"sourceType":"module"}