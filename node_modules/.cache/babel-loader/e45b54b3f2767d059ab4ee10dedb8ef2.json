{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/SetTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../Pages/pages.css\";\nimport ChooseAccount from \"../Components/Cards/Choose_Account/ChooseAccount\";\nimport CircleTxtBtns from \"../Components/Circle_Buttons/CircleBtns_txt/CircleTxtBtns\";\nimport CircleBtnsImg from \"../Components/Circle_Buttons/CircleBtn_img/CircleBtnsImg\";\nimport Timer from \"../Components/Timer/Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetTime = () => {\n  _s();\n\n  const [btnClickUpdate, setBtnClickUpdate] = useState(0.0);\n\n  const timeUpdate = val => {\n    var nValue = parseFloat(val); // check for match\n\n    if (val === btnClickUpdate) {\n      reset();\n      console.log(btnClickUpdate); // update state with new value\n    } else setBtnClickUpdate(nValue); // if match >> clear n update state\n\n  };\n\n  const reset = () => {\n    setBtnClickUpdate(0.0);\n  };\n\n  const update = nVal => {\n    setBtnClickUpdate(nVal);\n  }; // console.log(btnClickUpdate)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_container choose_lot\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer_holder\",\n        children: /*#__PURE__*/_jsxDEV(Timer, {\n          addTime: btnClickUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align_timer_btns\",\n        children: [/*#__PURE__*/_jsxDEV(CircleTxtBtns, {\n          addTime: timeUpdate,\n          title: \"+30 Min\",\n          time: \"0.10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircleTxtBtns, {\n          addTime: timeUpdate,\n          title: \"+1 Hr\",\n          time: \"0.20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircleTxtBtns, {\n          addTime: timeUpdate,\n          title: \"All Day\",\n          time: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align_timer_btns btns_img_container\",\n        children: [/*#__PURE__*/_jsxDEV(CircleBtnsImg, {\n          title: \"\",\n          img: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircleBtnsImg, {\n          title: \"\",\n          img: \"\",\n          class: \"plateCapture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircleBtnsImg, {\n          title: \"\",\n          img: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SetTime, \"Ez29iangVrz2CNkaGksOtWcBzxM=\");\n\n_c = SetTime;\nexport default SetTime; // var newValue = parseFloat(val)\n// while (val === btnClickUpdate){\n// \tsetBtnClickUpdate(0.0)\n// \tif(btnClickUpdate === 0.0){\n// \t\tsetBtnClickUpdate(newValue)\n// \t}\n// }\n// \tsetBtnClickUpdate(newValue)\n\nvar _c;\n\n$RefreshReg$(_c, \"SetTime\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Pages/SetTime.js"],"names":["React","useState","useEffect","ChooseAccount","CircleTxtBtns","CircleBtnsImg","Timer","SetTime","btnClickUpdate","setBtnClickUpdate","timeUpdate","val","nValue","parseFloat","reset","console","log","update","nVal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,oBAAP;AACA,OAAOC,aAAP,MAA0B,kDAA1B;AACA,OAAOC,aAAP,MAA0B,2DAA1B;AACA,OAAOC,aAAP,MAA0B,0DAA1B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,GAAD,CAApD;;AAIA,QAAMS,UAAU,GAAIC,GAAD,IAAS;AAC3B,QAAIC,MAAM,GAAGC,UAAU,CAACF,GAAD,CAAvB,CAD2B,CAG3B;;AACA,QAAGA,GAAG,KAAKH,cAAX,EAA0B;AACzBM,MAAAA,KAAK;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ,EAFyB,CAGzB;AACA,KAJD,MAMCC,iBAAiB,CAACG,MAAD,CADd,CATuB,CAa3B;;AACA,GAdD;;AAgBA,QAAME,KAAK,GAAG,MAAK;AAClBL,IAAAA,iBAAiB,CAAC,GAAD,CAAjB;AACA,GAFD;;AAGA,QAAMQ,MAAM,GAAIC,IAAD,IAAS;AACvBT,IAAAA,iBAAiB,CAACS,IAAD,CAAjB;AACA,GAFD,CAzBsB,CA8BtB;;;AACC,sBACC;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,2BACC;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,8BACa;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACA,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEV;AAAhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADb,eAKC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACC,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEE,UAAxB;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAoD,UAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEA,UAAxB;AAAoC,UAAA,KAAK,EAAC,OAA1C;AAAkD,UAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEA,UAAxB;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAoD,UAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAWC;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,gCACC,QAAC,aAAD;AAAe,UAAA,KAAK,EAAC,EAArB;AAAwB,UAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,aAAD;AAAe,UAAA,KAAK,EAAC,EAArB;AAAwB,UAAA,GAAG,EAAC,EAA5B;AAA+B,UAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,aAAD;AAAe,UAAA,KAAK,EAAC,EAArB;AAAwB,UAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CApDD;;GAAMH,O;;KAAAA,O;AAsDN,eAAeA,OAAf,C,CAEC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"../Pages/pages.css\";\nimport ChooseAccount from \"../Components/Cards/Choose_Account/ChooseAccount\";\nimport CircleTxtBtns from \"../Components/Circle_Buttons/CircleBtns_txt/CircleTxtBtns\";\nimport CircleBtnsImg from \"../Components/Circle_Buttons/CircleBtn_img/CircleBtnsImg\";\nimport Timer from \"../Components/Timer/Timer\";\n\nconst SetTime = () => {\n\nconst [btnClickUpdate, setBtnClickUpdate] = useState(0.0)\n\n\n\nconst timeUpdate = (val) => {\n\tvar nValue = parseFloat(val)\n\n\t// check for match\n\tif(val === btnClickUpdate){\n\t\treset()\n\t\tconsole.log(btnClickUpdate)\n\t\t// update state with new value\n\t}\n\telse(\n\t\tsetBtnClickUpdate(nValue)\n\t)\n\n\t// if match >> clear n update state\n}\n\nconst reset = () =>{\n\tsetBtnClickUpdate(0.0)\n}\nconst update = (nVal) =>{\n\tsetBtnClickUpdate(nVal)\n}\n\n\n// console.log(btnClickUpdate)\n\treturn (\n\t\t<div className='global_container choose_lot'>\n\t\t\t<div id='content_holder'>\n                <div className='timer_holder'>\n                <Timer addTime={btnClickUpdate}/>\n                </div>\n\n\t\t\t\t<div className='align_timer_btns'>\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='+30 Min' time='0.10' />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='+1 Hr' time='0.20' />\n\t\t\t\t\t<CircleTxtBtns addTime={timeUpdate} title='All Day' time='1' />\n\t\t\t\t</div>\n\n\t\t\t\t<div className='align_timer_btns btns_img_container'>\n\t\t\t\t\t<CircleBtnsImg title='' img='' />\n\t\t\t\t\t<CircleBtnsImg title='' img='' class='plateCapture'/>\n\t\t\t\t\t<CircleBtnsImg title='' img='' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SetTime;\n\n\t// var newValue = parseFloat(val)\n\t\n\t// while (val === btnClickUpdate){\n\t// \tsetBtnClickUpdate(0.0)\n\t// \tif(btnClickUpdate === 0.0){\n\t// \t\tsetBtnClickUpdate(newValue)\n\t// \t}\n\t// }\n\t// \tsetBtnClickUpdate(newValue)"]},"metadata":{},"sourceType":"module"}