{"ast":null,"code":"import React,{useEffect,useState,useContext}from'react';import{PaymentContext}from'../../../Context/PaymentContext';var PaymentGenerator=function PaymentGenerator(hours,minutes){var _useContext=useContext(PaymentContext),setBilling=_useContext.setBilling,setTime=_useContext.setTime;// What is the rate per hour? (R$4)\nvar hourly_rate=4;// what is the rate per 15mins (R$1)\nvar minute_rate=1;// To calculate rate per hour (if hour is > 0 then hour times rate )\n//  To calculate rate per minute (minute / 15 * rate per minute)\nuseEffect(function(){setBilling(hours*hourly_rate+minutes/15*minute_rate);// Set Selected time here for tracking and to be pushed to local storage by confirm BTN\nsetTime(parseInt(\"\".concat(hours).concat(minutes)));},[hours,minutes]);};export default PaymentGenerator;","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Financials/Calculator/PaymentGenerator.js"],"names":["React","useEffect","useState","useContext","PaymentContext","PaymentGenerator","hours","minutes","setBilling","setTime","hourly_rate","minute_rate","parseInt"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAoCC,UAApC,KAAsD,OAAtD,CACA,OAASC,cAAT,KAA+B,iCAA/B,CAOA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAQC,OAAR,CAAoB,iBACXJ,UAAU,CAACC,cAAD,CADC,CAClCI,UADkC,aAClCA,UADkC,CACtBC,OADsB,aACtBA,OADsB,CAIzC;AACA,GAAMC,CAAAA,WAAW,CAAG,CAApB,CACA;AACA,GAAMC,CAAAA,WAAW,CAAG,CAApB,CAEA;AACA;AACAV,SAAS,CAAC,UAAI,CACVO,UAAU,CAACF,KAAK,CAAGI,WAAR,CAAuBH,OAAO,CAAG,EAAX,CAAiBI,WAAxC,CAAV,CACA;AACAF,OAAO,CAACG,QAAQ,WAAIN,KAAJ,SAAYC,OAAZ,EAAT,CAAP,CACH,CAJQ,CAIN,CAACD,KAAD,CAAQC,OAAR,CAJM,CAAT,CAMH,CAjBD,CAqBA,cAAeF,CAAAA,gBAAf","sourcesContent":["import React, { useEffect, useState,useContext } from 'react'\nimport { PaymentContext } from '../../../Context/PaymentContext'\n\n\n\n\n\n\nconst PaymentGenerator = (hours, minutes) => {\n    const {setBilling, setTime} = useContext(PaymentContext)\n \n\n    // What is the rate per hour? (R$4)\n    const hourly_rate = 4\n    // what is the rate per 15mins (R$1)\n    const minute_rate = 1\n\n    // To calculate rate per hour (if hour is > 0 then hour times rate )\n    //  To calculate rate per minute (minute / 15 * rate per minute)\n    useEffect(()=>{\n        setBilling(hours * hourly_rate + (minutes / 15) * minute_rate)\n        // Set Selected time here for tracking and to be pushed to local storage by confirm BTN\n        setTime(parseInt(`${hours}${minutes}`))\n    }, [hours, minutes])\n\n}\n\n\n\nexport default PaymentGenerator;\n \n\n"]},"metadata":{},"sourceType":"module"}