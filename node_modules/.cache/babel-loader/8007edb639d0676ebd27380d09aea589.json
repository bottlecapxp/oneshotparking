{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Buttons/CircleBtn_img/CircleBtnsImg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Link } from 'react-router-dom';\nimport '../CircleBtn_img/CircleBtnimg.css';\nimport { PaymentContext } from '../../../Context/PaymentContext';\nimport { TimeContext } from '../../../Context/TimeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircleBtnsImg = props => {\n  _s();\n\n  const [timer, setTimer] = useState({\n    title: props.title,\n    img: props.img,\n    extra: props.class\n  });\n  const {\n    billing,\n    time\n  } = useContext(PaymentContext); // const {time} = useContext(TimeContext)\n\n  const payment_action = () => {\n    // Check local storage to see if it's Empty or Null\n    if (localStorage.getItem('timeStore') === null) {\n      // if true then store given time to localstorage\n      localStorage.setItem('timeStore', `${time}`);\n      window.location.replace('/select-paymen');\n    } // We're checking to see if time exist if it does then capture and instatiate time as new time then perform task to that time to then push back to localstorage as new time post\n    else if (localStorage.getItem('timeStore') != null) {\n        localStorage.removeItem('timeStore');\n        updatingTime(time);\n        window.location.replace('/select-payment');\n      }\n  };\n\n  const updatingTime = time => {\n    localStorage.setItem('timeStore', time);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: payment_action,\n    id: \"link\",\n    className: `btn-confirm box-shadow content-align ${timer.extra}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"confirm_title\",\n      children: timer.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CircleBtnsImg, \"5X5WtUXim4w9Vc8/D/x9TAwY9Bk=\");\n\n_c = CircleBtnsImg;\nexport default CircleBtnsImg;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircleBtnsImg\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/OneShot Parking/src/Components/Buttons/CircleBtn_img/CircleBtnsImg.js"],"names":["React","useState","useContext","Link","PaymentContext","TimeContext","CircleBtnsImg","props","timer","setTimer","title","img","extra","class","billing","time","payment_action","localStorage","getItem","setItem","window","location","replace","removeItem","updatingTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,mCAAP;AACA,SAAQC,cAAR,QAA6B,iCAA7B;AACA,SAAQC,WAAR,QAA0B,8BAA1B;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAC/BS,IAAAA,KAAK,EAAEH,KAAK,CAACG,KADkB;AAE/BC,IAAAA,GAAG,EAAEJ,KAAK,CAACI,GAFoB;AAG/BC,IAAAA,KAAK,EAAEL,KAAK,CAACM;AAHkB,GAAD,CAAlC;AAKA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAkBb,UAAU,CAACE,cAAD,CAAlC,CAN6B,CAO7B;;AAEA,QAAMY,cAAc,GAAG,MAAM;AACzB;AACJ,QAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,IAAzC,EAA8C;AAC1C;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAmC,GAAEJ,IAAK,EAA1C;AACAK,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,gBAAxB;AACH,KAJD,CAKA;AALA,SAMK,IAAGL,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,IAAxC,EAA6C;AAC9CD,QAAAA,YAAY,CAACM,UAAb,CAAwB,WAAxB;AACAC,QAAAA,YAAY,CAACT,IAAD,CAAZ;AACAK,QAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,iBAAxB;AAEH;AAEA,GAfD;;AAiBA,QAAME,YAAY,GAAIT,IAAD,IAAU;AACvBE,IAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkCJ,IAAlC;AACP,GAFD;;AAIA,sBACI;AAAM,IAAA,OAAO,EAAEC,cAAf;AAA+B,IAAA,EAAE,EAAC,MAAlC;AAAyC,IAAA,SAAS,EAAG,wCAAuCR,KAAK,CAACI,KAAM,EAAxG;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA,gBAAiCJ,KAAK,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnCD;;GAAMJ,a;;KAAAA,a;AAoCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useContext } from \"react\"\nimport {Link} from 'react-router-dom'\nimport '../CircleBtn_img/CircleBtnimg.css'\nimport {PaymentContext} from '../../../Context/PaymentContext'\nimport {TimeContext} from '../../../Context/TimeContext'\n\n\nconst CircleBtnsImg = (props) => {\n    const [timer, setTimer] = useState({\n        title: props.title,\n        img: props.img,\n        extra: props.class\n    })\n    const {billing, time} = useContext(PaymentContext)\n    // const {time} = useContext(TimeContext)\n\n    const payment_action = () => {\n        // Check local storage to see if it's Empty or Null\n    if(localStorage.getItem('timeStore') === null){\n        // if true then store given time to localstorage\n        localStorage.setItem('timeStore', `${time}`)\n        window.location.replace('/select-paymen')\n    }\n    // We're checking to see if time exist if it does then capture and instatiate time as new time then perform task to that time to then push back to localstorage as new time post\n    else if(localStorage.getItem('timeStore') != null){\n        localStorage.removeItem('timeStore')\n        updatingTime(time)\n        window.location.replace('/select-payment')\n       \n    }\n\n    }\n\n    const updatingTime = (time) => {\n            localStorage.setItem('timeStore', time)     \n    }\n\n    return (\n        <span onClick={payment_action} id='link' className={`btn-confirm box-shadow content-align ${timer.extra}`}>\n            <span className='confirm_title'>{timer.title}</span>\n        </span>\n    )\n}\nexport default CircleBtnsImg;"]},"metadata":{},"sourceType":"module"}