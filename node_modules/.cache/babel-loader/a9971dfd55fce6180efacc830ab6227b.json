{"ast":null,"code":"import { Component } from 'react';\n\nclass MaxSelection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.init_check = () => {\n      if (this.localStorateMax == 0) {\n        console.log('localStorage = 0');\n\n        switch (this.hour) {\n          case this.hour < 18 && this.hour > 6 ? this.hour : '':\n            const remaining_time = this.hour;\n            this.max_num = parseFloat(`0.0${remaining_time}`);\n            break;\n\n          case this.hour >= 18 && this.hour < 24 ? this.hour : '':\n            const rem_time = 24 - this.hour + 6;\n            this.max_num = rem_time > 9 ? this.max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`);\n            break;\n\n          case this.hour < 6 ? this.hour : '':\n            const rem_hr = this.hour;\n            this.max_num = `0.0${rem_hr}`;\n            break;\n        }\n\n        localStorage.setItem('max', 1);\n      }\n    };\n\n    this.set_conditions = () => {\n      if (this.hours == 6 && this.localStorateMax == 1) {\n        console.log('localStorage = 1');\n        this.max_num = '0.12';\n      }\n\n      return this.max_num;\n    };\n\n    this.date = new Date();\n    this.getExpTime = localStorage.getItem('expTime').split(':');\n    this.hours = this.getExpTime[0];\n    this.hour = this.date.getHours();\n    this.localStorage = localStorage.getItem('max');\n    this.localStorateMax = localStorage.getItem('max');\n    this.max_num = 0.00;\n  }\n\n}\n\nexport default MaxSelection; // get the localstorage exp time and match it with 6\n// if match, we're going to assign the this.max_num variable to 12\n// if it is not 6, then we're going to switch case and return the result to this.max_num\n// \tif (localStorage_ == 1) {\n// \t\tthis.max_num = '0.12'\n// \t\tconsole.log('still shows under condition')\n// \t}\n// \tif (localStorage_ = 0){ \n// \t\tconsole.log('Not equal to 6')\n// \t}\n// }","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/max_selection/MaxSelection.js"],"names":["Component","MaxSelection","constructor","props","init_check","localStorateMax","console","log","hour","remaining_time","max_num","parseFloat","rem_time","rem_hr","localStorage","setItem","set_conditions","hours","date","Date","getExpTime","getItem","split","getHours"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAIA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,UAZmB,GAYN,MAAK;AACd,UAAI,KAAKC,eAAL,IAAwB,CAA5B,EAA+B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACY,gBAAQ,KAAKC,IAAb;AACA,eAAK,KAAKA,IAAL,GAAY,EAAZ,IAAkB,KAAKA,IAAL,GAAW,CAA7B,GAA+B,KAAKA,IAApC,GAA2C,EAAhD;AACI,kBAAMC,cAAc,GAAG,KAAKD,IAA5B;AACA,iBAAKE,OAAL,GAAeC,UAAU,CAAE,MAAKF,cAAe,EAAtB,CAAzB;AACA;;AACJ,eAAM,KAAKD,IAAL,IAAa,EAAb,IAAmB,KAAKA,IAAL,GAAY,EAA/B,GAAoC,KAAKA,IAAzC,GAAgD,EAAtD;AACI,kBAAMI,QAAQ,GAAI,KAAK,KAAKJ,IAAX,GAAmB,CAApC;AACA,iBAAKE,OAAL,GAAgBE,QAAQ,GAAG,CAAX,GAAe,KAAKF,OAAL,GAAeC,UAAU,CAAE,KAAIC,QAAS,EAAf,CAAxC,GAA4DD,UAAU,CAAE,MAAKC,QAAS,EAAhB,CAAtF;AACA;;AACJ,eAAK,KAAKJ,IAAL,GAAW,CAAX,GAAa,KAAKA,IAAlB,GAAyB,EAA9B;AACI,kBAAMK,MAAM,GAAG,KAAKL,IAApB;AACA,iBAAKE,OAAL,GAAgB,MAAKG,MAAO,EAA5B;AAEA;AAbJ;;AAeAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4B,CAA5B;AACf;AACJ,KAhCkB;;AAAA,SAkCnBC,cAlCmB,GAkCF,MAAM;AACnB,UAAI,KAAKC,KAAL,IAAc,CAAd,IAAmB,KAAKZ,eAAL,IAAwB,CAA/C,EAAkD;AAC9CC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAKG,OAAL,GAAe,MAAf;AACH;;AACD,aAAO,KAAKA,OAAZ;AAEH,KAzCkB;;AAEf,SAAKQ,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACA,SAAKC,UAAL,GAAkBN,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCC,KAAhC,CAAsC,GAAtC,CAAlB;AACA,SAAKL,KAAL,GAAa,KAAKG,UAAL,CAAgB,CAAhB,CAAb;AACA,SAAKZ,IAAL,GAAY,KAAKU,IAAL,CAAUK,QAAV,EAAZ;AACA,SAAKT,YAAL,GAAoBA,YAAY,CAACO,OAAb,CAAqB,KAArB,CAApB;AACA,SAAKhB,eAAL,GAAuBS,YAAY,CAACO,OAAb,CAAqB,KAArB,CAAvB;AACA,SAAKX,OAAL,GAAe,IAAf;AACH;;AAVgC;;AA6CrC,eAAeT,YAAf,C,CAEE;AACA;AACA;AACD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { Component } from 'react'\n\n\n\nclass MaxSelection extends Component {\n    constructor(props) {\n        super(props)\n        this.date = new Date()\n        this.getExpTime = localStorage.getItem('expTime').split(':')\n        this.hours = this.getExpTime[0]\n        this.hour = this.date.getHours()\n        this.localStorage = localStorage.getItem('max')\n        this.localStorateMax = localStorage.getItem('max')\n        this.max_num = 0.00\n    }\n\n\n    init_check = () =>{ \n        if (this.localStorateMax == 0) {\n            console.log('localStorage = 0')\n                        switch (this.hour) {\n                        case(this.hour < 18 && this.hour >6?this.hour : ''):\n                            const remaining_time = this.hour\n                            this.max_num = parseFloat(`0.0${remaining_time}`)\n                            break;\n                        case (this.hour >= 18 && this.hour < 24 ? this.hour : ''):\n                            const rem_time = (24 - this.hour) + 6\n                            this.max_num = (rem_time > 9 ? this.max_num = parseFloat(`0.${rem_time}`) : parseFloat(`0.0${rem_time}`))\n                            break;\n                        case(this.hour <6?this.hour : ''):\n                            const rem_hr = this.hour\n                            this.max_num = `0.0${rem_hr}`\n\n                            break;\n                    }\n                        localStorage.setItem('max', 1)\n        }\n    }\n\n    set_conditions = () => {\n        if (this.hours == 6 && this.localStorateMax == 1) {\n            console.log('localStorage = 1')\n            this.max_num = '0.12'\n        }\n        return this.max_num\n\n    }\n}\n\nexport default MaxSelection;\n\n\t\t// get the localstorage exp time and match it with 6\n\t\t// if match, we're going to assign the this.max_num variable to 12\n\t\t// if it is not 6, then we're going to switch case and return the result to this.max_num\n\t// \tif (localStorage_ == 1) {\n\t// \t\tthis.max_num = '0.12'\n\t// \t\tconsole.log('still shows under condition')\n\t// \t}\n\t// \tif (localStorage_ = 0){ \n\n\t// \t\tconsole.log('Not equal to 6')\n\t// \t}\n\t// }\n"]},"metadata":{},"sourceType":"module"}