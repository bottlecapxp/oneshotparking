{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bottlecapmedia/Desktop/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bottlecapmedia/Desktop/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bottlecapmedia/Desktop/Applications/OneShot Parking/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{PaymentContext}from'../Context/PaymentContext';import{CardNumberElement,CardCvcElement,CardExpiryElement,useElements,useStripe}from'@stripe/react-stripe-js';import Lock from'../Assets/lock.png';import CreditCardIcon from\"../Assets/ccIcon.svg\";import axios from'axios';import'../Pages/pages.css';import Loading from'../Components/Loading/Loading';import{withRouter,useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StripePayment=function StripePayment(){// using state to keep track of stripe payment, show errors, and manange user interface\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),success=_useState2[0],setSuccess=_useState2[1];var _useState3=useState({status:\"Enter your card's information below\"}),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),processing=_useState6[0],setProcessing=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),disabled=_useState8[0],setDisabled=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),clientSecret=_useState10[0],setClientSecrete=_useState10[1];var _useContext=useContext(PaymentContext),userInfo=_useContext.userInfo,totalbilling=_useContext.totalbilling,darkMode=_useContext.darkMode;var _useState11=useState({globalContainer:'global_container',color:'#585858',submitBtn:'submitBtn',card:'card_'}),_useState12=_slicedToArray(_useState11,2),darkModeStyle=_useState12[0],setDarkModeStyle=_useState12[1];var stripe=useStripe();var element=useElements();var history=useHistory();var CARD_ELEMENT_OPTIONS={style:{base:{color:'white'}}};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var _yield$stripe$createP,error,paymentMethod;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return stripe.createPaymentMethod({type:'card',card:element.getElement(CardNumberElement,CardExpiryElement,CardCvcElement)});case 3:_yield$stripe$createP=_context.sent;error=_yield$stripe$createP.error;paymentMethod=_yield$stripe$createP.paymentMethod;if(!error){try{setTimeout(function(){history.push('/remaining-time/');},2000);setSuccess(true);// const { id } = paymentMethod\n// const response = await axios.post(\"https://bottlecapxp.github.io/oneshot/payment\", {\n//     name: userInfo.name, \n//     phone: userInfo.phone, \n//     license: userInfo.license,\n//     amount: totalbilling * 100,\n//     id\n// })\n// if (response.data.success) {\n//     // setTimeOut to Change to next page\n//     setTimeout(()=>{\n//         history.push('/remaining-time/')\n//     }, 2000)\n//         console.log(\"SuccessFul Payment\")\n//         setSuccess(true)\n// }\n}catch(error){// Change the title information\nsetStatus({status:error});}}case 7:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();// end of handle submit\nuseEffect(function(){if(darkMode>=1800||darkMode<=600){setDarkModeStyle({globalContainer:'global_container_dark',color:'white',submitBtn:'submitBtn_dark',card:'card_dark'});}},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(darkModeStyle.globalContainer,\" choose_lot\"),children:stripe?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"global_content_title slim\",style:{textAlign:'center',marginTop:'-50%',color:darkModeStyle.color},children:status.status}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:darkModeStyle.card,children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"stacked_\",children:[/*#__PURE__*/_jsx(\"label\",{style:{color:darkModeStyle.color},id:\"CCnumberLabel\",children:\"Enter Your Card Number\"}),/*#__PURE__*/_jsx(\"div\",{id:\"CCnumber\",children:/*#__PURE__*/_jsx(CardNumberElement,{options:CARD_ELEMENT_OPTIONS})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth_holder\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stacked_\",children:[/*#__PURE__*/_jsx(\"label\",{style:{color:darkModeStyle.color},children:\"Expiration\"}),/*#__PURE__*/_jsx(\"div\",{id:\"expiration\",children:/*#__PURE__*/_jsx(CardExpiryElement,{options:CARD_ELEMENT_OPTIONS})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stacked_\",children:[/*#__PURE__*/_jsx(\"label\",{style:{color:darkModeStyle.color},children:\"CVC\"}),/*#__PURE__*/_jsx(\"div\",{id:\"cvc\",children:/*#__PURE__*/_jsx(CardCvcElement,{options:CARD_ELEMENT_OPTIONS})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{className:\"ccIcon\",src:CreditCardIcon,alt:\"creditCard_logo\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"securePaymentHolder\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"securePayment_\",children:[\"  \",/*#__PURE__*/_jsx(\"img\",{className:\"lock\",src:Lock}),/*#__PURE__*/_jsx(\"p\",{style:{color:darkModeStyle.color},children:\"Secure Payment\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"ccCardSubmissionHolder\",children:/*#__PURE__*/_jsx(\"input\",{style:success?{color:'green',border:'1px solid green !important'}:{color:'#FF5759',border:'1px solid #FF5759 !important'},className:\"\".concat(darkModeStyle.submitBtn,\" ccCardSubmission\"),type:\"submit\",value:success?'Approved!':'Pay Now'})})]})]}):/*#__PURE__*/_jsx(Loading,{})})});};export default StripePayment;","map":{"version":3,"sources":["/Users/bottlecapmedia/Desktop/Applications/OneShot Parking/src/Stripe/Stripe-CC-Payment.js"],"names":["React","useState","useContext","useEffect","PaymentContext","CardNumberElement","CardCvcElement","CardExpiryElement","useElements","useStripe","Lock","axios","Loading","withRouter","useHistory","StripePayment","success","setSuccess","status","setStatus","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecrete","userInfo","totalbilling","darkMode","globalContainer","color","submitBtn","card","darkModeStyle","setDarkModeStyle","stripe","element","history","CARD_ELEMENT_OPTIONS","style","base","handleSubmit","e","preventDefault","createPaymentMethod","type","getElement","error","paymentMethod","setTimeout","push","textAlign","marginTop","CreditCardIcon","border"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport {PaymentContext} from '../Context/PaymentContext'\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport Lock from '../Assets/lock.png'\nimport CreditCardIcon from '../Assets/ccIcon.svg'\nimport axios from 'axios'\nimport '../Pages/pages.css'\nimport Loading from '../Components/Loading/Loading'\nimport { withRouter, useHistory } from 'react-router-dom'\n\n\nconst StripePayment = () => {\n    // using state to keep track of stripe payment, show errors, and manange user interface\n    const [success, setSuccess] = useState(false)\n    const [status, setStatus] = useState({\n        status: \"Enter your card's information below\"\n    })\n    const [processing, setProcessing] = useState('')\n    const [disabled, setDisabled] = useState(true)\n    const [clientSecret, setClientSecrete] = useState('')\n    const {userInfo, totalbilling, darkMode} = useContext(PaymentContext)\n    const [darkModeStyle, setDarkModeStyle] = useState({\n        globalContainer: 'global_container', \n        color: '#585858', \n        submitBtn: 'submitBtn',\n        card: 'card_'   \n    })\n\n\n    const stripe = useStripe()\n    const element = useElements()\n    const history = useHistory()\n\n    const CARD_ELEMENT_OPTIONS = {\n        style: { \n            base: { \n                color: 'white'\n            }\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n    \n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: element.getElement(CardNumberElement, CardExpiryElement, CardCvcElement),\n        })\n\n        if (!error) {\n            try {\n                setTimeout(()=>{\n                        history.push('/remaining-time/')\n                        }, 2000)\n                setSuccess(true)\n                // const { id } = paymentMethod\n                // const response = await axios.post(\"https://bottlecapxp.github.io/oneshot/payment\", {\n                //     name: userInfo.name, \n                //     phone: userInfo.phone, \n                //     license: userInfo.license,\n                //     amount: totalbilling * 100,\n                //     id\n                // })\n                // if (response.data.success) {\n                //     // setTimeOut to Change to next page\n                //     setTimeout(()=>{\n                //         history.push('/remaining-time/')\n                //     }, 2000)\n                //         console.log(\"SuccessFul Payment\")\n                //         setSuccess(true)\n                 \n                  \n                // }\n\n            } catch (error) {\n                // Change the title information\n                setStatus({\n                    status: error\n                })\n            }\n        }\n\n    } // end of handle submit\n\n    useEffect(()=>{\n        if(darkMode >= 1800 || darkMode <= 600){\n            setDarkModeStyle({\n                globalContainer: 'global_container_dark',\n                color: 'white',\n                submitBtn: 'submitBtn_dark',\n                card: 'card_dark' \n            })\n        }\n    }, [])\n    return (\n        <>\n            <div className={`${darkModeStyle.globalContainer} choose_lot`}>\n                {stripe? \n\n                <div>\n                    <h1 className='global_content_title slim' style={{ textAlign: 'center', marginTop: '-50%', color: darkModeStyle.color }}>{status.status}</h1>\n                    <form onSubmit={handleSubmit} className={darkModeStyle.card}> {/* this should be a form */}\n                        {/* Enter your card numner */}\n                        <div className='stacked_'>\n                            <label style={{color: darkModeStyle.color}} id='CCnumberLabel'>Enter Your Card Number</label>\n                            <div id='CCnumber'>\n                                <CardNumberElement options={CARD_ELEMENT_OPTIONS}/>\n                            </div>\n                        </div>\n                        {/* Expiration CVC & Icon */}\n                        <div className='auth_holder'>\n                            <div className='stacked_'>\n                                <label style={{color: darkModeStyle.color}}>Expiration</label>\n                                <div id='expiration'>\n                                    <CardExpiryElement options={CARD_ELEMENT_OPTIONS}/>\n                                </div>\n\n                            </div>\n                            <div className='stacked_'>\n                                <label style={{color: darkModeStyle.color}}>CVC</label>\n                                <div id='cvc'>\n                                    <CardCvcElement options={CARD_ELEMENT_OPTIONS} />\n                                </div>\n                            </div>\n                            <div>\n                                <img className='ccIcon' src={CreditCardIcon} alt='creditCard_logo'></img>\n                            </div>\n                        </div>\n                        <div className='securePaymentHolder'>\n                            <div className='securePayment_'>  {/* display flex */}\n                                {/* image */}\n                                <img className='lock' src={Lock}></img>\n                                <p style={{color: darkModeStyle.color}}>Secure Payment</p>\n                                {/* text info */}\n                            </div>\n                        </div>\n\n                        {/* Button here */}\n                        <div className='ccCardSubmissionHolder'>\n                            <input style={success? { color: 'green', border: '1px solid green !important' }:{ color: '#FF5759',  border: '1px solid #FF5759 !important' }} className={`${darkModeStyle.submitBtn} ccCardSubmission`} type='submit' value={success? 'Approved!': 'Pay Now'}></input>\n                        </div>\n\n\n                    </form>\n                </div>\n                :\n                <Loading />\n}\n            </div>\n        </>\n    )\n}\nexport default StripePayment;\n\n"]},"metadata":{},"sourceType":"module"}