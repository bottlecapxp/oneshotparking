{"ast":null,"code":"var _jsxFileName = \"/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Timer/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { PaymentContext } from '../../Context/PaymentContext';\nimport \"../Timer/Timer.css\";\nimport { Howl, Howler } from 'howler';\nimport Tick from '../../Assets/tick.mp3';\nimport Moon from '../../Assets/moon.png';\nimport Day from \"../../Assets/sun.svg\";\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from \"react-circular-input\";\nimport TimerLogic from \"./TimerLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = props => {\n  _s();\n\n  // const today = new Date();\n  const timerLogic = new TimerLogic();\n  const {\n    totalbilling,\n    dayTime,\n    dayTimeBilling,\n    nightTime,\n    nightTimeBilling,\n    setExpiredTime,\n    setStartTime,\n    darkMode\n  } = useContext(PaymentContext); // const pGenerator = new PaymentGenerator();\n\n  const [value, setValue] = useState(null);\n  const [validateDayTime, setDayTimeValidation] = useState();\n  const [validateNightTime, setNightTimeValidation] = useState();\n  const [darkModeStyle, setDarkModeStyle] = useState({\n    circleContainer: 'timeInfo',\n    costAmount: 'cost_amount',\n    circularTrack: '#eee'\n  });\n  var hours = Math.floor(timerLogic.scrollTime(timerLogic.stepValue(value)) / 100);\n  var minutes = timerLogic.scrollTime(timerLogic.stepValue(value)) % 100;\n  const time_unit_ = ['am', 'pm'];\n  var timeUnit;\n  var start_time_unit;\n  const currentTime = new Date();\n  var expiredMinutes = parseInt(currentTime.getMinutes() + minutes);\n  var expiredHours = currentTime.getHours() + hours;\n  var timer_expired_hours = currentTime.getHours() + hours;\n\n  const play_sound = () => {\n    console.log(`Value: ${value}`); //  switch(value){\n    // \t case'': \n    // \t break;\n    //  }\n  };\n\n  play_sound();\n\n  const twelve_hour_time = () => {\n    if (expiredHours > 12) {\n      expiredHours = expiredHours - 12;\n      twelve_hour_time();\n    }\n  };\n\n  twelve_hour_time();\n\n  const set_meridiem = () => {\n    var time_expression = currentTime.getHours() + hours;\n    const start_meridiem = currentTime.getHours();\n\n    switch (start_meridiem) {\n      case start_meridiem > 12 ? start_meridiem : null:\n        start_time_unit = time_unit_[1];\n        break;\n\n      case start_meridiem < 12 ? start_meridiem : null:\n        start_time_unit = time_unit_[0];\n        break;\n    }\n\n    switch (time_expression) {\n      case time_expression >= 12 && time_expression <= 24 ? time_expression : null:\n        timeUnit = time_unit_[1];\n        break;\n\n      case time_expression > 24 || time_expression < 12 ? time_expression : null:\n        timeUnit = time_unit_[0];\n        break;\n    }\n\n    if (expiredMinutes < 10) {\n      expiredMinutes = `${0}${expiredMinutes}`;\n    }\n  };\n\n  set_meridiem();\n  var expTime = `${expiredHours}:${expiredMinutes}${timeUnit}`;\n  var expTimeInSecs = timer_expired_hours * 3600 + expiredMinutes * 60;\n  var startTime = `${currentTime.getHours()}:${currentTime.getMinutes() < 10 ? `0${currentTime.getMinutes()}` : currentTime.getMinutes()}${start_time_unit}`;\n  localStorage.setItem('expTimeInSecs', expTimeInSecs);\n  localStorage.setItem('expTime', expTime);\n  localStorage.setItem('total', totalbilling); // Keeps track of time changes\n\n  useEffect(() => {\n    if (darkMode >= 1800 || darkMode <= 600) {\n      setDarkModeStyle({\n        circleContainer: 'timeInfo_dark',\n        costAmount: 'cost_amount_dark',\n        circularTrack: '#1B242F'\n      });\n    }\n\n    setValue(value + props.addTime);\n\n    if (dayTime == 0) {\n      setDayTimeValidation(true);\n    } else {\n      setDayTimeValidation(false);\n    }\n\n    if (nightTime == 0) {\n      setNightTimeValidation(true);\n    }\n\n    localStorage.setItem('startTime', startTime);\n    setStartTime(startTime);\n  }, [props.addTime, value]);\n  setExpiredTime(expTime);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: darkModeStyle.circleContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"time_holder\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"set_time\",\n            style: {\n              marginTop: '10px'\n            },\n            children: \"Set Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"time\",\n            children: `${hours}h:${minutes}m`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"set_time\",\n            style: {\n              marginTop: '10px'\n            },\n            children: \"Expires at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rate_\",\n            style: {\n              textAlign: 'center'\n            },\n            children: expTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CircularInput, {\n        radius: 115,\n        value: timerLogic.stepValue(value),\n        onChange: v => {\n          setValue(timerLogic.stepValue(v));\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularTrack, {\n          strokeWidth: 10,\n          stroke: darkModeStyle.circularTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          className: \"bar\",\n          stroke: \"#ff4f4f\",\n          strokeWidth: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircularThumb, {\n          r: 15,\n          fill: \"#F0F0F3\",\n          stroke: \"#ff4f4f\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cost_holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: darkModeStyle.costAmount,\n        children: \"Total Cost: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price\",\n        children: [\"$\", `${totalbilling}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Timer, \"ba6eJ2YpGhgMMX4800cRt29OnYs=\");\n\n_c = Timer;\nexport default Timer;\n{\n  /* <p className='set_time'>Daily Rates</p> */\n}\n{\n  /* Rates Settings */\n}\n{\n  /* <div className='rate_container'>\n  <div className='daily_container day'>\n  \t<img id='sun' src={Day} alt='sun'></img>\n  \t<p className='rate_'>$4hr</p>\n  </div>\n  <div className='daily_container night'>\n  \t<img id='moon' src={Moon} alt='moon'></img>\n  \t<p className='rate_'>$6hr</p>\n  </div>\n  </div> */\n} // if(expiredHours == 24){\n// \thours = 12\n// \ttimeUnit = time_unit_[0]\n// }\n// if(expiredHours > 24){\n// \thours = hours - 24\n// \ttimeUnit = time_unit_[0]\n// }\n// if(expiredHours >= 12){\n// \ttimeUnit = time_unit_[1]\n// }\n// if(currentTime.getHours() >= 12){\n// \tcTimeUnit = time_unit_[1]\n// }else{\n// \tcTimeUnit = time_unit_[0]\n// }\n// if(expiredMinutes > 60){\n// \texpiredMinutes = expiredMinutes - 60\n// \texpiredHours = expiredHours + 1\n// }\n// if(expiredHours > 12){\n// \texpiredHours = expiredHours - 12 \n// \tif(expiredHours > 12 ){ \n// \t\texpiredHours = expiredHours - 12\n// \t}\n// }\n// if(minutes == 0){\n// \tminutes = '00'\n// }\n// DEPRECATED CODE - LIVES FOR 30 DAYS THEN DELETED\n// <div className='overlap_Cost'>\n// {/* Day rate */}\n// <div className='day_rate'>\n// \t<div className='info_holder dayRate_icon'>\n// \t<img id='sun' src={Day} alt='sun'></img>\n// \t</div>\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(dayTime/100)}hrs : {Math.floor(dayTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${dayTimeBilling}</div>\n// </div>\n// {/* Night Rate */}\n// <div className='night_rate'>\n// \t<div className='info_holder nightRate_icon'>\n// \t<img id='moon' src={Moon} alt='moon'></img>\n// \t</div>\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(nightTime/100)}hrs : {Math.floor(nightTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${nightTimeBilling}</div>\n// </div>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/bottlecapmedia/Documents/Applications/OneShot Parking/src/Components/Timer/Timer.js"],"names":["React","useContext","useState","useEffect","PaymentContext","Howl","Howler","Tick","Moon","CircularInput","CircularTrack","CircularProgress","CircularThumb","TimerLogic","Timer","props","timerLogic","totalbilling","dayTime","dayTimeBilling","nightTime","nightTimeBilling","setExpiredTime","setStartTime","darkMode","value","setValue","validateDayTime","setDayTimeValidation","validateNightTime","setNightTimeValidation","darkModeStyle","setDarkModeStyle","circleContainer","costAmount","circularTrack","hours","Math","floor","scrollTime","stepValue","minutes","time_unit_","timeUnit","start_time_unit","currentTime","Date","expiredMinutes","parseInt","getMinutes","expiredHours","getHours","timer_expired_hours","play_sound","console","log","twelve_hour_time","set_meridiem","time_expression","start_meridiem","expTime","expTimeInSecs","startTime","localStorage","setItem","addTime","marginTop","textAlign","v"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { PaymentContext } from '../../Context/PaymentContext'\nimport \"../Timer/Timer.css\";\nimport {Howl, Howler} from 'howler'\nimport Tick from '../../Assets/tick.mp3'\nimport Moon from '../../Assets/moon.png'\nimport Day from '../../Assets/sun.svg'\n\nimport {\n\tCircularInput,\n\tCircularTrack,\n\tCircularProgress,\n\tCircularThumb,\n} from \"react-circular-input\";\nimport TimerLogic from \"./TimerLogic\";\n\n\n\nconst Timer = (props) => {\n\t// const today = new Date();\n\tconst timerLogic = new TimerLogic();\n\tconst { totalbilling, dayTime, dayTimeBilling, nightTime, nightTimeBilling, setExpiredTime, setStartTime, darkMode } = useContext(PaymentContext)\n\t// const pGenerator = new PaymentGenerator();\n\tconst [value, setValue] = useState(null);\n\tconst [validateDayTime, setDayTimeValidation] = useState()\n\tconst [validateNightTime, setNightTimeValidation] = useState()\n\tconst [darkModeStyle, setDarkModeStyle] = useState({\n\t\tcircleContainer: 'timeInfo', \n\t\tcostAmount: 'cost_amount',\n\t\tcircularTrack: '#eee'\n\t\t \n\t })\n\n\tvar hours = Math.floor(timerLogic.scrollTime(timerLogic.stepValue(value))/100)\n\tvar minutes = timerLogic.scrollTime(timerLogic.stepValue(value))%100\n\tconst time_unit_ = ['am', 'pm']\n\tvar timeUnit;\n\tvar start_time_unit; \n\tconst currentTime = new Date();\n\tvar expiredMinutes = parseInt(currentTime.getMinutes() + minutes)\n\tvar expiredHours = currentTime.getHours() + hours\n\tvar timer_expired_hours = currentTime.getHours() + hours\n\n\n\n\n\t const play_sound = () =>{\n\t\t console.log(`Value: ${value}`)\n\t\t//  switch(value){\n\t\t// \t case'': \n\t\t// \t break;\n\t\t//  }\n\t }\n\t play_sound()\n\n\n\n\n\n\n\n\n\n\n\tconst twelve_hour_time = () => { \n\t\tif(expiredHours > 12){ \n\t\t\texpiredHours = expiredHours - 12 \n\t\t\ttwelve_hour_time()\n\t\t}\n\t}\n\ttwelve_hour_time()\n\n\tconst set_meridiem = () => { \n\t\tvar time_expression = currentTime.getHours() + hours\n\t\tconst start_meridiem = currentTime.getHours()\n\n\t\tswitch(start_meridiem){ \n\t\t\tcase(start_meridiem > 12? start_meridiem: null):\n\t\t\tstart_time_unit = time_unit_[1]\n\t\t\tbreak;\n\t\t\tcase (start_meridiem < 12 ? start_meridiem: null): \n\t\t\tstart_time_unit = time_unit_[0]\n\t\t\tbreak;\n\t\t}\n\n\n\n\t\tswitch(time_expression){\n\t\t\tcase (time_expression >= 12 && time_expression <= 24 ? time_expression : null):\n\t\t\t\ttimeUnit = time_unit_[1]\n\t\t\t\tbreak; \n\t\t\tcase (time_expression > 24 || time_expression < 12 ? time_expression : null): \n\t\t\t\ttimeUnit = time_unit_[0]\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif(expiredMinutes < 10){\n\t\t\texpiredMinutes = `${0}${expiredMinutes}`\n\t\t}\n\n\t}\n\tset_meridiem()\n\t\n\n\tvar expTime = `${expiredHours}:${expiredMinutes}${timeUnit}`\n\tvar expTimeInSecs = (timer_expired_hours * 3600) + (expiredMinutes * 60)\n\tvar startTime = `${currentTime.getHours()}:${currentTime.getMinutes() < 10? `0${currentTime.getMinutes()}`: currentTime.getMinutes() }${start_time_unit}`\n\n\n\tlocalStorage.setItem('expTimeInSecs', expTimeInSecs)\n\tlocalStorage.setItem('expTime', expTime)\n\tlocalStorage.setItem('total', totalbilling)\n\n\t// Keeps track of time changes\n\tuseEffect(() => {\n\n\t\t\tif(darkMode >= 1800 || darkMode <= 600){\n\t\t\t\tsetDarkModeStyle({\n\t\t\t\t\tcircleContainer: 'timeInfo_dark', \n\t\t\t\t\tcostAmount: 'cost_amount_dark', \n\t\t\t\t\tcircularTrack: '#1B242F'\n\t\t\t\t})\n\t\t\t}\n\n\n\t\tsetValue(value + props.addTime);\n\n\t\tif (dayTime == 0) {\n\t\t\tsetDayTimeValidation(true)\n\t\t} else { setDayTimeValidation(false) }\n\t\tif (nightTime == 0) {\n\t\t\tsetNightTimeValidation(true)\n\t\t}\n\t\tlocalStorage.setItem('startTime', startTime)\n\t\t\n\t\t\n\t\tsetStartTime(startTime)\n\n\t}, [props.addTime, value]);\n\n\n\n\n\n\n\tsetExpiredTime(expTime)\n\treturn (\n\t\t<div className='timer_container'>\n\t\t\t<div className='timer_holder'>\n\t\t\t\t<div id={darkModeStyle.circleContainer}>\n\t\t\t\t\t<div id='time_holder'>\n\t\t\t\t\t<p className='set_time' style={{marginTop: '10px'}}>Set Duration</p>\n\t\t\t\t\t\t<p id='time'>{`${hours}h:${minutes}m`}</p>\n\n\t\t\t\t\t<p className='set_time' style={{marginTop: '10px'}}>Expires at</p>\n\t\t\t\t\t<p className='rate_' style={{textAlign: 'center'}}>{expTime}</p>\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<CircularInput radius={115}\n\t\t\t\t\tvalue={timerLogic.stepValue(value)}\n\t\t\t\t\tonChange={(v) => {\t\t\n\t\t\t\t\t\tsetValue(timerLogic.stepValue(v))\n\t\t\t\t\t\t}}>\n\t\t\t\t\t<CircularTrack strokeWidth={10} stroke={darkModeStyle.circularTrack} />\n\t\t\t\t\t<CircularProgress className='bar' stroke='#ff4f4f' strokeWidth={12} />\n\t\t\t\t\t<CircularThumb r={15} fill='#F0F0F3' stroke='#ff4f4f' />\n\t\t\t\t</CircularInput>\n\t\t\t</div>\n\n\n\t\t\t<div className='cost_holder'><div id={darkModeStyle.costAmount}>Total Cost: </div><div className='price'>${`${totalbilling}`}</div></div>\n\n\t\t</div>\n\t);\n};\nexport default Timer;\n\n\t\n\t\t\t\t\t\t{/* <p className='set_time'>Daily Rates</p> */}\n\t\t\t\t\t\t{/* Rates Settings */}\n\t\t\t\t\t\t{/* <div className='rate_container'>\n\t\t\t\t\t\t\t<div className='daily_container day'>\n\t\t\t\t\t\t\t\t<img id='sun' src={Day} alt='sun'></img>\n\t\t\t\t\t\t\t\t<p className='rate_'>$4hr</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='daily_container night'>\n\t\t\t\t\t\t\t\t<img id='moon' src={Moon} alt='moon'></img>\n\t\t\t\t\t\t\t\t<p className='rate_'>$6hr</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div> */}\n\t// if(expiredHours == 24){\n\t// \thours = 12\n\t// \ttimeUnit = time_unit_[0]\n\t// }\n\t// if(expiredHours > 24){\n\t// \thours = hours - 24\n\t// \ttimeUnit = time_unit_[0]\n\t// }\n\t// if(expiredHours >= 12){\n\t// \ttimeUnit = time_unit_[1]\n\t// }\n\n\t// if(currentTime.getHours() >= 12){\n\t// \tcTimeUnit = time_unit_[1]\n\t// }else{\n\t// \tcTimeUnit = time_unit_[0]\n\t// }\n\n\n\t// if(expiredMinutes > 60){\n\t// \texpiredMinutes = expiredMinutes - 60\n\t// \texpiredHours = expiredHours + 1\n\t// }\n\n\t// if(expiredHours > 12){\n\t// \texpiredHours = expiredHours - 12 \n\t// \tif(expiredHours > 12 ){ \n\t// \t\texpiredHours = expiredHours - 12\n\t// \t}\n\n\t// }\n\n\n\t// if(minutes == 0){\n\t// \tminutes = '00'\n\t// }\n\n// DEPRECATED CODE - LIVES FOR 30 DAYS THEN DELETED\n\n// <div className='overlap_Cost'>\n// {/* Day rate */}\n// <div className='day_rate'>\n// \t<div className='info_holder dayRate_icon'>\n// \t<img id='sun' src={Day} alt='sun'></img>\n// \t</div>\n\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(dayTime/100)}hrs : {Math.floor(dayTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${dayTimeBilling}</div>\n\n// </div>\n// {/* Night Rate */}\n// <div className='night_rate'>\n// \t<div className='info_holder nightRate_icon'>\n// \t<img id='moon' src={Moon} alt='moon'></img>\n// \t</div>\n// \t<div id='hours_' className='info_holder dayRate_time'>{Math.floor(nightTime/100)}hrs : {Math.floor(nightTime%100)}mins</div>\n// \t<div id='cost_' className='info_holder dayRate_cost'>${nightTimeBilling}</div>\n\n// </div>\n\n// </div>"]},"metadata":{},"sourceType":"module"}